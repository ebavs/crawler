/*! For license information please see main.js.LICENSE.txt */
(()=>{var e={7482:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.CancellationError=a.CancellationToken=void 0;const t=p(2361);class d extends t.EventEmitter{constructor(e){super(),this.parentCancelHandler=null,this._parent=null,this._cancelled=!1,null!=e&&(this.parent=e)}get cancelled(){return this._cancelled||null!=this._parent&&this._parent.cancelled}set parent(e){this.removeParentCancelHandler(),this._parent=e,this.parentCancelHandler=()=>this.cancel(),this._parent.onCancel(this.parentCancelHandler)}cancel(){this._cancelled=!0,this.emit("cancel")}onCancel(e){this.cancelled?e():this.once("cancel",e)}createPromise(e){if(this.cancelled)return Promise.reject(new i);const a=()=>{if(null!=p)try{this.removeListener("cancel",p),p=null}catch(e){}};let p=null;return new Promise(((a,t)=>{let d=null;p=()=>{try{null!=d&&(d(),d=null)}finally{t(new i)}},this.cancelled?p():(this.onCancel(p),e(a,t,(e=>{d=e})))})).then((e=>(a(),e))).catch((e=>{throw a(),e}))}removeParentCancelHandler(){const e=this._parent;null!=e&&null!=this.parentCancelHandler&&(e.removeListener("cancel",this.parentCancelHandler),this.parentCancelHandler=null)}dispose(){try{this.removeParentCancelHandler()}finally{this.removeAllListeners(),this._parent=null}}}a.CancellationToken=d;class i extends Error{constructor(){super("cancelled")}}a.CancellationError=i},432:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.ProgressCallbackTransform=void 0;const t=p(2781);class d extends t.Transform{constructor(e,a,p){super(),this.total=e,this.cancellationToken=a,this.onProgress=p,this.start=Date.now(),this.transferred=0,this.delta=0,this.nextUpdate=this.start+1e3}_transform(e,a,p){if(this.cancellationToken.cancelled)return void p(new Error("cancelled"),null);this.transferred+=e.length,this.delta+=e.length;const t=Date.now();t>=this.nextUpdate&&this.transferred!==this.total&&(this.nextUpdate=t+1e3,this.onProgress({total:this.total,delta:this.delta,transferred:this.transferred,percent:this.transferred/this.total*100,bytesPerSecond:Math.round(this.transferred/((t-this.start)/1e3))}),this.delta=0),p(null,e)}_flush(e){this.cancellationToken.cancelled?e(new Error("cancelled")):(this.onProgress({total:this.total,delta:this.delta,transferred:this.total,percent:100,bytesPerSecond:Math.round(this.transferred/((Date.now()-this.start)/1e3))}),this.delta=0,e(null))}}a.ProgressCallbackTransform=d},9252:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.safeStringifyJson=a.configureRequestOptions=a.safeGetHeader=a.DigestTransform=a.configureRequestUrl=a.configureRequestOptionsFromUrl=a.HttpExecutor=a.parseJson=a.HttpError=a.createHttpError=void 0;const t=p(6113),d=p(5158),i=p(7147),r=p(2781),n=p(7310),o=p(7482),s=p(9152),l=p(432),m=d.default("electron-builder");function u(e,a=null){return new h(e.statusCode||-1,`${e.statusCode} ${e.statusMessage}`+(null==a?"":"\n"+JSON.stringify(a,null,"  "))+"\nHeaders: "+_(e.headers),a)}a.createHttpError=u;const c=new Map([[429,"Too many requests"],[400,"Bad request"],[403,"Forbidden"],[404,"Not found"],[405,"Method not allowed"],[406,"Not acceptable"],[408,"Request timeout"],[413,"Request entity too large"],[500,"Internal server error"],[502,"Bad gateway"],[503,"Service unavailable"],[504,"Gateway timeout"],[505,"HTTP version not supported"]]);class h extends Error{constructor(e,a=`HTTP error: ${c.get(e)||e}`,p=null){super(a),this.statusCode=e,this.description=p,this.name="HttpError",this.code=`HTTP_ERROR_${e}`}isServerError(){return this.statusCode>=500&&this.statusCode<=599}}a.HttpError=h,a.parseJson=function(e){return e.then((e=>null==e||0===e.length?null:JSON.parse(e)))};class f{constructor(){this.maxRedirects=10}request(e,a=new o.CancellationToken,p){b(e);const t=null==p?void 0:JSON.stringify(p),d=t?Buffer.from(t):void 0;if(null!=d){m(t);const{headers:a,...p}=e;e={method:"post",headers:{"Content-Type":"application/json","Content-Length":d.length,...a},...p}}return this.doApiRequest(e,a,(e=>e.end(d)))}doApiRequest(e,a,p,t=0){return m.enabled&&m(`Request: ${_(e)}`),a.createPromise(((d,i,r)=>{const n=this.createRequest(e,(r=>{try{this.handleResponse(r,e,a,d,i,t,p)}catch(e){i(e)}}));this.addErrorAndTimeoutHandlers(n,i,e.timeout),this.addRedirectHandlers(n,e,i,t,(e=>{this.doApiRequest(e,a,p,t).then(d).catch(i)})),p(n,i),r((()=>n.abort()))}))}addRedirectHandlers(e,a,p,t,d){}addErrorAndTimeoutHandlers(e,a,p=6e4){this.addTimeOutHandler(e,a,p),e.on("error",a),e.on("aborted",(()=>{a(new Error("Request has been aborted by the server"))}))}handleResponse(e,a,p,t,d,i,r){var n;if(m.enabled&&m(`Response: ${e.statusCode} ${e.statusMessage}, request options: ${_(a)}`),404===e.statusCode)return void d(u(e,`method: ${a.method||"GET"} url: ${a.protocol||"https:"}//${a.hostname}${a.port?`:${a.port}`:""}${a.path}\n\nPlease double check that your authentication token is correct. Due to security reasons, actual status maybe not reported, but 404.\n`));if(204===e.statusCode)return void t();const o=null!==(n=e.statusCode)&&void 0!==n?n:0,s=o>=300&&o<400,l=y(e,"location");if(s&&null!=l)return i>this.maxRedirects?void d(this.createMaxRedirectError()):void this.doApiRequest(f.prepareRedirectUrlOptions(l,a),p,r,i).then(t).catch(d);e.setEncoding("utf8");let c="";e.on("error",d),e.on("data",(e=>c+=e)),e.on("end",(()=>{try{if(null!=e.statusCode&&e.statusCode>=400){const p=y(e,"content-type"),t=null!=p&&(Array.isArray(p)?null!=p.find((e=>e.includes("json"))):p.includes("json"));d(u(e,`method: ${a.method||"GET"} url: ${a.protocol||"https:"}//${a.hostname}${a.port?`:${a.port}`:""}${a.path}\n\n          Data:\n          ${t?JSON.stringify(JSON.parse(c)):c}\n          `))}else t(0===c.length?null:c)}catch(e){d(e)}}))}async downloadToBuffer(e,a){return await a.cancellationToken.createPromise(((p,t,d)=>{let i=null;const r={headers:a.headers||void 0,redirect:"manual"};w(e,r),b(r),this.doDownload(r,{destination:null,options:a,onCancel:d,callback:e=>{null==e?p(i):t(e)},responseHandler:(e,a)=>{const p=y(e,"content-length");let t=-1;if(null!=p){const e=parseInt(p,10);if(e>0){if(e>524288e3)return void a(new Error("Maximum allowed size is 500 MB"));i=Buffer.alloc(e),t=0}}e.on("data",(e=>{if(-1!==t)e.copy(i,t),t+=e.length;else if(null==i)i=e;else{if(i.length>524288e3)return void a(new Error("Maximum allowed size is 500 MB"));i=Buffer.concat([i,e])}})),e.on("end",(()=>{null!=i&&-1!==t&&t!==i.length?a(new Error(`Received data length ${t} is not equal to expected ${i.length}`)):a(null)}))}},0)}))}doDownload(e,a,p){const t=this.createRequest(e,(t=>{if(t.statusCode>=400)return void a.callback(new Error(`Cannot download "${e.protocol||"https:"}//${e.hostname}${e.path}", status ${t.statusCode}: ${t.statusMessage}`));t.on("error",a.callback);const d=y(t,"location");null==d?null==a.responseHandler?function(e,a){if(p=y(a,"X-Checksum-Sha2"),t=e.options.sha2,d=e.callback,null!=p&&null!=t&&p!==t&&(d(new Error(`checksum mismatch: expected ${t} but got ${p} (X-Checksum-Sha2 header)`)),1))return;var p,t,d;const r=[];if(null!=e.options.onProgress){const p=y(a,"content-length");null!=p&&r.push(new l.ProgressCallbackTransform(parseInt(p,10),e.options.cancellationToken,e.options.onProgress))}const n=e.options.sha512;null!=n?r.push(new g(n,"sha512",128!==n.length||n.includes("+")||n.includes("Z")||n.includes("=")?"base64":"hex")):null!=e.options.sha2&&r.push(new g(e.options.sha2,"sha256","hex"));const o=i.createWriteStream(e.destination);r.push(o);let s=a;for(const a of r)a.on("error",(a=>{o.close(),e.options.cancellationToken.cancelled||e.callback(a)})),s=s.pipe(a);o.on("finish",(()=>{o.close(e.callback)}))}(a,t):a.responseHandler(t,a.callback):p<this.maxRedirects?this.doDownload(f.prepareRedirectUrlOptions(d,e),a,p++):a.callback(this.createMaxRedirectError())}));this.addErrorAndTimeoutHandlers(t,a.callback,e.timeout),this.addRedirectHandlers(t,e,a.callback,p,(e=>{this.doDownload(e,a,p++)})),t.end()}createMaxRedirectError(){return new Error(`Too many redirects (> ${this.maxRedirects})`)}addTimeOutHandler(e,a,p){e.on("socket",(t=>{t.setTimeout(p,(()=>{e.abort(),a(new Error("Request timed out"))}))}))}static prepareRedirectUrlOptions(e,a){const p=v(e,{...a}),t=p.headers;if(null==t?void 0:t.authorization){const a=new n.URL(e);(a.hostname.endsWith(".amazonaws.com")||a.searchParams.has("X-Amz-Credential"))&&delete t.authorization}return p}static retryOnServerError(e,a=3){for(let p=0;;p++)try{return e()}catch(e){if(p<a&&(e instanceof h&&e.isServerError()||"EPIPE"===e.code))continue;throw e}}}function v(e,a){const p=b(a);return w(new n.URL(e),p),p}function w(e,a){a.protocol=e.protocol,a.hostname=e.hostname,e.port?a.port=e.port:a.port&&delete a.port,a.path=e.pathname+e.search}a.HttpExecutor=f,a.configureRequestOptionsFromUrl=v,a.configureRequestUrl=w;class g extends r.Transform{constructor(e,a="sha512",p="base64"){super(),this.expected=e,this.algorithm=a,this.encoding=p,this._actual=null,this.isValidateOnEnd=!0,this.digester=t.createHash(a)}get actual(){return this._actual}_transform(e,a,p){this.digester.update(e),p(null,e)}_flush(e){if(this._actual=this.digester.digest(this.encoding),this.isValidateOnEnd)try{this.validate()}catch(a){return void e(a)}e(null)}validate(){if(null==this._actual)throw s.newError("Not finished yet","ERR_STREAM_NOT_FINISHED");if(this._actual!==this.expected)throw s.newError(`${this.algorithm} checksum mismatch, expected ${this.expected}, got ${this._actual}`,"ERR_CHECKSUM_MISMATCH");return null}}function y(e,a){const p=e.headers[a];return null==p?null:Array.isArray(p)?0===p.length?null:p[p.length-1]:p}function b(e,a,p){null!=p&&(e.method=p),e.headers={...e.headers};const t=e.headers;return null!=a&&(t.authorization=a.startsWith("Basic")||a.startsWith("Bearer")?a:`token ${a}`),null==t["User-Agent"]&&(t["User-Agent"]="electron-builder"),null!=p&&"GET"!==p&&null!=t["Cache-Control"]||(t["Cache-Control"]="no-cache"),null==e.protocol&&null!=process.versions.electron&&(e.protocol="https:"),e}function _(e,a){return JSON.stringify(e,((e,p)=>e.endsWith("Authorization")||e.endsWith("authorization")||e.endsWith("Password")||e.endsWith("PASSWORD")||e.endsWith("Token")||e.includes("password")||e.includes("token")||null!=a&&a.has(e)?"<stripped sensitive data>":p),2)}a.DigestTransform=g,a.safeGetHeader=y,a.configureRequestOptions=b,a.safeStringifyJson=_},9152:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.newError=a.asArray=a.CURRENT_APP_PACKAGE_FILE_NAME=a.CURRENT_APP_INSTALLER_FILE_NAME=a.XElement=a.parseXml=a.ProgressCallbackTransform=a.UUID=a.parseDn=a.githubUrl=a.getS3LikeProviderBaseUrl=a.configureRequestUrl=a.parseJson=a.safeStringifyJson=a.configureRequestOptionsFromUrl=a.configureRequestOptions=a.safeGetHeader=a.DigestTransform=a.HttpExecutor=a.createHttpError=a.HttpError=a.CancellationError=a.CancellationToken=void 0;var t=p(7482);Object.defineProperty(a,"CancellationToken",{enumerable:!0,get:function(){return t.CancellationToken}}),Object.defineProperty(a,"CancellationError",{enumerable:!0,get:function(){return t.CancellationError}});var d=p(9252);Object.defineProperty(a,"HttpError",{enumerable:!0,get:function(){return d.HttpError}}),Object.defineProperty(a,"createHttpError",{enumerable:!0,get:function(){return d.createHttpError}}),Object.defineProperty(a,"HttpExecutor",{enumerable:!0,get:function(){return d.HttpExecutor}}),Object.defineProperty(a,"DigestTransform",{enumerable:!0,get:function(){return d.DigestTransform}}),Object.defineProperty(a,"safeGetHeader",{enumerable:!0,get:function(){return d.safeGetHeader}}),Object.defineProperty(a,"configureRequestOptions",{enumerable:!0,get:function(){return d.configureRequestOptions}}),Object.defineProperty(a,"configureRequestOptionsFromUrl",{enumerable:!0,get:function(){return d.configureRequestOptionsFromUrl}}),Object.defineProperty(a,"safeStringifyJson",{enumerable:!0,get:function(){return d.safeStringifyJson}}),Object.defineProperty(a,"parseJson",{enumerable:!0,get:function(){return d.parseJson}}),Object.defineProperty(a,"configureRequestUrl",{enumerable:!0,get:function(){return d.configureRequestUrl}});var i=p(2487);Object.defineProperty(a,"getS3LikeProviderBaseUrl",{enumerable:!0,get:function(){return i.getS3LikeProviderBaseUrl}}),Object.defineProperty(a,"githubUrl",{enumerable:!0,get:function(){return i.githubUrl}});var r=p(5524);Object.defineProperty(a,"parseDn",{enumerable:!0,get:function(){return r.parseDn}});var n=p(391);Object.defineProperty(a,"UUID",{enumerable:!0,get:function(){return n.UUID}});var o=p(432);Object.defineProperty(a,"ProgressCallbackTransform",{enumerable:!0,get:function(){return o.ProgressCallbackTransform}});var s=p(1089);Object.defineProperty(a,"parseXml",{enumerable:!0,get:function(){return s.parseXml}}),Object.defineProperty(a,"XElement",{enumerable:!0,get:function(){return s.XElement}}),a.CURRENT_APP_INSTALLER_FILE_NAME="installer.exe",a.CURRENT_APP_PACKAGE_FILE_NAME="package.7z",a.asArray=function(e){return null==e?[]:Array.isArray(e)?e:[e]},a.newError=function(e,a){const p=new Error(e);return p.code=a,p}},2487:(e,a)=>{"use strict";function p(e,a){return null!=a&&a.length>0&&(a.startsWith("/")||(e+="/"),e+=a),e}Object.defineProperty(a,"__esModule",{value:!0}),a.getS3LikeProviderBaseUrl=a.githubUrl=void 0,a.githubUrl=function(e,a="github.com"){return`${e.protocol||"https"}://${e.host||a}`},a.getS3LikeProviderBaseUrl=function(e){const a=e.provider;if("s3"===a)return function(e){let a;if(null!=e.endpoint)a=`${e.endpoint}/${e.bucket}`;else if(e.bucket.includes(".")){if(null==e.region)throw new Error(`Bucket name "${e.bucket}" includes a dot, but S3 region is missing`);a="us-east-1"===e.region?`https://s3.amazonaws.com/${e.bucket}`:`https://s3-${e.region}.amazonaws.com/${e.bucket}`}else a="cn-north-1"===e.region?`https://${e.bucket}.s3.${e.region}.amazonaws.com.cn`:`https://${e.bucket}.s3.amazonaws.com`;return p(a,e.path)}(e);if("spaces"===a)return function(e){if(null==e.name)throw new Error("name is missing");if(null==e.region)throw new Error("region is missing");return p(`https://${e.name}.${e.region}.digitaloceanspaces.com`,e.path)}(e);throw new Error(`Not supported provider: ${a}`)}},5524:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.parseDn=void 0,a.parseDn=function(e){let a=!1,p=null,t="",d=0;e=e.trim();const i=new Map;for(let r=0;r<=e.length;r++){if(r===e.length){null!==p&&i.set(p,t);break}const n=e[r];if(a){if('"'===n){a=!1;continue}}else{if('"'===n){a=!0;continue}if("\\"===n){r++;const a=parseInt(e.slice(r,r+2),16);Number.isNaN(a)?t+=e[r]:(r++,t+=String.fromCharCode(a));continue}if(null===p&&"="===n){p=t,t="";continue}if(","===n||";"===n||"+"===n){null!==p&&i.set(p,t),p=null,t="";continue}}if(" "===n&&!a){if(0===t.length)continue;if(r>d){let a=r;for(;" "===e[a];)a++;d=a}if(d>=e.length||","===e[d]||";"===e[d]||null===p&&"="===e[d]||null!==p&&"+"===e[d]){r=d-1;continue}}t+=n}return i}},391:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.nil=a.UUID=void 0;const t=p(6113),d=p(9152),i=t.randomBytes(16);i[0]=1|i[0];const r={},n=[];for(let e=0;e<256;e++){const a=(e+256).toString(16).substr(1);r[a]=e,n[e]=a}class o{constructor(e){this.ascii=null,this.binary=null;const a=o.check(e);if(!a)throw new Error("not a UUID");this.version=a.version,"ascii"===a.format?this.ascii=e:this.binary=e}static v5(e,a){return function(e,a,p,i,r=l.ASCII){const s=t.createHash(a);if("string"!=typeof e&&!Buffer.isBuffer(e))throw d.newError("options.name must be either a string or a Buffer","ERR_INVALID_UUID_NAME");s.update(i),s.update(e);const m=s.digest();let u;switch(r){case l.BINARY:m[6]=15&m[6]|p,m[8]=63&m[8]|128,u=m;break;case l.OBJECT:m[6]=15&m[6]|p,m[8]=63&m[8]|128,u=new o(m);break;default:u=n[m[0]]+n[m[1]]+n[m[2]]+n[m[3]]+"-"+n[m[4]]+n[m[5]]+"-"+n[15&m[6]|p]+n[m[7]]+"-"+n[63&m[8]|128]+n[m[9]]+"-"+n[m[10]]+n[m[11]]+n[m[12]]+n[m[13]]+n[m[14]]+n[m[15]]}return u}(e,"sha1",80,a)}toString(){var e;return null==this.ascii&&(this.ascii=(e=this.binary,n[e[0]]+n[e[1]]+n[e[2]]+n[e[3]]+"-"+n[e[4]]+n[e[5]]+"-"+n[e[6]]+n[e[7]]+"-"+n[e[8]]+n[e[9]]+"-"+n[e[10]]+n[e[11]]+n[e[12]]+n[e[13]]+n[e[14]]+n[e[15]])),this.ascii}inspect(){return`UUID v${this.version} ${this.toString()}`}static check(e,a=0){if("string"==typeof e)return e=e.toLowerCase(),!!/^[a-f0-9]{8}(-[a-f0-9]{4}){3}-([a-f0-9]{12})$/.test(e)&&("00000000-0000-0000-0000-000000000000"===e?{version:void 0,variant:"nil",format:"ascii"}:{version:(240&r[e[14]+e[15]])>>4,variant:s((224&r[e[19]+e[20]])>>5),format:"ascii"});if(Buffer.isBuffer(e)){if(e.length<a+16)return!1;let p=0;for(;p<16&&0===e[a+p];p++);return 16===p?{version:void 0,variant:"nil",format:"binary"}:{version:(240&e[a+6])>>4,variant:s((224&e[a+8])>>5),format:"binary"}}throw d.newError("Unknown type of uuid","ERR_UNKNOWN_UUID_TYPE")}static parse(e){const a=Buffer.allocUnsafe(16);let p=0;for(let t=0;t<16;t++)a[t]=r[e[p++]+e[p++]],3!==t&&5!==t&&7!==t&&9!==t||(p+=1);return a}}function s(e){switch(e){case 0:case 1:case 3:return"ncs";case 4:case 5:return"rfc4122";case 6:return"microsoft";default:return"future"}}var l;a.UUID=o,o.OID=o.parse("6ba7b812-9dad-11d1-80b4-00c04fd430c8"),function(e){e[e.ASCII=0]="ASCII",e[e.BINARY=1]="BINARY",e[e.OBJECT=2]="OBJECT"}(l||(l={})),a.nil=new o("00000000-0000-0000-0000-000000000000")},1089:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.parseXml=a.XElement=void 0;const t=p(6099),d=p(9152);class i{constructor(e){if(this.name=e,this.value="",this.attributes=null,this.isCData=!1,this.elements=null,!e)throw d.newError("Element name cannot be empty","ERR_XML_ELEMENT_NAME_EMPTY");if(!function(e){return r.test(e)}(e))throw d.newError(`Invalid element name: ${e}`,"ERR_XML_ELEMENT_INVALID_NAME")}attribute(e){const a=null===this.attributes?null:this.attributes[e];if(null==a)throw d.newError(`No attribute "${e}"`,"ERR_XML_MISSED_ATTRIBUTE");return a}removeAttribute(e){null!==this.attributes&&delete this.attributes[e]}element(e,a=!1,p=null){const t=this.elementOrNull(e,a);if(null===t)throw d.newError(p||`No element "${e}"`,"ERR_XML_MISSED_ELEMENT");return t}elementOrNull(e,a=!1){if(null===this.elements)return null;for(const p of this.elements)if(n(p,e,a))return p;return null}getElements(e,a=!1){return null===this.elements?[]:this.elements.filter((p=>n(p,e,a)))}elementValueOrEmpty(e,a=!1){const p=this.elementOrNull(e,a);return null===p?"":p.value}}a.XElement=i;const r=new RegExp(/^[A-Za-z_][:A-Za-z0-9_-]*$/i);function n(e,a,p){const t=e.name;return t===a||!0===p&&t.length===a.length&&t.toLowerCase()===a.toLowerCase()}a.parseXml=function(e){let a=null;const p=t.parser(!0,{}),d=[];return p.onopentag=e=>{const p=new i(e.name);if(p.attributes=e.attributes,null===a)a=p;else{const e=d[d.length-1];null==e.elements&&(e.elements=[]),e.elements.push(p)}d.push(p)},p.onclosetag=()=>{d.pop()},p.ontext=e=>{d.length>0&&(d[d.length-1].value=e)},p.oncdata=e=>{const a=d[d.length-1];a.value=e,a.isCData=!0},p.onerror=e=>{throw e},p.write(e),a}},1227:(e,a,p)=>{a.formatArgs=function(a){if(a[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+a[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;const p="color: "+this.color;a.splice(1,0,p,"color: inherit");let t=0,d=0;a[0].replace(/%[a-zA-Z%]/g,(e=>{"%%"!==e&&(t++,"%c"===e&&(d=t))})),a.splice(d,0,p)},a.save=function(e){try{e?a.storage.setItem("debug",e):a.storage.removeItem("debug")}catch(e){}},a.load=function(){let e;try{e=a.storage.getItem("debug")}catch(e){}return!e&&"undefined"!=typeof process&&"env"in process&&(e=process.env.DEBUG),e},a.useColors=function(){return!("undefined"==typeof window||!window.process||"renderer"!==window.process.type&&!window.process.__nwjs)||("undefined"==typeof navigator||!navigator.userAgent||!navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))&&("undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))},a.storage=function(){try{return localStorage}catch(e){}}(),a.destroy=(()=>{let e=!1;return()=>{e||(e=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),a.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],a.log=console.debug||console.log||(()=>{}),e.exports=p(2447)(a);const{formatters:t}=e.exports;t.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}},2447:(e,a,p)=>{e.exports=function(e){function a(e){let p,d,i,r=null;function n(...e){if(!n.enabled)return;const t=n,d=Number(new Date),i=d-(p||d);t.diff=i,t.prev=p,t.curr=d,p=d,e[0]=a.coerce(e[0]),"string"!=typeof e[0]&&e.unshift("%O");let r=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,((p,d)=>{if("%%"===p)return"%";r++;const i=a.formatters[d];if("function"==typeof i){const a=e[r];p=i.call(t,a),e.splice(r,1),r--}return p})),a.formatArgs.call(t,e),(t.log||a.log).apply(t,e)}return n.namespace=e,n.useColors=a.useColors(),n.color=a.selectColor(e),n.extend=t,n.destroy=a.destroy,Object.defineProperty(n,"enabled",{enumerable:!0,configurable:!1,get:()=>null!==r?r:(d!==a.namespaces&&(d=a.namespaces,i=a.enabled(e)),i),set:e=>{r=e}}),"function"==typeof a.init&&a.init(n),n}function t(e,p){const t=a(this.namespace+(void 0===p?":":p)+e);return t.log=this.log,t}function d(e){return e.toString().substring(2,e.toString().length-2).replace(/\.\*\?$/,"*")}return a.debug=a,a.default=a,a.coerce=function(e){return e instanceof Error?e.stack||e.message:e},a.disable=function(){const e=[...a.names.map(d),...a.skips.map(d).map((e=>"-"+e))].join(",");return a.enable(""),e},a.enable=function(e){let p;a.save(e),a.namespaces=e,a.names=[],a.skips=[];const t=("string"==typeof e?e:"").split(/[\s,]+/),d=t.length;for(p=0;p<d;p++)t[p]&&("-"===(e=t[p].replace(/\*/g,".*?"))[0]?a.skips.push(new RegExp("^"+e.slice(1)+"$")):a.names.push(new RegExp("^"+e+"$")))},a.enabled=function(e){if("*"===e[e.length-1])return!0;let p,t;for(p=0,t=a.skips.length;p<t;p++)if(a.skips[p].test(e))return!1;for(p=0,t=a.names.length;p<t;p++)if(a.names[p].test(e))return!0;return!1},a.humanize=p(7824),a.destroy=function(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(e).forEach((p=>{a[p]=e[p]})),a.names=[],a.skips=[],a.formatters={},a.selectColor=function(e){let p=0;for(let a=0;a<e.length;a++)p=(p<<5)-p+e.charCodeAt(a),p|=0;return a.colors[Math.abs(p)%a.colors.length]},a.enable(a.load()),a}},5158:(e,a,p)=>{"undefined"==typeof process||"renderer"===process.type||!0===process.browser||process.__nwjs?e.exports=p(1227):e.exports=p(39)},39:(e,a,p)=>{const t=p(6224),d=p(3837);a.init=function(e){e.inspectOpts={};const p=Object.keys(a.inspectOpts);for(let t=0;t<p.length;t++)e.inspectOpts[p[t]]=a.inspectOpts[p[t]]},a.log=function(...e){return process.stderr.write(d.format(...e)+"\n")},a.formatArgs=function(p){const{namespace:t,useColors:d}=this;if(d){const a=this.color,d="[3"+(a<8?a:"8;5;"+a),i=`  ${d};1m${t} [0m`;p[0]=i+p[0].split("\n").join("\n"+i),p.push(d+"m+"+e.exports.humanize(this.diff)+"[0m")}else p[0]=(a.inspectOpts.hideDate?"":(new Date).toISOString()+" ")+t+" "+p[0]},a.save=function(e){e?process.env.DEBUG=e:delete process.env.DEBUG},a.load=function(){return process.env.DEBUG},a.useColors=function(){return"colors"in a.inspectOpts?Boolean(a.inspectOpts.colors):t.isatty(process.stderr.fd)},a.destroy=d.deprecate((()=>{}),"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."),a.colors=[6,2,3,4,5,1];try{const e=p(2130);e&&(e.stderr||e).level>=2&&(a.colors=[20,21,26,27,32,33,38,39,40,41,42,43,44,45,56,57,62,63,68,69,74,75,76,77,78,79,80,81,92,93,98,99,112,113,128,129,134,135,148,149,160,161,162,163,164,165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221])}catch(e){}a.inspectOpts=Object.keys(process.env).filter((e=>/^debug_/i.test(e))).reduce(((e,a)=>{const p=a.substring(6).toLowerCase().replace(/_([a-z])/g,((e,a)=>a.toUpperCase()));let t=process.env[a];return t=!!/^(yes|on|true|enabled)$/i.test(t)||!/^(no|off|false|disabled)$/i.test(t)&&("null"===t?null:Number(t)),e[p]=t,e}),{}),e.exports=p(2447)(a);const{formatters:i}=e.exports;i.o=function(e){return this.inspectOpts.colors=this.useColors,d.inspect(e,this.inspectOpts).split("\n").map((e=>e.trim())).join(" ")},i.O=function(e){return this.inspectOpts.colors=this.useColors,d.inspect(e,this.inspectOpts)}},806:(e,a,p)=>{"use strict";const t=p(77),d=p(1017),i=p(3082).mkdirsSync,r=p(5116).utimesMillisSync,n=p(3e3);function o(e,a,p,i){const r=(i.dereference?t.statSync:t.lstatSync)(a);if(r.isDirectory())return function(e,a,p,d,i){return a?m(p,d,i):function(e,a,p,d){return t.mkdirSync(p),m(a,p,d),l(p,e)}(e.mode,p,d,i)}(r,e,a,p,i);if(r.isFile()||r.isCharacterDevice()||r.isBlockDevice())return function(e,a,p,d,i){return a?function(e,a,p,d){if(d.overwrite)return t.unlinkSync(p),s(e,a,p,d);if(d.errorOnExist)throw new Error(`'${p}' already exists`)}(e,p,d,i):s(e,p,d,i)}(r,e,a,p,i);if(r.isSymbolicLink())return function(e,a,p,i){let r=t.readlinkSync(a);if(i.dereference&&(r=d.resolve(process.cwd(),r)),e){let e;try{e=t.readlinkSync(p)}catch(e){if("EINVAL"===e.code||"UNKNOWN"===e.code)return t.symlinkSync(r,p);throw e}if(i.dereference&&(e=d.resolve(process.cwd(),e)),n.isSrcSubdir(r,e))throw new Error(`Cannot copy '${r}' to a subdirectory of itself, '${e}'.`);if(t.statSync(p).isDirectory()&&n.isSrcSubdir(e,r))throw new Error(`Cannot overwrite '${e}' with '${r}'.`);return function(e,a){return t.unlinkSync(a),t.symlinkSync(e,a)}(r,p)}return t.symlinkSync(r,p)}(e,a,p,i);if(r.isSocket())throw new Error(`Cannot copy a socket file: ${a}`);if(r.isFIFO())throw new Error(`Cannot copy a FIFO pipe: ${a}`);throw new Error(`Unknown file: ${a}`)}function s(e,a,p,d){return t.copyFileSync(a,p),d.preserveTimestamps&&function(e,a,p){(function(e){return 0==(128&e)})(e)&&function(e,a){l(e,128|a)}(p,e),function(e,a){const p=t.statSync(e);r(a,p.atime,p.mtime)}(a,p)}(e.mode,a,p),l(p,e.mode)}function l(e,a){return t.chmodSync(e,a)}function m(e,a,p){t.readdirSync(e).forEach((t=>function(e,a,p,t){const i=d.join(a,e),r=d.join(p,e),{destStat:s}=n.checkPathsSync(i,r,"copy",t);return function(e,a,p,t){if(!t.filter||t.filter(a,p))return o(e,a,p,t)}(s,i,r,t)}(t,e,a,p)))}e.exports=function(e,a,p){"function"==typeof p&&(p={filter:p}),(p=p||{}).clobber=!("clobber"in p)||!!p.clobber,p.overwrite="overwrite"in p?!!p.overwrite:p.clobber,p.preserveTimestamps&&"ia32"===process.arch&&process.emitWarning("Using the preserveTimestamps option in 32-bit node is not recommended;\n\n\tsee https://github.com/jprichardson/node-fs-extra/issues/269","Warning","fs-extra-WARN0002");const{srcStat:r,destStat:s}=n.checkPathsSync(e,a,"copy",p);return n.checkParentPathsSync(e,r,a,"copy"),function(e,a,p,r){if(r.filter&&!r.filter(a,p))return;const n=d.dirname(p);return t.existsSync(n)||i(n),o(e,a,p,r)}(s,e,a,p)}},2646:(e,a,p)=>{"use strict";const t=p(77),d=p(1017),i=p(3082).mkdirs,r=p(3149).pathExists,n=p(5116).utimesMillis,o=p(3e3);function s(e,a,p,t,n){const o=d.dirname(p);r(o,((d,r)=>d?n(d):r?m(e,a,p,t,n):void i(o,(d=>d?n(d):m(e,a,p,t,n)))))}function l(e,a,p,t,d,i){Promise.resolve(d.filter(p,t)).then((r=>r?e(a,p,t,d,i):i()),(e=>i(e)))}function m(e,a,p,i,r){(i.dereference?t.stat:t.lstat)(a,((n,s)=>n?r(n):s.isDirectory()?function(e,a,p,d,i,r){return a?f(p,d,i,r):function(e,a,p,d,i){t.mkdir(p,(t=>{if(t)return i(t);f(a,p,d,(a=>a?i(a):h(p,e,i)))}))}(e.mode,p,d,i,r)}(s,e,a,p,i,r):s.isFile()||s.isCharacterDevice()||s.isBlockDevice()?function(e,a,p,d,i,r){return a?function(e,a,p,d,i){if(!d.overwrite)return d.errorOnExist?i(new Error(`'${p}' already exists`)):i();t.unlink(p,(t=>t?i(t):u(e,a,p,d,i)))}(e,p,d,i,r):u(e,p,d,i,r)}(s,e,a,p,i,r):s.isSymbolicLink()?function(e,a,p,i,r){t.readlink(a,((a,n)=>a?r(a):(i.dereference&&(n=d.resolve(process.cwd(),n)),e?void t.readlink(p,((a,s)=>a?"EINVAL"===a.code||"UNKNOWN"===a.code?t.symlink(n,p,r):r(a):(i.dereference&&(s=d.resolve(process.cwd(),s)),o.isSrcSubdir(n,s)?r(new Error(`Cannot copy '${n}' to a subdirectory of itself, '${s}'.`)):e.isDirectory()&&o.isSrcSubdir(s,n)?r(new Error(`Cannot overwrite '${s}' with '${n}'.`)):function(e,a,p){t.unlink(a,(d=>d?p(d):t.symlink(e,a,p)))}(n,p,r)))):t.symlink(n,p,r))))}(e,a,p,i,r):s.isSocket()?r(new Error(`Cannot copy a socket file: ${a}`)):s.isFIFO()?r(new Error(`Cannot copy a FIFO pipe: ${a}`)):r(new Error(`Unknown file: ${a}`))))}function u(e,a,p,d,i){t.copyFile(a,p,(t=>t?i(t):d.preserveTimestamps?function(e,a,p,t){return function(e){return 0==(128&e)}(e)?function(e,a,p){return h(e,128|a,p)}(p,e,(d=>d?t(d):c(e,a,p,t))):c(e,a,p,t)}(e.mode,a,p,i):h(p,e.mode,i)))}function c(e,a,p,d){!function(e,a,p){t.stat(e,((e,t)=>e?p(e):n(a,t.atime,t.mtime,p)))}(a,p,(a=>a?d(a):h(p,e,d)))}function h(e,a,p){return t.chmod(e,a,p)}function f(e,a,p,d){t.readdir(e,((t,i)=>t?d(t):v(i,e,a,p,d)))}function v(e,a,p,t,i){const r=e.pop();return r?function(e,a,p,t,i,r){const n=d.join(p,a),s=d.join(t,a);o.checkPaths(n,s,"copy",i,((a,d)=>{if(a)return r(a);const{destStat:o}=d;!function(e,a,p,t,d){t.filter?l(m,e,a,p,t,d):m(e,a,p,t,d)}(o,n,s,i,(a=>a?r(a):v(e,p,t,i,r)))}))}(e,r,a,p,t,i):i()}e.exports=function(e,a,p,t){"function"!=typeof p||t?"function"==typeof p&&(p={filter:p}):(t=p,p={}),t=t||function(){},(p=p||{}).clobber=!("clobber"in p)||!!p.clobber,p.overwrite="overwrite"in p?!!p.overwrite:p.clobber,p.preserveTimestamps&&"ia32"===process.arch&&process.emitWarning("Using the preserveTimestamps option in 32-bit node is not recommended;\n\n\tsee https://github.com/jprichardson/node-fs-extra/issues/269","Warning","fs-extra-WARN0001"),o.checkPaths(e,a,"copy",p,((d,i)=>{if(d)return t(d);const{srcStat:r,destStat:n}=i;o.checkParentPaths(e,r,a,"copy",(d=>d?t(d):p.filter?l(s,n,e,a,p,t):s(n,e,a,p,t)))}))}},4475:(e,a,p)=>{"use strict";const t=p(3759).fromCallback;e.exports={copy:t(p(2646)),copySync:p(806)}},1717:(e,a,p)=>{"use strict";const t=p(3759).fromPromise,d=p(5629),i=p(1017),r=p(3082),n=p(9855),o=t((async function(e){let a;try{a=await d.readdir(e)}catch{return r.mkdirs(e)}return Promise.all(a.map((a=>n.remove(i.join(e,a)))))}));function s(e){let a;try{a=d.readdirSync(e)}catch{return r.mkdirsSync(e)}a.forEach((a=>{a=i.join(e,a),n.removeSync(a)}))}e.exports={emptyDirSync:s,emptydirSync:s,emptyDir:o,emptydir:o}},1221:(e,a,p)=>{"use strict";const t=p(3759).fromCallback,d=p(1017),i=p(77),r=p(3082);e.exports={createFile:t((function(e,a){function p(){i.writeFile(e,"",(e=>{if(e)return a(e);a()}))}i.stat(e,((t,n)=>{if(!t&&n.isFile())return a();const o=d.dirname(e);i.stat(o,((e,t)=>{if(e)return"ENOENT"===e.code?r.mkdirs(o,(e=>{if(e)return a(e);p()})):a(e);t.isDirectory()?p():i.readdir(o,(e=>{if(e)return a(e)}))}))}))})),createFileSync:function(e){let a;try{a=i.statSync(e)}catch{}if(a&&a.isFile())return;const p=d.dirname(e);try{i.statSync(p).isDirectory()||i.readdirSync(p)}catch(e){if(!e||"ENOENT"!==e.code)throw e;r.mkdirsSync(p)}i.writeFileSync(e,"")}}},6495:(e,a,p)=>{"use strict";const{createFile:t,createFileSync:d}=p(1221),{createLink:i,createLinkSync:r}=p(4919),{createSymlink:n,createSymlinkSync:o}=p(267);e.exports={createFile:t,createFileSync:d,ensureFile:t,ensureFileSync:d,createLink:i,createLinkSync:r,ensureLink:i,ensureLinkSync:r,createSymlink:n,createSymlinkSync:o,ensureSymlink:n,ensureSymlinkSync:o}},4919:(e,a,p)=>{"use strict";const t=p(3759).fromCallback,d=p(1017),i=p(77),r=p(3082),n=p(3149).pathExists,{areIdentical:o}=p(3e3);e.exports={createLink:t((function(e,a,p){function t(e,a){i.link(e,a,(e=>{if(e)return p(e);p(null)}))}i.lstat(a,((s,l)=>{i.lstat(e,((i,s)=>{if(i)return i.message=i.message.replace("lstat","ensureLink"),p(i);if(l&&o(s,l))return p(null);const m=d.dirname(a);n(m,((d,i)=>d?p(d):i?t(e,a):void r.mkdirs(m,(d=>{if(d)return p(d);t(e,a)}))))}))}))})),createLinkSync:function(e,a){let p;try{p=i.lstatSync(a)}catch{}try{const a=i.lstatSync(e);if(p&&o(a,p))return}catch(e){throw e.message=e.message.replace("lstat","ensureLink"),e}const t=d.dirname(a);return i.existsSync(t)||r.mkdirsSync(t),i.linkSync(e,a)}}},1512:(e,a,p)=>{"use strict";const t=p(1017),d=p(77),i=p(3149).pathExists;e.exports={symlinkPaths:function(e,a,p){if(t.isAbsolute(e))return d.lstat(e,(a=>a?(a.message=a.message.replace("lstat","ensureSymlink"),p(a)):p(null,{toCwd:e,toDst:e})));{const r=t.dirname(a),n=t.join(r,e);return i(n,((a,i)=>a?p(a):i?p(null,{toCwd:n,toDst:e}):d.lstat(e,(a=>a?(a.message=a.message.replace("lstat","ensureSymlink"),p(a)):p(null,{toCwd:e,toDst:t.relative(r,e)})))))}},symlinkPathsSync:function(e,a){let p;if(t.isAbsolute(e)){if(p=d.existsSync(e),!p)throw new Error("absolute srcpath does not exist");return{toCwd:e,toDst:e}}{const i=t.dirname(a),r=t.join(i,e);if(p=d.existsSync(r),p)return{toCwd:r,toDst:e};if(p=d.existsSync(e),!p)throw new Error("relative srcpath does not exist");return{toCwd:e,toDst:t.relative(i,e)}}}}},8106:(e,a,p)=>{"use strict";const t=p(77);e.exports={symlinkType:function(e,a,p){if(p="function"==typeof a?a:p,a="function"!=typeof a&&a)return p(null,a);t.lstat(e,((e,t)=>{if(e)return p(null,"file");a=t&&t.isDirectory()?"dir":"file",p(null,a)}))},symlinkTypeSync:function(e,a){let p;if(a)return a;try{p=t.lstatSync(e)}catch{return"file"}return p&&p.isDirectory()?"dir":"file"}}},267:(e,a,p)=>{"use strict";const t=p(3759).fromCallback,d=p(1017),i=p(5629),r=p(3082),n=r.mkdirs,o=r.mkdirsSync,s=p(1512),l=s.symlinkPaths,m=s.symlinkPathsSync,u=p(8106),c=u.symlinkType,h=u.symlinkTypeSync,f=p(3149).pathExists,{areIdentical:v}=p(3e3);function w(e,a,p,t){l(e,a,((r,o)=>{if(r)return t(r);e=o.toDst,c(o.toCwd,p,((p,r)=>{if(p)return t(p);const o=d.dirname(a);f(o,((p,d)=>p?t(p):d?i.symlink(e,a,r,t):void n(o,(p=>{if(p)return t(p);i.symlink(e,a,r,t)}))))}))}))}e.exports={createSymlink:t((function(e,a,p,t){t="function"==typeof p?p:t,p="function"!=typeof p&&p,i.lstat(a,((d,r)=>{!d&&r.isSymbolicLink()?Promise.all([i.stat(e),i.stat(a)]).then((([d,i])=>{if(v(d,i))return t(null);w(e,a,p,t)})):w(e,a,p,t)}))})),createSymlinkSync:function(e,a,p){let t;try{t=i.lstatSync(a)}catch{}if(t&&t.isSymbolicLink()){const p=i.statSync(e),t=i.statSync(a);if(v(p,t))return}const r=m(e,a);e=r.toDst,p=h(r.toCwd,p);const n=d.dirname(a);return i.existsSync(n)||o(n),i.symlinkSync(e,a,p)}}},5629:(e,a,p)=>{"use strict";const t=p(3759).fromCallback,d=p(77),i=["access","appendFile","chmod","chown","close","copyFile","fchmod","fchown","fdatasync","fstat","fsync","ftruncate","futimes","lchmod","lchown","link","lstat","mkdir","mkdtemp","open","opendir","readdir","readFile","readlink","realpath","rename","rm","rmdir","stat","symlink","truncate","unlink","utimes","writeFile"].filter((e=>"function"==typeof d[e]));Object.assign(a,d),i.forEach((e=>{a[e]=t(d[e])})),a.exists=function(e,a){return"function"==typeof a?d.exists(e,a):new Promise((a=>d.exists(e,a)))},a.read=function(e,a,p,t,i,r){return"function"==typeof r?d.read(e,a,p,t,i,r):new Promise(((r,n)=>{d.read(e,a,p,t,i,((e,a,p)=>{if(e)return n(e);r({bytesRead:a,buffer:p})}))}))},a.write=function(e,a,...p){return"function"==typeof p[p.length-1]?d.write(e,a,...p):new Promise(((t,i)=>{d.write(e,a,...p,((e,a,p)=>{if(e)return i(e);t({bytesWritten:a,buffer:p})}))}))},"function"==typeof d.writev&&(a.writev=function(e,a,...p){return"function"==typeof p[p.length-1]?d.writev(e,a,...p):new Promise(((t,i)=>{d.writev(e,a,...p,((e,a,p)=>{if(e)return i(e);t({bytesWritten:a,buffers:p})}))}))}),"function"==typeof d.realpath.native?a.realpath.native=t(d.realpath.native):process.emitWarning("fs.realpath.native is not a function. Is fs being monkey-patched?","Warning","fs-extra-WARN0003")},344:(e,a,p)=>{"use strict";e.exports={...p(5629),...p(4475),...p(1717),...p(6495),...p(6851),...p(3082),...p(6524),...p(7635),...p(3149),...p(9855)}},6851:(e,a,p)=>{"use strict";const t=p(3759).fromPromise,d=p(9941);d.outputJson=t(p(682)),d.outputJsonSync=p(577),d.outputJSON=d.outputJson,d.outputJSONSync=d.outputJsonSync,d.writeJSON=d.writeJson,d.writeJSONSync=d.writeJsonSync,d.readJSON=d.readJson,d.readJSONSync=d.readJsonSync,e.exports=d},9941:(e,a,p)=>{"use strict";const t=p(2211);e.exports={readJson:t.readFile,readJsonSync:t.readFileSync,writeJson:t.writeFile,writeJsonSync:t.writeFileSync}},577:(e,a,p)=>{"use strict";const{stringify:t}=p(9199),{outputFileSync:d}=p(7635);e.exports=function(e,a,p){const i=t(a,p);d(e,i,p)}},682:(e,a,p)=>{"use strict";const{stringify:t}=p(9199),{outputFile:d}=p(7635);e.exports=async function(e,a,p={}){const i=t(a,p);await d(e,i,p)}},3082:(e,a,p)=>{"use strict";const t=p(3759).fromPromise,{makeDir:d,makeDirSync:i}=p(7206),r=t(d);e.exports={mkdirs:r,mkdirsSync:i,mkdirp:r,mkdirpSync:i,ensureDir:r,ensureDirSync:i}},7206:(e,a,p)=>{"use strict";const t=p(5629),{checkPath:d}=p(8739),i=e=>"number"==typeof e?e:{mode:511,...e}.mode;e.exports.makeDir=async(e,a)=>(d(e),t.mkdir(e,{mode:i(a),recursive:!0})),e.exports.makeDirSync=(e,a)=>(d(e),t.mkdirSync(e,{mode:i(a),recursive:!0}))},8739:(e,a,p)=>{"use strict";const t=p(1017);e.exports.checkPath=function(e){if("win32"===process.platform&&/[<>:"|?*]/.test(e.replace(t.parse(e).root,""))){const a=new Error(`Path contains invalid characters: ${e}`);throw a.code="EINVAL",a}}},6524:(e,a,p)=>{"use strict";const t=p(3759).fromCallback;e.exports={move:t(p(2620)),moveSync:p(1926)}},1926:(e,a,p)=>{"use strict";const t=p(77),d=p(1017),i=p(4475).copySync,r=p(9855).removeSync,n=p(3082).mkdirpSync,o=p(3e3);function s(e,a,p){try{t.renameSync(e,a)}catch(t){if("EXDEV"!==t.code)throw t;return function(e,a,p){return i(e,a,{overwrite:p,errorOnExist:!0}),r(e)}(e,a,p)}}e.exports=function(e,a,p){const i=(p=p||{}).overwrite||p.clobber||!1,{srcStat:l,isChangingCase:m=!1}=o.checkPathsSync(e,a,"move",p);return o.checkParentPathsSync(e,l,a,"move"),function(e){const a=d.dirname(e);return d.parse(a).root===a}(a)||n(d.dirname(a)),function(e,a,p,d){if(d)return s(e,a,p);if(p)return r(a),s(e,a,p);if(t.existsSync(a))throw new Error("dest already exists.");return s(e,a,p)}(e,a,i,m)}},2620:(e,a,p)=>{"use strict";const t=p(77),d=p(1017),i=p(4475).copy,r=p(9855).remove,n=p(3082).mkdirp,o=p(3149).pathExists,s=p(3e3);function l(e,a,p,t,d){return t?m(e,a,p,d):p?r(a,(t=>t?d(t):m(e,a,p,d))):void o(a,((t,i)=>t?d(t):i?d(new Error("dest already exists.")):m(e,a,p,d)))}function m(e,a,p,d){t.rename(e,a,(t=>t?"EXDEV"!==t.code?d(t):function(e,a,p,t){i(e,a,{overwrite:p,errorOnExist:!0},(a=>a?t(a):r(e,t)))}(e,a,p,d):d()))}e.exports=function(e,a,p,t){"function"==typeof p&&(t=p,p={});const i=(p=p||{}).overwrite||p.clobber||!1;s.checkPaths(e,a,"move",p,((p,r)=>{if(p)return t(p);const{srcStat:o,isChangingCase:m=!1}=r;s.checkParentPaths(e,o,a,"move",(p=>p?t(p):function(e){const a=d.dirname(e);return d.parse(a).root===a}(a)?l(e,a,i,m,t):void n(d.dirname(a),(p=>p?t(p):l(e,a,i,m,t)))))}))}},7635:(e,a,p)=>{"use strict";const t=p(3759).fromCallback,d=p(77),i=p(1017),r=p(3082),n=p(3149).pathExists;e.exports={outputFile:t((function(e,a,p,t){"function"==typeof p&&(t=p,p="utf8");const o=i.dirname(e);n(o,((i,n)=>i?t(i):n?d.writeFile(e,a,p,t):void r.mkdirs(o,(i=>{if(i)return t(i);d.writeFile(e,a,p,t)}))))})),outputFileSync:function(e,...a){const p=i.dirname(e);if(d.existsSync(p))return d.writeFileSync(e,...a);r.mkdirsSync(p),d.writeFileSync(e,...a)}}},3149:(e,a,p)=>{"use strict";const t=p(3759).fromPromise,d=p(5629);e.exports={pathExists:t((function(e){return d.access(e).then((()=>!0)).catch((()=>!1))})),pathExistsSync:d.existsSync}},9855:(e,a,p)=>{"use strict";const t=p(77),d=p(3759).fromCallback,i=p(763);e.exports={remove:d((function(e,a){if(t.rm)return t.rm(e,{recursive:!0,force:!0},a);i(e,a)})),removeSync:function(e){if(t.rmSync)return t.rmSync(e,{recursive:!0,force:!0});i.sync(e)}}},763:(e,a,p)=>{"use strict";const t=p(77),d=p(1017),i=p(9491),r="win32"===process.platform;function n(e){["unlink","chmod","stat","lstat","rmdir","readdir"].forEach((a=>{e[a]=e[a]||t[a],e[a+="Sync"]=e[a]||t[a]})),e.maxBusyTries=e.maxBusyTries||3}function o(e,a,p){let t=0;"function"==typeof a&&(p=a,a={}),i(e,"rimraf: missing path"),i.strictEqual(typeof e,"string","rimraf: path should be a string"),i.strictEqual(typeof p,"function","rimraf: callback function required"),i(a,"rimraf: invalid options argument provided"),i.strictEqual(typeof a,"object","rimraf: options should be object"),n(a),s(e,a,(function d(i){if(i){if(("EBUSY"===i.code||"ENOTEMPTY"===i.code||"EPERM"===i.code)&&t<a.maxBusyTries)return t++,setTimeout((()=>s(e,a,d)),100*t);"ENOENT"===i.code&&(i=null)}p(i)}))}function s(e,a,p){i(e),i(a),i("function"==typeof p),a.lstat(e,((t,d)=>t&&"ENOENT"===t.code?p(null):t&&"EPERM"===t.code&&r?l(e,a,t,p):d&&d.isDirectory()?u(e,a,t,p):void a.unlink(e,(t=>{if(t){if("ENOENT"===t.code)return p(null);if("EPERM"===t.code)return r?l(e,a,t,p):u(e,a,t,p);if("EISDIR"===t.code)return u(e,a,t,p)}return p(t)}))))}function l(e,a,p,t){i(e),i(a),i("function"==typeof t),a.chmod(e,438,(d=>{d?t("ENOENT"===d.code?null:p):a.stat(e,((d,i)=>{d?t("ENOENT"===d.code?null:p):i.isDirectory()?u(e,a,p,t):a.unlink(e,t)}))}))}function m(e,a,p){let t;i(e),i(a);try{a.chmodSync(e,438)}catch(e){if("ENOENT"===e.code)return;throw p}try{t=a.statSync(e)}catch(e){if("ENOENT"===e.code)return;throw p}t.isDirectory()?h(e,a,p):a.unlinkSync(e)}function u(e,a,p,t){i(e),i(a),i("function"==typeof t),a.rmdir(e,(r=>{!r||"ENOTEMPTY"!==r.code&&"EEXIST"!==r.code&&"EPERM"!==r.code?r&&"ENOTDIR"===r.code?t(p):t(r):function(e,a,p){i(e),i(a),i("function"==typeof p),a.readdir(e,((t,i)=>{if(t)return p(t);let r,n=i.length;if(0===n)return a.rmdir(e,p);i.forEach((t=>{o(d.join(e,t),a,(t=>{if(!r)return t?p(r=t):void(0==--n&&a.rmdir(e,p))}))}))}))}(e,a,t)}))}function c(e,a){let p;n(a=a||{}),i(e,"rimraf: missing path"),i.strictEqual(typeof e,"string","rimraf: path should be a string"),i(a,"rimraf: missing options"),i.strictEqual(typeof a,"object","rimraf: options should be object");try{p=a.lstatSync(e)}catch(p){if("ENOENT"===p.code)return;"EPERM"===p.code&&r&&m(e,a,p)}try{p&&p.isDirectory()?h(e,a,null):a.unlinkSync(e)}catch(p){if("ENOENT"===p.code)return;if("EPERM"===p.code)return r?m(e,a,p):h(e,a,p);if("EISDIR"!==p.code)throw p;h(e,a,p)}}function h(e,a,p){i(e),i(a);try{a.rmdirSync(e)}catch(t){if("ENOTDIR"===t.code)throw p;if("ENOTEMPTY"===t.code||"EEXIST"===t.code||"EPERM"===t.code)!function(e,a){if(i(e),i(a),a.readdirSync(e).forEach((p=>c(d.join(e,p),a))),!r)return a.rmdirSync(e,a);{const p=Date.now();do{try{return a.rmdirSync(e,a)}catch{}}while(Date.now()-p<500)}}(e,a);else if("ENOENT"!==t.code)throw t}}e.exports=o,o.sync=c},3e3:(e,a,p)=>{"use strict";const t=p(5629),d=p(1017),i=p(3837);function r(e,a,p){const d=p.dereference?e=>t.stat(e,{bigint:!0}):e=>t.lstat(e,{bigint:!0});return Promise.all([d(e),d(a).catch((e=>{if("ENOENT"===e.code)return null;throw e}))]).then((([e,a])=>({srcStat:e,destStat:a})))}function n(e,a){return a.ino&&a.dev&&a.ino===e.ino&&a.dev===e.dev}function o(e,a){const p=d.resolve(e).split(d.sep).filter((e=>e)),t=d.resolve(a).split(d.sep).filter((e=>e));return p.reduce(((e,a,p)=>e&&t[p]===a),!0)}function s(e,a,p){return`Cannot ${p} '${e}' to a subdirectory of itself, '${a}'.`}e.exports={checkPaths:function(e,a,p,t,l){i.callbackify(r)(e,a,t,((t,i)=>{if(t)return l(t);const{srcStat:r,destStat:m}=i;if(m){if(n(r,m)){const t=d.basename(e),i=d.basename(a);return"move"===p&&t!==i&&t.toLowerCase()===i.toLowerCase()?l(null,{srcStat:r,destStat:m,isChangingCase:!0}):l(new Error("Source and destination must not be the same."))}if(r.isDirectory()&&!m.isDirectory())return l(new Error(`Cannot overwrite non-directory '${a}' with directory '${e}'.`));if(!r.isDirectory()&&m.isDirectory())return l(new Error(`Cannot overwrite directory '${a}' with non-directory '${e}'.`))}return r.isDirectory()&&o(e,a)?l(new Error(s(e,a,p))):l(null,{srcStat:r,destStat:m})}))},checkPathsSync:function(e,a,p,i){const{srcStat:r,destStat:l}=function(e,a,p){let d;const i=p.dereference?e=>t.statSync(e,{bigint:!0}):e=>t.lstatSync(e,{bigint:!0}),r=i(e);try{d=i(a)}catch(e){if("ENOENT"===e.code)return{srcStat:r,destStat:null};throw e}return{srcStat:r,destStat:d}}(e,a,i);if(l){if(n(r,l)){const t=d.basename(e),i=d.basename(a);if("move"===p&&t!==i&&t.toLowerCase()===i.toLowerCase())return{srcStat:r,destStat:l,isChangingCase:!0};throw new Error("Source and destination must not be the same.")}if(r.isDirectory()&&!l.isDirectory())throw new Error(`Cannot overwrite non-directory '${a}' with directory '${e}'.`);if(!r.isDirectory()&&l.isDirectory())throw new Error(`Cannot overwrite directory '${a}' with non-directory '${e}'.`)}if(r.isDirectory()&&o(e,a))throw new Error(s(e,a,p));return{srcStat:r,destStat:l}},checkParentPaths:function e(a,p,i,r,o){const l=d.resolve(d.dirname(a)),m=d.resolve(d.dirname(i));if(m===l||m===d.parse(m).root)return o();t.stat(m,{bigint:!0},((t,d)=>t?"ENOENT"===t.code?o():o(t):n(p,d)?o(new Error(s(a,i,r))):e(a,p,m,r,o)))},checkParentPathsSync:function e(a,p,i,r){const o=d.resolve(d.dirname(a)),l=d.resolve(d.dirname(i));if(l===o||l===d.parse(l).root)return;let m;try{m=t.statSync(l,{bigint:!0})}catch(e){if("ENOENT"===e.code)return;throw e}if(n(p,m))throw new Error(s(a,i,r));return e(a,p,l,r)},isSrcSubdir:o,areIdentical:n}},5116:(e,a,p)=>{"use strict";const t=p(77);e.exports={utimesMillis:function(e,a,p,d){t.open(e,"r+",((e,i)=>{if(e)return d(e);t.futimes(i,a,p,(e=>{t.close(i,(a=>{d&&d(e||a)}))}))}))},utimesMillisSync:function(e,a,p){const d=t.openSync(e,"r+");return t.futimesSync(d,a,p),t.closeSync(d)}}},2211:(e,a,p)=>{let t;try{t=p(77)}catch(e){t=p(7147)}const d=p(3759),{stringify:i,stripBom:r}=p(9199),n={readFile:d.fromPromise((async function(e,a={}){"string"==typeof a&&(a={encoding:a});const p=a.fs||t,i=!("throws"in a)||a.throws;let n,o=await d.fromCallback(p.readFile)(e,a);o=r(o);try{n=JSON.parse(o,a?a.reviver:null)}catch(a){if(i)throw a.message=`${e}: ${a.message}`,a;return null}return n})),readFileSync:function(e,a={}){"string"==typeof a&&(a={encoding:a});const p=a.fs||t,d=!("throws"in a)||a.throws;try{let t=p.readFileSync(e,a);return t=r(t),JSON.parse(t,a.reviver)}catch(a){if(d)throw a.message=`${e}: ${a.message}`,a;return null}},writeFile:d.fromPromise((async function(e,a,p={}){const r=p.fs||t,n=i(a,p);await d.fromCallback(r.writeFile)(e,n,p)})),writeFileSync:function(e,a,p={}){const d=p.fs||t,r=i(a,p);return d.writeFileSync(e,r,p)}};e.exports=n},9199:e=>{e.exports={stringify:function(e,{EOL:a="\n",finalEOL:p=!0,replacer:t=null,spaces:d}={}){const i=p?a:"";return JSON.stringify(e,t,d).replace(/\n/g,a)+i},stripBom:function(e){return Buffer.isBuffer(e)&&(e=e.toString("utf8")),e.replace(/^\uFEFF/,"")}}},3759:(e,a)=>{"use strict";a.fromCallback=function(e){return Object.defineProperty((function(...a){if("function"!=typeof a[a.length-1])return new Promise(((p,t)=>{e.call(this,...a,((e,a)=>null!=e?t(e):p(a)))}));e.apply(this,a)}),"name",{value:e.name})},a.fromPromise=function(e){return Object.defineProperty((function(...a){const p=a[a.length-1];if("function"!=typeof p)return e.apply(this,a);e.apply(this,a.slice(0,-1)).then((e=>p(null,e)),p)}),"name",{value:e.name})}},6110:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.getAppCacheDir=void 0;const t=p(1017),d=p(2037);a.getAppCacheDir=function(){const e=d.homedir();let a;return a="win32"===process.platform?process.env.LOCALAPPDATA||t.join(e,"AppData","Local"):"darwin"===process.platform?t.join(e,"Library","Application Support","Caches"):process.env.XDG_CACHE_HOME||t.join(e,".cache"),a}},3405:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.AppImageUpdater=void 0;const t=p(9152),d=p(2081),i=p(344),r=p(7147),n=p(1017),o=p(4502),s=p(3458),l=p(7430),m=p(2310);class u extends o.BaseUpdater{constructor(e,a){super(e,a)}isUpdaterActive(){return null==process.env.APPIMAGE?(null==process.env.SNAP?this._logger.warn("APPIMAGE env is not defined, current application is not an AppImage"):this._logger.info("SNAP env is defined, updater is disabled"),!1):super.isUpdaterActive()}doDownloadUpdate(e){const a=e.updateInfoAndProvider.provider,p=m.findFile(a.resolveFiles(e.updateInfoAndProvider.info),"AppImage");return this.executeDownload({fileExtension:"AppImage",fileInfo:p,downloadUpdateOptions:e,task:async(d,r)=>{const n=process.env.APPIMAGE;if(null==n)throw t.newError("APPIMAGE env is not defined","ERR_UPDATER_OLD_FILE_NOT_FOUND");let o=!1;try{const t={newUrl:p.url,oldFile:n,logger:this._logger,newFile:d,isUseMultipleRangeRequest:a.isUseMultipleRangeRequest,requestHeaders:e.requestHeaders,cancellationToken:e.cancellationToken};this.listenerCount(l.DOWNLOAD_PROGRESS)>0&&(t.onProgress=e=>this.emit(l.DOWNLOAD_PROGRESS,e)),await new s.FileWithEmbeddedBlockMapDifferentialDownloader(p.info,this.httpExecutor,t).download()}catch(e){this._logger.error(`Cannot download differentially, fallback to full download: ${e.stack||e}`),o="linux"===process.platform}o&&await this.httpExecutor.download(p.url,d,r),await i.chmod(d,493)}})}doInstall(e){const a=process.env.APPIMAGE;if(null==a)throw t.newError("APPIMAGE env is not defined","ERR_UPDATER_OLD_FILE_NOT_FOUND");let p;r.unlinkSync(a);const i=n.basename(a);p=n.basename(e.installerPath)!==i&&/\d+\.\d+\.\d+/.test(i)?n.join(n.dirname(a),n.basename(e.installerPath)):a,d.execFileSync("mv",["-f",e.installerPath,p]),p!==a&&this.emit("appimage-filename-updated",p);const o={...process.env,APPIMAGE_SILENT_INSTALL:"true"};return e.isForceRunAfter?d.spawn(p,[],{detached:!0,stdio:"ignore",env:o}).unref():(o.APPIMAGE_EXIT_AFTER_INSTALL="true",d.execFileSync(p,[],{env:o})),!0}}a.AppImageUpdater=u},8459:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.NoOpLogger=a.AppUpdater=void 0;const t=p(9152),d=p(6113),i=p(2361),r=p(344),n=p(3320),o=p(8218),s=p(1017),l=p(1249),m=p(2837),u=p(6431),c=p(1890),h=p(1554),f=p(7430),v=p(4985);class w extends i.EventEmitter{constructor(e,a){super(),this.autoDownload=!0,this.autoInstallOnAppQuit=!0,this.autoRunAppAfterInstall=!0,this.allowPrerelease=!1,this.fullChangelog=!1,this.allowDowngrade=!1,this.disableWebInstaller=!1,this.forceDevUpdateConfig=!1,this._channel=null,this.downloadedUpdateHelper=null,this.requestHeaders=null,this._logger=console,this.signals=new f.UpdaterSignal(this),this._appUpdateConfigPath=null,this.clientPromise=null,this.stagingUserIdPromise=new o.Lazy((()=>this.getOrCreateStagingUserId())),this.configOnDisk=new o.Lazy((()=>this.loadUpdateConfig())),this.checkForUpdatesPromise=null,this.updateInfoAndProvider=null,this._testOnlyOptions=null,this.on("error",(e=>{this._logger.error(`Error: ${e.stack||e.message}`)})),null==a?(this.app=new u.ElectronAppAdapter,this.httpExecutor=new c.ElectronHttpExecutor(((e,a)=>this.emit("login",e,a)))):(this.app=a,this.httpExecutor=null);const p=this.app.version,d=l.parse(p);if(null==d)throw t.newError(`App version is not a valid semver version: "${p}"`,"ERR_UPDATER_INVALID_VERSION");this.currentVersion=d,this.allowPrerelease=function(e){const a=l.prerelease(e);return null!=a&&a.length>0}(d),null!=e&&(this.setFeedURL(e),"string"!=typeof e&&e.requestHeaders&&(this.requestHeaders=e.requestHeaders))}get channel(){return this._channel}set channel(e){if(null!=this._channel){if("string"!=typeof e)throw t.newError(`Channel must be a string, but got: ${e}`,"ERR_UPDATER_INVALID_CHANNEL");if(0===e.length)throw t.newError("Channel must be not an empty string","ERR_UPDATER_INVALID_CHANNEL")}this._channel=e,this.allowDowngrade=!0}addAuthHeader(e){this.requestHeaders=Object.assign({},this.requestHeaders,{authorization:e})}get netSession(){return c.getNetSession()}get logger(){return this._logger}set logger(e){this._logger=null==e?new g:e}set updateConfigPath(e){this.clientPromise=null,this._appUpdateConfigPath=e,this.configOnDisk=new o.Lazy((()=>this.loadUpdateConfig()))}getFeedURL(){return"Deprecated. Do not use it."}setFeedURL(e){const a=this.createProviderRuntimeOptions();let p;p="string"==typeof e?new h.GenericProvider({provider:"generic",url:e},this,{...a,isUseMultipleRangeRequest:v.isUrlProbablySupportMultiRangeRequests(e)}):v.createClient(e,this,a),this.clientPromise=Promise.resolve(p)}checkForUpdates(){if(!this.isUpdaterActive())return Promise.resolve(null);let e=this.checkForUpdatesPromise;if(null!=e)return this._logger.info("Checking for update (already in progress)"),e;const a=()=>this.checkForUpdatesPromise=null;return this._logger.info("Checking for update"),e=this.doCheckForUpdates().then((e=>(a(),e))).catch((e=>{throw a(),this.emit("error",e,`Cannot check for updates: ${(e.stack||e).toString()}`),e})),this.checkForUpdatesPromise=e,e}isUpdaterActive(){return!(!this.app.isPackaged&&!this.forceDevUpdateConfig&&(this._logger.info("Skip checkForUpdates because application is not packed and dev update config is not forced"),1))}checkForUpdatesAndNotify(e){return this.checkForUpdates().then((a=>(null==a?void 0:a.downloadPromise)?(a.downloadPromise.then((()=>{const t=w.formatDownloadNotification(a.updateInfo.version,this.app.name,e);new(p(2298).Notification)(t).show()})),a):(null!=this._logger.debug&&this._logger.debug("checkForUpdatesAndNotify called, downloadPromise is null"),a)))}static formatDownloadNotification(e,a,p){return null==p&&(p={title:"A new update is ready to install",body:"{appName} version {version} has been downloaded and will be automatically installed on exit"}),{title:p.title.replace("{appName}",a).replace("{version}",e),body:p.body.replace("{appName}",a).replace("{version}",e)}}async isStagingMatch(e){const a=e.stagingPercentage;let p=a;if(null==p)return!0;if(p=parseInt(p,10),isNaN(p))return this._logger.warn(`Staging percentage is NaN: ${a}`),!0;p/=100;const d=await this.stagingUserIdPromise.value,i=t.UUID.parse(d).readUInt32BE(12)/4294967295;return this._logger.info(`Staging percentage: ${p}, percentage: ${i}, user id: ${d}`),i<p}computeFinalHeaders(e){return null!=this.requestHeaders&&Object.assign(e,this.requestHeaders),e}async isUpdateAvailable(e){const a=l.parse(e.version);if(null==a)throw t.newError(`This file could not be downloaded, or the latest version (from update server) does not have a valid semver version: "${e.version}"`,"ERR_UPDATER_INVALID_VERSION");const p=this.currentVersion;if(l.eq(a,p))return!1;if(!await this.isStagingMatch(e))return!1;const d=l.gt(a,p),i=l.lt(a,p);return!!d||this.allowDowngrade&&i}async getUpdateInfoAndProvider(){await this.app.whenReady(),null==this.clientPromise&&(this.clientPromise=this.configOnDisk.value.then((e=>v.createClient(e,this,this.createProviderRuntimeOptions()))));const e=await this.clientPromise,a=await this.stagingUserIdPromise.value;return e.setRequestHeaders(this.computeFinalHeaders({"x-user-staging-id":a})),{info:await e.getLatestVersion(),provider:e}}createProviderRuntimeOptions(){return{isUseMultipleRangeRequest:!0,platform:null==this._testOnlyOptions?process.platform:this._testOnlyOptions.platform,executor:this.httpExecutor}}async doCheckForUpdates(){this.emit("checking-for-update");const e=await this.getUpdateInfoAndProvider(),a=e.info;if(!await this.isUpdateAvailable(a))return this._logger.info(`Update for version ${this.currentVersion} is not available (latest version: ${a.version}, downgrade is ${this.allowDowngrade?"allowed":"disallowed"}).`),this.emit("update-not-available",a),{versionInfo:a,updateInfo:a};this.updateInfoAndProvider=e,this.onUpdateAvailable(a);const p=new t.CancellationToken;return{versionInfo:a,updateInfo:a,cancellationToken:p,downloadPromise:this.autoDownload?this.downloadUpdate(p):null}}onUpdateAvailable(e){this._logger.info(`Found version ${e.version} (url: ${t.asArray(e.files).map((e=>e.url)).join(", ")})`),this.emit("update-available",e)}downloadUpdate(e=new t.CancellationToken){const a=this.updateInfoAndProvider;if(null==a){const e=new Error("Please check update first");return this.dispatchError(e),Promise.reject(e)}this._logger.info(`Downloading update from ${t.asArray(a.info.files).map((e=>e.url)).join(", ")}`);const p=e=>{if(!(e instanceof t.CancellationError))try{this.dispatchError(e)}catch(e){this._logger.warn(`Cannot dispatch error event: ${e.stack||e}`)}return e};try{return this.doDownloadUpdate({updateInfoAndProvider:a,requestHeaders:this.computeRequestHeaders(a.provider),cancellationToken:e,disableWebInstaller:this.disableWebInstaller}).catch((e=>{throw p(e)}))}catch(e){return Promise.reject(p(e))}}dispatchError(e){this.emit("error",e,(e.stack||e).toString())}dispatchUpdateDownloaded(e){this.emit(f.UPDATE_DOWNLOADED,e)}async loadUpdateConfig(){return null==this._appUpdateConfigPath&&(this._appUpdateConfigPath=this.app.appUpdateConfigPath),n.load(await r.readFile(this._appUpdateConfigPath,"utf-8"))}computeRequestHeaders(e){const a=e.fileExtraDownloadHeaders;if(null!=a){const e=this.requestHeaders;return null==e?a:{...a,...e}}return this.computeFinalHeaders({accept:"*/*"})}async getOrCreateStagingUserId(){const e=s.join(this.app.userDataPath,".updaterId");try{const a=await r.readFile(e,"utf-8");if(t.UUID.check(a))return a;this._logger.warn(`Staging user id file exists, but content was invalid: ${a}`)}catch(e){"ENOENT"!==e.code&&this._logger.warn(`Couldn't read staging user ID, creating a blank one: ${e}`)}const a=t.UUID.v5(d.randomBytes(4096),t.UUID.OID);this._logger.info(`Generated new staging user ID: ${a}`);try{await r.outputFile(e,a)}catch(e){this._logger.warn(`Couldn't write out staging user ID: ${e}`)}return a}get isAddNoCacheQuery(){const e=this.requestHeaders;if(null==e)return!0;for(const a of Object.keys(e)){const e=a.toLowerCase();if("authorization"===e||"private-token"===e)return!1}return!0}async getOrCreateDownloadHelper(){let e=this.downloadedUpdateHelper;if(null==e){const a=(await this.configOnDisk.value).updaterCacheDirName,p=this._logger;null==a&&p.error("updaterCacheDirName is not specified in app-update.yml Was app build using at least electron-builder 20.34.0?");const t=s.join(this.app.baseCachePath,a||this.app.name);null!=p.debug&&p.debug(`updater cache dir: ${t}`),e=new m.DownloadedUpdateHelper(t),this.downloadedUpdateHelper=e}return e}async executeDownload(e){const a=e.fileInfo,p={headers:e.downloadUpdateOptions.requestHeaders,cancellationToken:e.downloadUpdateOptions.cancellationToken,sha2:a.info.sha2,sha512:a.info.sha512};this.listenerCount(f.DOWNLOAD_PROGRESS)>0&&(p.onProgress=e=>this.emit(f.DOWNLOAD_PROGRESS,e));const d=e.downloadUpdateOptions.updateInfoAndProvider.info,i=d.version,n=a.packageInfo,o=await this.getOrCreateDownloadHelper(),l=o.cacheDirForPendingUpdate;await r.mkdir(l,{recursive:!0});const u=function(){const a=decodeURIComponent(e.fileInfo.url.pathname);return a.endsWith(`.${e.fileExtension}`)?s.basename(a):`update.${e.fileExtension}`}();let c=s.join(l,u);const h=null==n?null:s.join(l,`package-${i}${s.extname(n.path)||".7z"}`),v=async p=>(await o.setDownloadedFile(c,h,d,a,u,p),await e.done({...d,downloadedFile:c}),null==h?[c]:[c,h]),w=this._logger,g=await o.validateDownloadedPath(c,d,a,w);if(null!=g)return c=g,await v(!1);const y=async()=>(await o.clear().catch((()=>{})),await r.unlink(c).catch((()=>{}))),b=await m.createTempUpdateFile(`temp-${u}`,l,w);try{await e.task(b,p,h,y),await r.rename(b,c)}catch(e){throw await y(),e instanceof t.CancellationError&&(w.info("cancelled"),this.emit("update-cancelled",d)),e}return w.info(`New version ${i} has been downloaded to ${c}`),await v(!0)}}a.AppUpdater=w;class g{info(e){}warn(e){}error(e){}}a.NoOpLogger=g},4502:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.BaseUpdater=void 0;const t=p(8459);class d extends t.AppUpdater{constructor(e,a){super(e,a),this.quitAndInstallCalled=!1,this.quitHandlerAdded=!1}quitAndInstall(e=!1,a=!1){this._logger.info("Install on explicit quitAndInstall"),this.install(e,e?a:this.autoRunAppAfterInstall)?setImmediate((()=>{p(2298).autoUpdater.emit("before-quit-for-update"),this.app.quit()})):this.quitAndInstallCalled=!1}executeDownload(e){return super.executeDownload({...e,done:e=>(this.dispatchUpdateDownloaded(e),this.addQuitHandler(),Promise.resolve())})}install(e,a){if(this.quitAndInstallCalled)return this._logger.warn("install call ignored: quitAndInstallCalled is set to true"),!1;const p=this.downloadedUpdateHelper,t=null==p?null:p.file,d=null==p?null:p.downloadedFileInfo;if(null==t||null==d)return this.dispatchError(new Error("No valid update available, can't quit and install")),!1;this.quitAndInstallCalled=!0;try{return this._logger.info(`Install: isSilent: ${e}, isForceRunAfter: ${a}`),this.doInstall({installerPath:t,isSilent:e,isForceRunAfter:a,isAdminRightsRequired:d.isAdminRightsRequired})}catch(e){return this.dispatchError(e),!1}}addQuitHandler(){!this.quitHandlerAdded&&this.autoInstallOnAppQuit&&(this.quitHandlerAdded=!0,this.app.onQuit((e=>{this.quitAndInstallCalled?this._logger.info("Update installer has already been triggered. Quitting application."):this.autoInstallOnAppQuit?0===e?(this._logger.info("Auto install update on quit"),this.install(!0,!1)):this._logger.info(`Update will be not installed on quit because application is quitting with exit code ${e}`):this._logger.info("Update will not be installed on quit because autoInstallOnAppQuit is set to false.")})))}}a.BaseUpdater=d},2837:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.createTempUpdateFile=a.DownloadedUpdateHelper=void 0;const t=p(6113),d=p(7147),i=p(2307),r=p(344),n=p(1017);a.DownloadedUpdateHelper=class{constructor(e){this.cacheDir=e,this._file=null,this._packageFile=null,this.versionInfo=null,this.fileInfo=null,this._downloadedFileInfo=null}get downloadedFileInfo(){return this._downloadedFileInfo}get file(){return this._file}get packageFile(){return this._packageFile}get cacheDirForPendingUpdate(){return n.join(this.cacheDir,"pending")}async validateDownloadedPath(e,a,p,t){if(null!=this.versionInfo&&this.file===e&&null!=this.fileInfo)return i(this.versionInfo,a)&&i(this.fileInfo.info,p.info)&&await r.pathExists(e)?e:null;const d=await this.getValidCachedUpdateFile(p,t);return null===d?null:(t.info(`Update has already been downloaded to ${e}).`),this._file=d,d)}async setDownloadedFile(e,a,p,t,d,i){this._file=e,this._packageFile=a,this.versionInfo=p,this.fileInfo=t,this._downloadedFileInfo={fileName:d,sha512:t.info.sha512,isAdminRightsRequired:!0===t.info.isAdminRightsRequired},i&&await r.outputJson(this.getUpdateInfoFile(),this._downloadedFileInfo)}async clear(){this._file=null,this._packageFile=null,this.versionInfo=null,this.fileInfo=null,await this.cleanCacheDirForPendingUpdate()}async cleanCacheDirForPendingUpdate(){try{await r.emptyDir(this.cacheDirForPendingUpdate)}catch(e){}}async getValidCachedUpdateFile(e,a){var p;const i=this.getUpdateInfoFile();if(!await r.pathExists(i))return null;let o;try{o=await r.readJson(i)}catch(e){let p="No cached update info available";return"ENOENT"!==e.code&&(await this.cleanCacheDirForPendingUpdate(),p+=` (error on read: ${e.message})`),a.info(p),null}if(null===(p=null!==(null==o?void 0:o.fileName))||void 0===p||!p)return a.warn("Cached update info is corrupted: no fileName, directory for cached update will be cleaned"),await this.cleanCacheDirForPendingUpdate(),null;if(e.info.sha512!==o.sha512)return a.info(`Cached update sha512 checksum doesn't match the latest available update. New update must be downloaded. Cached: ${o.sha512}, expected: ${e.info.sha512}. Directory for cached update will be cleaned`),await this.cleanCacheDirForPendingUpdate(),null;const s=n.join(this.cacheDirForPendingUpdate,o.fileName);if(!await r.pathExists(s))return a.info("Cached update file doesn't exist"),null;const l=await function(e,a="sha512",p="base64",i){return new Promise(((r,n)=>{const o=t.createHash(a);o.on("error",n).setEncoding(p),d.createReadStream(e,{...i,highWaterMark:1048576}).on("error",n).on("end",(()=>{o.end(),r(o.read())})).pipe(o,{end:!1})}))}(s);return e.info.sha512!==l?(a.warn(`Sha512 checksum doesn't match the latest available update. New update must be downloaded. Cached: ${l}, expected: ${e.info.sha512}`),await this.cleanCacheDirForPendingUpdate(),null):(this._downloadedFileInfo=o,s)}getUpdateInfoFile(){return n.join(this.cacheDirForPendingUpdate,"update-info.json")}},a.createTempUpdateFile=async function(e,a,p){let t=0,d=n.join(a,e);for(let i=0;i<3;i++)try{return await r.unlink(d),d}catch(i){if("ENOENT"===i.code)return d;p.warn(`Error on remove temp update file: ${i}`),d=n.join(a,`${t++}-${e}`)}return d}},6431:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.ElectronAppAdapter=void 0;const t=p(1017),d=p(6110);a.ElectronAppAdapter=class{constructor(e=p(2298).app){this.app=e}whenReady(){return this.app.whenReady()}get version(){return this.app.getVersion()}get name(){return this.app.getName()}get isPackaged(){return!0===this.app.isPackaged}get appUpdateConfigPath(){return this.isPackaged?t.join(process.resourcesPath,"app-update.yml"):t.join(this.app.getAppPath(),"dev-app-update.yml")}get userDataPath(){return this.app.getPath("userData")}get baseCachePath(){return d.getAppCacheDir()}quit(){this.app.quit()}onQuit(e){this.app.once("quit",((a,p)=>e(p)))}}},5741:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.MacUpdater=void 0;const t=p(9152),d=p(344),i=p(7147),r=p(3685),n=p(8459),o=p(2310),s=p(2081),l=p(6113);class m extends n.AppUpdater{constructor(e,a){super(e,a),this.nativeUpdater=p(2298).autoUpdater,this.squirrelDownloadedUpdate=!1,this.nativeUpdater.on("error",(e=>{this._logger.warn(e),this.emit("error",e)})),this.nativeUpdater.on("update-downloaded",(()=>{this.squirrelDownloadedUpdate=!0}))}debug(e){null!=this._logger.debug&&this._logger.debug(e)}async doDownloadUpdate(e){let a=e.updateInfoAndProvider.provider.resolveFiles(e.updateInfoAndProvider.info);const p=this._logger;let d=!1;try{this.debug("Checking for macOS Rosetta environment"),d=s.execFileSync("sysctl",["sysctl.proc_translated"],{encoding:"utf8"}).includes("sysctl.proc_translated: 1"),p.info(`Checked for macOS Rosetta environment (isRosetta=${d})`)}catch(e){p.warn(`sysctl shell command to check for macOS Rosetta environment failed: ${e}`)}let i=!1;try{this.debug("Checking for arm64 in uname");const e=s.execFileSync("uname",["-a"],{encoding:"utf8"}).includes("ARM");p.info(`Checked 'uname -a': arm64=${e}`),i=i||e}catch(e){p.warn(`uname shell command to check for arm64 failed: ${e}`)}i=i||"arm64"===process.arch||d;const r=e=>{var a;return e.url.pathname.includes("arm64")||(null===(a=e.info.url)||void 0===a?void 0:a.includes("arm64"))};a=i&&a.some(r)?a.filter((e=>i===r(e))):a.filter((e=>!r(e)));const n=o.findFile(a,"zip",["pkg","dmg"]);if(null==n)throw t.newError(`ZIP file not provided: ${t.safeStringifyJson(a)}`,"ERR_UPDATER_ZIP_FILE_NOT_FOUND");return this.executeDownload({fileExtension:"zip",fileInfo:n,downloadUpdateOptions:e,task:(e,a)=>this.httpExecutor.download(n.url,e,a),done:e=>this.updateDownloaded(n,e)})}async updateDownloaded(e,a){var p,t;const n=a.downloadedFile,o=null!==(p=e.info.size)&&void 0!==p?p:(await d.stat(n)).size,s=this._logger,m=`fileToProxy=${e.url.href}`;this.debug(`Creating proxy server for native Squirrel.Mac (${m})`),null===(t=this.server)||void 0===t||t.close(),this.server=r.createServer(),this.debug(`Proxy server for native Squirrel.Mac is created (${m})`),this.server.on("close",(()=>{s.info(`Proxy server for native Squirrel.Mac is closed (${m})`)}));const u=e=>{const a=e.address();return"string"==typeof a?a:`http://127.0.0.1:${null==a?void 0:a.port}`};return await new Promise(((e,p)=>{const t=l.randomBytes(64).toString("base64").replace(/\//g,"_").replace(/\+/g,"-"),d=Buffer.from(`autoupdater:${t}`,"ascii"),r=`/${l.randomBytes(64).toString("hex")}.zip`;this.server.on("request",((a,d)=>{const l=a.url;if(s.info(`${l} requested`),"/"===l){if(!a.headers.authorization||-1===a.headers.authorization.indexOf("Basic "))return d.statusCode=401,d.statusMessage="Invalid Authentication Credentials",d.end(),void s.warn("No authenthication info");const e=a.headers.authorization.split(" ")[1],p=Buffer.from(e,"base64").toString("ascii"),[i,n]=p.split(":");if("autoupdater"!==i||n!==t)return d.statusCode=401,d.statusMessage="Invalid Authentication Credentials",d.end(),void s.warn("Invalid authenthication credentials");const o=Buffer.from(`{ "url": "${u(this.server)}${r}" }`);return d.writeHead(200,{"Content-Type":"application/json","Content-Length":o.length}),void d.end(o)}if(!l.startsWith(r))return s.warn(`${l} requested, but not supported`),d.writeHead(404),void d.end();s.info(`${r} requested by Squirrel.Mac, pipe ${n}`);let m=!1;d.on("finish",(()=>{m||(this.nativeUpdater.removeListener("error",p),e([]))}));const c=i.createReadStream(n);c.on("error",(e=>{try{d.end()}catch(e){s.warn(`cannot end response: ${e}`)}m=!0,this.nativeUpdater.removeListener("error",p),p(new Error(`Cannot pipe "${n}": ${e}`))})),d.writeHead(200,{"Content-Type":"application/zip","Content-Length":o}),c.pipe(d)})),this.debug(`Proxy server for native Squirrel.Mac is starting to listen (${m})`),this.server.listen(0,"127.0.0.1",(()=>{this.debug(`Proxy server for native Squirrel.Mac is listening (address=${u(this.server)}, ${m})`),this.nativeUpdater.setFeedURL({url:u(this.server),headers:{"Cache-Control":"no-cache",Authorization:`Basic ${d.toString("base64")}`}}),this.dispatchUpdateDownloaded(a),this.autoInstallOnAppQuit?(this.nativeUpdater.once("error",p),this.nativeUpdater.checkForUpdates()):e([])}))}))}quitAndInstall(){var e;this.squirrelDownloadedUpdate?(this.nativeUpdater.quitAndInstall(),null===(e=this.server)||void 0===e||e.close()):(this.nativeUpdater.on("update-downloaded",(()=>{var e;this.nativeUpdater.quitAndInstall(),null===(e=this.server)||void 0===e||e.close()})),this.autoInstallOnAppQuit||this.nativeUpdater.checkForUpdates())}}a.MacUpdater=m},3023:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.NsisUpdater=void 0;const t=p(9152),d=p(2081),i=p(1017),r=p(4502),n=p(3458),o=p(8334),s=p(7430),l=p(1293),m=p(2310),u=p(344),c=p(6659),h=p(7310),f=p(9796);class v extends r.BaseUpdater{constructor(e,a){super(e,a)}doDownloadUpdate(e){const a=e.updateInfoAndProvider.provider,p=m.findFile(a.resolveFiles(e.updateInfoAndProvider.info),"exe");return this.executeDownload({fileExtension:"exe",downloadUpdateOptions:e,fileInfo:p,task:async(d,i,r,n)=>{const o=p.packageInfo,s=null!=o&&null!=r;if(s&&e.disableWebInstaller)throw t.newError(`Unable to download new version ${e.updateInfoAndProvider.info.version}. Web Installers are disabled`,"ERR_UPDATER_WEB_INSTALLER_DISABLED");s||e.disableWebInstaller||this._logger.warn("disableWebInstaller is set to false, you should set it to true if you do not plan on using a web installer. This will default to true in a future version."),(s||await this.differentialDownloadInstaller(p,e,d,a))&&await this.httpExecutor.download(p.url,d,i);const l=await this.verifySignature(d);if(null!=l)throw await n(),t.newError(`New version ${e.updateInfoAndProvider.info.version} is not signed by the application owner: ${l}`,"ERR_UPDATER_INVALID_SIGNATURE");if(s&&await this.differentialDownloadWebPackage(e,o,r,a))try{await this.httpExecutor.download(new h.URL(o.path),r,{headers:e.requestHeaders,cancellationToken:e.cancellationToken,sha512:o.sha512})}catch(e){try{await u.unlink(r)}catch(e){}throw e}}})}async verifySignature(e){let a;try{if(a=(await this.configOnDisk.value).publisherName,null==a)return null}catch(e){if("ENOENT"===e.code)return null;throw e}return await c.verifySignature(Array.isArray(a)?a:[a],e,this._logger)}doInstall(e){const a=["--updated"];e.isSilent&&a.push("/S"),e.isForceRunAfter&&a.push("--force-run"),this.installDirectory&&a.push(`/D=${this.installDirectory}`);const p=null==this.downloadedUpdateHelper?null:this.downloadedUpdateHelper.packageFile;null!=p&&a.push(`--package-file=${p}`);const t=()=>{w(i.join(process.resourcesPath,"elevate.exe"),[e.installerPath].concat(a)).catch((e=>this.dispatchError(e)))};return e.isAdminRightsRequired?(this._logger.info("isAdminRightsRequired is set to true, run installer using elevate.exe"),t(),!0):(w(e.installerPath,a).catch((e=>{const a=e.code;this._logger.info(`Cannot run installer: error code: ${a}, error message: "${e.message}", will be executed again using elevate if EACCES"`),"UNKNOWN"===a||"EACCES"===a?t():this.dispatchError(e)})),!0)}async differentialDownloadInstaller(e,a,p,d){try{if(null!=this._testOnlyOptions&&!this._testOnlyOptions.isUseDifferentialDownload)return!0;const r=l.blockmapFiles(e.url,this.app.version,a.updateInfoAndProvider.info.version);this._logger.info(`Download block maps (old: "${r[0]}", new: ${r[1]})`);const n=async e=>{const p=await this.httpExecutor.downloadToBuffer(e,{headers:a.requestHeaders,cancellationToken:a.cancellationToken});if(null==p||0===p.length)throw new Error(`Blockmap "${e.href}" is empty`);try{return JSON.parse(f.gunzipSync(p).toString())}catch(a){throw new Error(`Cannot parse blockmap "${e.href}", error: ${a}`)}},m={newUrl:e.url,oldFile:i.join(this.downloadedUpdateHelper.cacheDir,t.CURRENT_APP_INSTALLER_FILE_NAME),logger:this._logger,newFile:p,isUseMultipleRangeRequest:d.isUseMultipleRangeRequest,requestHeaders:a.requestHeaders,cancellationToken:a.cancellationToken};this.listenerCount(s.DOWNLOAD_PROGRESS)>0&&(m.onProgress=e=>this.emit(s.DOWNLOAD_PROGRESS,e));const u=await Promise.all(r.map((e=>n(e))));return await new o.GenericDifferentialDownloader(e.info,this.httpExecutor,m).download(u[0],u[1]),!1}catch(e){if(this._logger.error(`Cannot download differentially, fallback to full download: ${e.stack||e}`),null!=this._testOnlyOptions)throw e;return!0}}async differentialDownloadWebPackage(e,a,p,d){if(null==a.blockMapSize)return!0;try{const r={newUrl:new h.URL(a.path),oldFile:i.join(this.downloadedUpdateHelper.cacheDir,t.CURRENT_APP_PACKAGE_FILE_NAME),logger:this._logger,newFile:p,requestHeaders:this.requestHeaders,isUseMultipleRangeRequest:d.isUseMultipleRangeRequest,cancellationToken:e.cancellationToken};this.listenerCount(s.DOWNLOAD_PROGRESS)>0&&(r.onProgress=e=>this.emit(s.DOWNLOAD_PROGRESS,e)),await new n.FileWithEmbeddedBlockMapDifferentialDownloader(a,this.httpExecutor,r).download()}catch(e){return this._logger.error(`Cannot download differentially, fallback to full download: ${e.stack||e}`),"win32"===process.platform}return!1}}async function w(e,a){return new Promise(((p,t)=>{try{const i=d.spawn(e,a,{detached:!0,stdio:"ignore"});i.on("error",(e=>{t(e)})),i.unref(),void 0!==i.pid&&p(!0)}catch(e){t(e)}}))}a.NsisUpdater=v},3125:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.DataSplitter=a.copyData=void 0;const t=p(9152),d=p(7147),i=p(2781),r=p(7777),n=Buffer.from("\r\n\r\n");var o;function s(e,a,p,t,i){const r=d.createReadStream("",{fd:p,autoClose:!1,start:e.start,end:e.end-1});r.on("error",t),r.once("end",i),r.pipe(a,{end:!1})}!function(e){e[e.INIT=0]="INIT",e[e.HEADER=1]="HEADER",e[e.BODY=2]="BODY"}(o||(o={})),a.copyData=s;class l extends i.Writable{constructor(e,a,p,t,d,i){super(),this.out=e,this.options=a,this.partIndexToTaskIndex=p,this.partIndexToLength=d,this.finishHandler=i,this.partIndex=-1,this.headerListBuffer=null,this.readState=o.INIT,this.ignoreByteCount=0,this.remainingPartDataCount=0,this.actualPartLength=0,this.boundaryLength=t.length+4,this.ignoreByteCount=this.boundaryLength-2}get isFinished(){return this.partIndex===this.partIndexToLength.length}_write(e,a,p){this.isFinished?console.error(`Trailing ignored data: ${e.length} bytes`):this.handleData(e).then(p).catch(p)}async handleData(e){let a=0;if(0!==this.ignoreByteCount&&0!==this.remainingPartDataCount)throw t.newError("Internal error","ERR_DATA_SPLITTER_BYTE_COUNT_MISMATCH");if(this.ignoreByteCount>0){const p=Math.min(this.ignoreByteCount,e.length);this.ignoreByteCount-=p,a=p}else if(this.remainingPartDataCount>0){const p=Math.min(this.remainingPartDataCount,e.length);this.remainingPartDataCount-=p,await this.processPartData(e,0,p),a=p}if(a!==e.length){if(this.readState===o.HEADER){const p=this.searchHeaderListEnd(e,a);if(-1===p)return;a=p,this.readState=o.BODY,this.headerListBuffer=null}for(;;){if(this.readState===o.BODY)this.readState=o.INIT;else{this.partIndex++;let p=this.partIndexToTaskIndex.get(this.partIndex);if(null==p){if(!this.isFinished)throw t.newError("taskIndex is null","ERR_DATA_SPLITTER_TASK_INDEX_IS_NULL");p=this.options.end}const d=0===this.partIndex?this.options.start:this.partIndexToTaskIndex.get(this.partIndex-1)+1;if(d<p)await this.copyExistingData(d,p);else if(d>p)throw t.newError("prevTaskIndex must be < taskIndex","ERR_DATA_SPLITTER_TASK_INDEX_ASSERT_FAILED");if(this.isFinished)return this.onPartEnd(),void this.finishHandler();if(a=this.searchHeaderListEnd(e,a),-1===a)return void(this.readState=o.HEADER)}const p=this.partIndexToLength[this.partIndex],d=a+p,i=Math.min(d,e.length);if(await this.processPartStarted(e,a,i),this.remainingPartDataCount=p-(i-a),this.remainingPartDataCount>0)return;if(a=d+this.boundaryLength,a>=e.length)return void(this.ignoreByteCount=this.boundaryLength-(e.length-d))}}}copyExistingData(e,a){return new Promise(((p,t)=>{const d=()=>{if(e===a)return void p();const i=this.options.tasks[e];i.kind===r.OperationKind.COPY?s(i,this.out,this.options.oldFileFd,t,(()=>{e++,d()})):t(new Error("Task kind must be COPY"))};d()}))}searchHeaderListEnd(e,a){const p=e.indexOf(n,a);if(-1!==p)return p+n.length;const t=0===a?e:e.slice(a);return null==this.headerListBuffer?this.headerListBuffer=t:this.headerListBuffer=Buffer.concat([this.headerListBuffer,t]),-1}onPartEnd(){const e=this.partIndexToLength[this.partIndex-1];if(this.actualPartLength!==e)throw t.newError(`Expected length: ${e} differs from actual: ${this.actualPartLength}`,"ERR_DATA_SPLITTER_LENGTH_MISMATCH");this.actualPartLength=0}processPartStarted(e,a,p){return 0!==this.partIndex&&this.onPartEnd(),this.processPartData(e,a,p)}processPartData(e,a,p){this.actualPartLength+=p-a;const t=this.out;return t.write(0===a&&e.length===p?e:e.slice(a,p))?Promise.resolve():new Promise(((e,a)=>{t.on("error",a),t.once("drain",(()=>{t.removeListener("error",a),e()}))}))}}a.DataSplitter=l},8144:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.DifferentialDownloader=void 0;const t=p(9152),d=p(344),i=p(7147),r=p(3125),n=p(7310),o=p(7777),s=p(2150),l=p(1385);function m(e,a=" KB"){return new Intl.NumberFormat("en").format((e/1024).toFixed(2))+a}a.DifferentialDownloader=class{constructor(e,a,p){this.blockAwareFileInfo=e,this.httpExecutor=a,this.options=p,this.fileMetadataBuffer=null,this.logger=p.logger}createRequestOptions(){const e={headers:{...this.options.requestHeaders,accept:"*/*"}};return t.configureRequestUrl(this.options.newUrl,e),t.configureRequestOptions(e),e}doDownload(e,a){if(e.version!==a.version)throw new Error(`version is different (${e.version} - ${a.version}), full download is required`);const p=this.logger,t=o.computeOperations(e,a,p);null!=p.debug&&p.debug(JSON.stringify(t,null,2));let d=0,i=0;for(const e of t){const a=e.end-e.start;e.kind===o.OperationKind.DOWNLOAD?d+=a:i+=a}const r=this.blockAwareFileInfo.size;if(d+i+(null==this.fileMetadataBuffer?0:this.fileMetadataBuffer.length)!==r)throw new Error(`Internal error, size mismatch: downloadSize: ${d}, copySize: ${i}, newSize: ${r}`);return p.info(`Full: ${m(r)}, To download: ${m(d)} (${Math.round(d/(r/100))}%)`),this.downloadFile(t)}downloadFile(e){const a=[],p=()=>Promise.all(a.map((e=>d.close(e.descriptor).catch((a=>{this.logger.error(`cannot close file "${e.path}": ${a}`)})))));return this.doDownloadFile(e,a).then(p).catch((e=>p().catch((a=>{try{this.logger.error(`cannot close files: ${a}`)}catch(e){try{console.error(e)}catch(e){}}throw e})).then((()=>{throw e}))))}async doDownloadFile(e,a){const p=await d.open(this.options.oldFile,"r");a.push({descriptor:p,path:this.options.oldFile});const m=await d.open(this.options.newFile,"w");a.push({descriptor:m,path:this.options.newFile});const u=i.createWriteStream(this.options.newFile,{fd:m});await new Promise(((d,i)=>{const m=[];let c;if(!this.options.isUseMultipleRangeRequest&&this.options.onProgress){const a=[];let p=0;for(const t of e)t.kind===o.OperationKind.DOWNLOAD&&(a.push(t.end-t.start),p+=t.end-t.start);const t={expectedByteCounts:a,grandTotal:p};c=new l.ProgressDifferentialDownloadCallbackTransform(t,this.options.cancellationToken,this.options.onProgress),m.push(c)}const h=new t.DigestTransform(this.blockAwareFileInfo.sha512);h.isValidateOnEnd=!1,m.push(h),u.on("finish",(()=>{u.close((()=>{a.splice(1,1);try{h.validate()}catch(e){return void i(e)}d(void 0)}))})),m.push(u);let f=null;for(const e of m)e.on("error",i),f=null==f?e:f.pipe(e);const v=m[0];let w;if(this.options.isUseMultipleRangeRequest)return w=s.executeTasksUsingMultipleRangeRequests(this,e,v,p,i),void w(0);let g=0,y=null;this.logger.info(`Differential download: ${this.options.newUrl}`);const b=this.createRequestOptions();b.redirect="manual",w=a=>{var d,s;if(a>=e.length)return null!=this.fileMetadataBuffer&&v.write(this.fileMetadataBuffer),void v.end();const l=e[a++];if(l.kind===o.OperationKind.COPY)return c&&c.beginFileCopy(),void r.copyData(l,v,p,i,(()=>w(a)));const m=`bytes=${l.start}-${l.end-1}`;b.headers.range=m,null===(s=null===(d=this.logger)||void 0===d?void 0:d.debug)||void 0===s||s.call(d,`download range: ${m}`),c&&c.beginRangeDownload();const u=this.httpExecutor.createRequest(b,(e=>{e.statusCode>=400&&i(t.createHttpError(e)),e.pipe(v,{end:!1}),e.once("end",(()=>{c&&c.endRangeDownload(),100==++g?(g=0,setTimeout((()=>w(a)),1e3)):w(a)}))}));u.on("redirect",((e,a,p)=>{this.logger.info(`Redirect to ${function(e){const a=e.indexOf("?");return a<0?e:e.substring(0,a)}(p)}`),y=p,t.configureRequestUrl(new n.URL(y),b),u.followRedirect()})),this.httpExecutor.addErrorAndTimeoutHandlers(u,i),u.end()},w(0)}))}async readRemoteBytes(e,a){const p=Buffer.allocUnsafe(a+1-e),t=this.createRequestOptions();t.headers.range=`bytes=${e}-${a}`;let d=0;if(await this.request(t,(e=>{e.copy(p,d),d+=e.length})),d!==p.length)throw new Error(`Received data length ${d} is not equal to expected ${p.length}`);return p}request(e,a){return new Promise(((p,t)=>{const d=this.httpExecutor.createRequest(e,(e=>{s.checkIsRangesSupported(e,t)&&(e.on("data",a),e.on("end",(()=>p())))}));this.httpExecutor.addErrorAndTimeoutHandlers(d,t),d.end()}))}}},3458:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.FileWithEmbeddedBlockMapDifferentialDownloader=void 0;const t=p(344),d=p(8144),i=p(9796);class r extends d.DifferentialDownloader{async download(){const e=this.blockAwareFileInfo,a=e.size,p=a-(e.blockMapSize+4);this.fileMetadataBuffer=await this.readRemoteBytes(p,a-1);const d=n(this.fileMetadataBuffer.slice(0,this.fileMetadataBuffer.length-4));await this.doDownload(await async function(e){const a=await t.open(e,"r");try{const e=(await t.fstat(a)).size,p=Buffer.allocUnsafe(4);await t.read(a,p,0,p.length,e-p.length);const d=Buffer.allocUnsafe(p.readUInt32BE(0));return await t.read(a,d,0,d.length,e-p.length-d.length),await t.close(a),n(d)}catch(e){throw await t.close(a),e}}(this.options.oldFile),d)}}function n(e){return JSON.parse(i.inflateRawSync(e).toString())}a.FileWithEmbeddedBlockMapDifferentialDownloader=r},8334:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.GenericDifferentialDownloader=void 0;const t=p(8144);class d extends t.DifferentialDownloader{download(e,a){return this.doDownload(e,a)}}a.GenericDifferentialDownloader=d},1385:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.ProgressDifferentialDownloadCallbackTransform=void 0;const t=p(2781);var d;!function(e){e[e.COPY=0]="COPY",e[e.DOWNLOAD=1]="DOWNLOAD"}(d||(d={}));class i extends t.Transform{constructor(e,a,p){super(),this.progressDifferentialDownloadInfo=e,this.cancellationToken=a,this.onProgress=p,this.start=Date.now(),this.transferred=0,this.delta=0,this.expectedBytes=0,this.index=0,this.operationType=d.COPY,this.nextUpdate=this.start+1e3}_transform(e,a,p){if(this.cancellationToken.cancelled)return void p(new Error("cancelled"),null);if(this.operationType==d.COPY)return void p(null,e);this.transferred+=e.length,this.delta+=e.length;const t=Date.now();t>=this.nextUpdate&&this.transferred!==this.expectedBytes&&this.transferred!==this.progressDifferentialDownloadInfo.grandTotal&&(this.nextUpdate=t+1e3,this.onProgress({total:this.progressDifferentialDownloadInfo.grandTotal,delta:this.delta,transferred:this.transferred,percent:this.transferred/this.progressDifferentialDownloadInfo.grandTotal*100,bytesPerSecond:Math.round(this.transferred/((t-this.start)/1e3))}),this.delta=0),p(null,e)}beginFileCopy(){this.operationType=d.COPY}beginRangeDownload(){this.operationType=d.DOWNLOAD,this.expectedBytes+=this.progressDifferentialDownloadInfo.expectedByteCounts[this.index++]}endRangeDownload(){this.transferred!==this.progressDifferentialDownloadInfo.grandTotal&&this.onProgress({total:this.progressDifferentialDownloadInfo.grandTotal,delta:this.delta,transferred:this.transferred,percent:this.transferred/this.progressDifferentialDownloadInfo.grandTotal*100,bytesPerSecond:Math.round(this.transferred/((Date.now()-this.start)/1e3))})}_flush(e){this.cancellationToken.cancelled?e(new Error("cancelled")):(this.onProgress({total:this.progressDifferentialDownloadInfo.grandTotal,delta:this.delta,transferred:this.transferred,percent:100,bytesPerSecond:Math.round(this.transferred/((Date.now()-this.start)/1e3))}),this.delta=0,this.transferred=0,e(null))}}a.ProgressDifferentialDownloadCallbackTransform=i},7777:(e,a)=>{"use strict";var p;Object.defineProperty(a,"__esModule",{value:!0}),a.computeOperations=a.OperationKind=void 0,function(e){e[e.COPY=0]="COPY",e[e.DOWNLOAD=1]="DOWNLOAD"}(p=a.OperationKind||(a.OperationKind={})),a.computeOperations=function(e,a,t){const r=i(e.files),n=i(a.files);let o=null;const s=a.files[0],l=[],m=s.name,u=r.get(m);if(null==u)throw new Error(`no file ${m} in old blockmap`);const c=n.get(m);let h=0;const{checksumToOffset:f,checksumToOldSize:v}=function(e,a,p){const t=new Map,d=new Map;let i=a;for(let a=0;a<e.checksums.length;a++){const r=e.checksums[a],n=e.sizes[a],o=d.get(r);if(void 0===o)t.set(r,i),d.set(r,n);else if(null!=p.debug){const e=o===n?"(same size)":`(size: ${o}, this size: ${n})`;p.debug(`${r} duplicated in blockmap ${e}, it doesn't lead to broken differential downloader, just corresponding block will be skipped)`)}i+=n}return{checksumToOffset:t,checksumToOldSize:d}}(r.get(m),u.offset,t);let w=s.offset;for(let e=0;e<c.checksums.length;w+=c.sizes[e],e++){const a=c.sizes[e],i=c.checksums[e];let r=f.get(i);null!=r&&v.get(i)!==a&&(t.warn(`Checksum ("${i}") matches, but size differs (old: ${v.get(i)}, new: ${a})`),r=void 0),void 0===r?(h++,null!=o&&o.kind===p.DOWNLOAD&&o.end===w?o.end+=a:(o={kind:p.DOWNLOAD,start:w,end:w+a},d(o,l,i,e))):null!=o&&o.kind===p.COPY&&o.end===r?o.end+=a:(o={kind:p.COPY,start:r,end:r+a},d(o,l,i,e))}return h>0&&t.info(`File${"file"===s.name?"":" "+s.name} has ${h} changed blocks`),l};const t="true"===process.env.DIFFERENTIAL_DOWNLOAD_PLAN_BUILDER_VALIDATE_RANGES;function d(e,a,d,i){if(t&&0!==a.length){const t=a[a.length-1];if(t.kind===e.kind&&e.start<t.end&&e.start>t.start){const a=[t.start,t.end,e.start,e.end].reduce(((e,a)=>e<a?e:a));throw new Error(`operation (block index: ${i}, checksum: ${d}, kind: ${p[e.kind]}) overlaps previous operation (checksum: ${d}):\nabs: ${t.start} until ${t.end} and ${e.start} until ${e.end}\nrel: ${t.start-a} until ${t.end-a} and ${e.start-a} until ${e.end-a}`)}}a.push(e)}function i(e){const a=new Map;for(const p of e)a.set(p.name,p);return a}},2150:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.checkIsRangesSupported=a.executeTasksUsingMultipleRangeRequests=void 0;const t=p(9152),d=p(3125),i=p(7777);function r(e,a){if(e.statusCode>=400)return a(t.createHttpError(e)),!1;if(206!==e.statusCode){const p=t.safeGetHeader(e,"accept-ranges");if(null==p||"none"===p)return a(new Error(`Server doesn't support Accept-Ranges (response code ${e.statusCode})`)),!1}return!0}a.executeTasksUsingMultipleRangeRequests=function(e,a,p,n,o){const s=l=>{if(l>=a.length)return null!=e.fileMetadataBuffer&&p.write(e.fileMetadataBuffer),void p.end();const m=l+1e3;!function(e,a,p,n,o){let s="bytes=",l=0;const m=new Map,u=[];for(let e=a.start;e<a.end;e++){const p=a.tasks[e];p.kind===i.OperationKind.DOWNLOAD&&(s+=`${p.start}-${p.end-1}, `,m.set(l,e),l++,u.push(p.end-p.start))}if(l<=1){const t=s=>{if(s>=a.end)return void n();const l=a.tasks[s++];if(l.kind===i.OperationKind.COPY)d.copyData(l,p,a.oldFileFd,o,(()=>t(s)));else{const a=e.createRequestOptions();a.headers.Range=`bytes=${l.start}-${l.end-1}`;const d=e.httpExecutor.createRequest(a,(e=>{r(e,o)&&(e.pipe(p,{end:!1}),e.once("end",(()=>t(s))))}));e.httpExecutor.addErrorAndTimeoutHandlers(d,o),d.end()}};return void t(a.start)}const c=e.createRequestOptions();c.headers.Range=s.substring(0,s.length-2);const h=e.httpExecutor.createRequest(c,(e=>{if(!r(e,o))return;const i=t.safeGetHeader(e,"content-type"),s=/^multipart\/.+?(?:; boundary=(?:(?:"(.+)")|(?:([^\s]+))))$/i.exec(i);if(null==s)return void o(new Error(`Content-Type "multipart/byteranges" is expected, but got "${i}"`));const l=new d.DataSplitter(p,a,m,s[1]||s[2],u,n);l.on("error",o),e.pipe(l),e.on("end",(()=>{setTimeout((()=>{h.abort(),o(new Error("Response ends without calling any handlers"))}),1e4)}))}));e.httpExecutor.addErrorAndTimeoutHandlers(h,o),h.end()}(e,{tasks:a,start:l,end:Math.min(a.length,m),oldFileFd:n},p,(()=>s(m)),o)};return s},a.checkIsRangesSupported=r},1890:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.ElectronHttpExecutor=a.getNetSession=a.NET_SESSION_NAME=void 0;const t=p(9152);function d(){return p(2298).session.fromPartition(a.NET_SESSION_NAME,{cache:!1})}a.NET_SESSION_NAME="electron-updater",a.getNetSession=d;class i extends t.HttpExecutor{constructor(e){super(),this.proxyLoginCallback=e,this.cachedSession=null}async download(e,a,p){return await p.cancellationToken.createPromise(((d,i,r)=>{const n={headers:p.headers||void 0,redirect:"manual"};t.configureRequestUrl(e,n),t.configureRequestOptions(n),this.doDownload(n,{destination:a,options:p,onCancel:r,callback:e=>{null==e?d(a):i(e)},responseHandler:null},0)}))}createRequest(e,a){e.headers&&e.headers.Host&&(e.host=e.headers.Host,delete e.headers.Host),null==this.cachedSession&&(this.cachedSession=d());const t=p(2298).net.request({...e,session:this.cachedSession});return t.on("response",a),null!=this.proxyLoginCallback&&t.on("login",this.proxyLoginCallback),t}addRedirectHandlers(e,a,p,d,i){e.on("redirect",((r,n,o)=>{e.abort(),d>this.maxRedirects?p(this.createMaxRedirectError()):i(t.HttpExecutor.prepareRedirectUrlOptions(o,a))}))}}a.ElectronHttpExecutor=i},7430:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.UpdaterSignal=a.UPDATE_DOWNLOADED=a.DOWNLOAD_PROGRESS=a.NsisUpdater=a.MacUpdater=a.AppImageUpdater=a.Provider=a.CancellationToken=a.NoOpLogger=a.AppUpdater=void 0;const t=p(9152);Object.defineProperty(a,"CancellationToken",{enumerable:!0,get:function(){return t.CancellationToken}});var d=p(8459);Object.defineProperty(a,"AppUpdater",{enumerable:!0,get:function(){return d.AppUpdater}}),Object.defineProperty(a,"NoOpLogger",{enumerable:!0,get:function(){return d.NoOpLogger}});var i=p(2310);Object.defineProperty(a,"Provider",{enumerable:!0,get:function(){return i.Provider}});var r=p(3405);Object.defineProperty(a,"AppImageUpdater",{enumerable:!0,get:function(){return r.AppImageUpdater}});var n=p(5741);Object.defineProperty(a,"MacUpdater",{enumerable:!0,get:function(){return n.MacUpdater}});var o=p(3023);let s;function l(e,a,p){e.on(a,p)}Object.defineProperty(a,"NsisUpdater",{enumerable:!0,get:function(){return o.NsisUpdater}}),Object.defineProperty(a,"autoUpdater",{enumerable:!0,get:()=>s||(s="win32"===process.platform?new(p(3023).NsisUpdater):"darwin"===process.platform?new(p(5741).MacUpdater):new(p(3405).AppImageUpdater),s)}),a.DOWNLOAD_PROGRESS="download-progress",a.UPDATE_DOWNLOADED="update-downloaded",a.UpdaterSignal=class{constructor(e){this.emitter=e}login(e){l(this.emitter,"login",e)}progress(e){l(this.emitter,a.DOWNLOAD_PROGRESS,e)}updateDownloaded(e){l(this.emitter,a.UPDATE_DOWNLOADED,e)}updateCancelled(e){l(this.emitter,"update-cancelled",e)}}},4985:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.createClient=a.isUrlProbablySupportMultiRangeRequests=void 0;const t=p(9152),d=p(5494),i=p(1554),r=p(4184),n=p(3933),o=p(7268);function s(e){return!e.includes("s3.amazonaws.com")}a.isUrlProbablySupportMultiRangeRequests=s,a.createClient=function(e,a,p){if("string"==typeof e)throw t.newError("Please pass PublishConfiguration object","ERR_UPDATER_INVALID_PROVIDER_CONFIGURATION");const l=e.provider;switch(l){case"github":{const t=e,d=(t.private?process.env.GH_TOKEN||process.env.GITHUB_TOKEN:null)||t.token;return null==d?new r.GitHubProvider(t,a,p):new o.PrivateGitHubProvider(t,a,d,p)}case"bitbucket":return new d.BitbucketProvider(e,a,p);case"keygen":return new n.KeygenProvider(e,a,p);case"s3":case"spaces":return new i.GenericProvider({provider:"generic",url:t.getS3LikeProviderBaseUrl(e),channel:e.channel||null},a,{...p,isUseMultipleRangeRequest:!1});case"generic":{const t=e;return new i.GenericProvider(t,a,{...p,isUseMultipleRangeRequest:!1!==t.useMultipleRangeRequest&&s(t.url)})}case"custom":{const d=e,i=d.updateProvider;if(!i)throw t.newError("Custom provider not specified","ERR_UPDATER_INVALID_PROVIDER_CONFIGURATION");return new i(d,a,p)}default:throw t.newError(`Unsupported provider: ${l}`,"ERR_UPDATER_UNSUPPORTED_PROVIDER")}}},5494:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.BitbucketProvider=void 0;const t=p(9152),d=p(1293),i=p(2310);class r extends i.Provider{constructor(e,a,p){super({...p,isUseMultipleRangeRequest:!1}),this.configuration=e,this.updater=a;const{owner:t,slug:i}=e;this.baseUrl=d.newBaseUrl(`https://api.bitbucket.org/2.0/repositories/${t}/${i}/downloads`)}get channel(){return this.updater.channel||this.configuration.channel||"latest"}async getLatestVersion(){const e=new t.CancellationToken,a=d.getChannelFilename(this.getCustomChannelName(this.channel)),p=d.newUrlFromBase(a,this.baseUrl,this.updater.isAddNoCacheQuery);try{const t=await this.httpRequest(p,void 0,e);return i.parseUpdateInfo(t,a,p)}catch(e){throw t.newError(`Unable to find latest version on ${this.toString()}, please ensure release exists: ${e.stack||e.message}`,"ERR_UPDATER_LATEST_VERSION_NOT_FOUND")}}resolveFiles(e){return i.resolveFiles(e,this.baseUrl)}toString(){const{owner:e,slug:a}=this.configuration;return`Bitbucket (owner: ${e}, slug: ${a}, channel: ${this.channel})`}}a.BitbucketProvider=r},1554:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.GenericProvider=void 0;const t=p(9152),d=p(1293),i=p(2310);class r extends i.Provider{constructor(e,a,p){super(p),this.configuration=e,this.updater=a,this.baseUrl=d.newBaseUrl(this.configuration.url)}get channel(){const e=this.updater.channel||this.configuration.channel;return null==e?this.getDefaultChannelName():this.getCustomChannelName(e)}async getLatestVersion(){const e=d.getChannelFilename(this.channel),a=d.newUrlFromBase(e,this.baseUrl,this.updater.isAddNoCacheQuery);for(let p=0;;p++)try{return i.parseUpdateInfo(await this.httpRequest(a),e,a)}catch(a){if(a instanceof t.HttpError&&404===a.statusCode)throw t.newError(`Cannot find channel "${e}" update info: ${a.stack||a.message}`,"ERR_UPDATER_CHANNEL_FILE_NOT_FOUND");if("ECONNREFUSED"===a.code&&p<3){await new Promise(((e,a)=>{try{setTimeout(e,1e3*p)}catch(e){a(e)}}));continue}throw a}}resolveFiles(e){return i.resolveFiles(e,this.baseUrl)}}a.GenericProvider=r},4184:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.computeReleaseNotes=a.GitHubProvider=a.BaseGitHubProvider=void 0;const t=p(9152),d=p(1249),i=p(7310),r=p(1293),n=p(2310),o=/\/tag\/([^/]+)$/;class s extends n.Provider{constructor(e,a,p){super({...p,isUseMultipleRangeRequest:!1}),this.options=e,this.baseUrl=r.newBaseUrl(t.githubUrl(e,a));const d="github.com"===a?"api.github.com":a;this.baseApiUrl=r.newBaseUrl(t.githubUrl(e,d))}computeGithubBasePath(e){const a=this.options.host;return a&&!["github.com","api.github.com"].includes(a)?`/api/v3${e}`:e}}function l(e){const a=e.elementValueOrEmpty("content");return"No content."===a?"":a}function m(e,a,p,t){if(!a)return l(t);const i=[];for(const a of p.getElements("entry")){const p=/\/tag\/v?([^/]+)$/.exec(a.element("link").attribute("href"))[1];d.lt(e,p)&&i.push({version:p,note:l(a)})}return i.sort(((e,a)=>d.rcompare(e.version,a.version)))}a.BaseGitHubProvider=s,a.GitHubProvider=class extends s{constructor(e,a,p){super(e,"github.com",p),this.options=e,this.updater=a}async getLatestVersion(){var e,a,p,i;const s=new t.CancellationToken,l=await this.httpRequest(r.newUrlFromBase(`${this.basePath}.atom`,this.baseUrl),{accept:"application/xml, application/atom+xml, text/xml, */*"},s),u=t.parseXml(l);let c,h=u.element("entry",!1,"No published versions on GitHub"),f=null;try{if(this.updater.allowPrerelease){const t=(null===(e=this.updater)||void 0===e?void 0:e.channel)||(null===(a=d.prerelease(this.updater.currentVersion))||void 0===a?void 0:a[0])||null;if(null===t)f=o.exec(h.element("link").attribute("href"))[1];else for(const e of u.getElements("entry")){const a=o.exec(e.element("link").attribute("href"));if(null===a)continue;const i=a[1],r=(null===(p=d.prerelease(i))||void 0===p?void 0:p[0])||null,n=!t||["alpha","beta"].includes(t),s=!["alpha","beta"].includes(String(r)),l="beta"===t&&"alpha"===r;if(n&&!s&&!l){f=i;break}if(r&&r===t){f=i;break}}}else{f=await this.getLatestTagName(s);for(const e of u.getElements("entry"))if(o.exec(e.element("link").attribute("href"))[1]===f){h=e;break}}}catch(e){throw t.newError(`Cannot parse releases feed: ${e.stack||e.message},\nXML:\n${l}`,"ERR_UPDATER_INVALID_RELEASE_FEED")}if(null==f)throw t.newError("No published versions on GitHub","ERR_UPDATER_NO_PUBLISHED_VERSIONS");let v="",w="";const g=async e=>{v=r.getChannelFilename(e),w=r.newUrlFromBase(this.getBaseDownloadPath(String(f),v),this.baseUrl);const a=this.createRequestOptions(w);try{return await this.executor.request(a,s)}catch(e){if(e instanceof t.HttpError&&404===e.statusCode)throw t.newError(`Cannot find ${v} in the latest release artifacts (${w}): ${e.stack||e.message}`,"ERR_UPDATER_CHANNEL_FILE_NOT_FOUND");throw e}};try{const e=this.updater.allowPrerelease?this.getCustomChannelName(String((null===(i=d.prerelease(f))||void 0===i?void 0:i[0])||"latest")):this.getDefaultChannelName();c=await g(e)}catch(e){if(!this.updater.allowPrerelease)throw e;c=await g(this.getDefaultChannelName())}const y=n.parseUpdateInfo(c,v,w);return null==y.releaseName&&(y.releaseName=h.elementValueOrEmpty("title")),null==y.releaseNotes&&(y.releaseNotes=m(this.updater.currentVersion,this.updater.fullChangelog,u,h)),{tag:f,...y}}async getLatestTagName(e){const a=this.options,p=null==a.host||"github.com"===a.host?r.newUrlFromBase(`${this.basePath}/latest`,this.baseUrl):new i.URL(`${this.computeGithubBasePath(`/repos/${a.owner}/${a.repo}/releases`)}/latest`,this.baseApiUrl);try{const a=await this.httpRequest(p,{Accept:"application/json"},e);return null==a?null:JSON.parse(a).tag_name}catch(e){throw t.newError(`Unable to find latest version on GitHub (${p}), please ensure a production release exists: ${e.stack||e.message}`,"ERR_UPDATER_LATEST_VERSION_NOT_FOUND")}}get basePath(){return`/${this.options.owner}/${this.options.repo}/releases`}resolveFiles(e){return n.resolveFiles(e,this.baseUrl,(a=>this.getBaseDownloadPath(e.tag,a.replace(/ /g,"-"))))}getBaseDownloadPath(e,a){return`${this.basePath}/download/${e}/${a}`}},a.computeReleaseNotes=m},3933:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.KeygenProvider=void 0;const t=p(9152),d=p(1293),i=p(2310);class r extends i.Provider{constructor(e,a,p){super({...p,isUseMultipleRangeRequest:!1}),this.configuration=e,this.updater=a,this.baseUrl=d.newBaseUrl(`https://api.keygen.sh/v1/accounts/${this.configuration.account}/artifacts?product=${this.configuration.product}`)}get channel(){return this.updater.channel||this.configuration.channel||"stable"}async getLatestVersion(){const e=new t.CancellationToken,a=d.getChannelFilename(this.getCustomChannelName(this.channel)),p=d.newUrlFromBase(a,this.baseUrl,this.updater.isAddNoCacheQuery);try{const t=await this.httpRequest(p,{Accept:"application/vnd.api+json","Keygen-Version":"1.1"},e);return i.parseUpdateInfo(t,a,p)}catch(e){throw t.newError(`Unable to find latest version on ${this.toString()}, please ensure release exists: ${e.stack||e.message}`,"ERR_UPDATER_LATEST_VERSION_NOT_FOUND")}}resolveFiles(e){return i.resolveFiles(e,this.baseUrl)}toString(){const{account:e,product:a,platform:p}=this.configuration;return`Keygen (account: ${e}, product: ${a}, platform: ${p}, channel: ${this.channel})`}}a.KeygenProvider=r},7268:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.PrivateGitHubProvider=void 0;const t=p(9152),d=p(3320),i=p(1017),r=p(7310),n=p(1293),o=p(4184),s=p(2310);class l extends o.BaseGitHubProvider{constructor(e,a,p,t){super(e,"api.github.com",t),this.updater=a,this.token=p}createRequestOptions(e,a){const p=super.createRequestOptions(e,a);return p.redirect="manual",p}async getLatestVersion(){const e=new t.CancellationToken,a=n.getChannelFilename(this.getDefaultChannelName()),p=await this.getLatestVersionInfo(e),i=p.assets.find((e=>e.name===a));if(null==i)throw t.newError(`Cannot find ${a} in the release ${p.html_url||p.name}`,"ERR_UPDATER_CHANNEL_FILE_NOT_FOUND");const o=new r.URL(i.url);let s;try{s=d.load(await this.httpRequest(o,this.configureHeaders("application/octet-stream"),e))}catch(e){if(e instanceof t.HttpError&&404===e.statusCode)throw t.newError(`Cannot find ${a} in the latest release artifacts (${o}): ${e.stack||e.message}`,"ERR_UPDATER_CHANNEL_FILE_NOT_FOUND");throw e}return s.assets=p.assets,s}get fileExtraDownloadHeaders(){return this.configureHeaders("application/octet-stream")}configureHeaders(e){return{accept:e,authorization:`token ${this.token}`}}async getLatestVersionInfo(e){const a=this.updater.allowPrerelease;let p=this.basePath;a||(p=`${p}/latest`);const d=n.newUrlFromBase(p,this.baseUrl);try{const p=JSON.parse(await this.httpRequest(d,this.configureHeaders("application/vnd.github.v3+json"),e));return a?p.find((e=>e.prerelease))||p[0]:p}catch(e){throw t.newError(`Unable to find latest version on GitHub (${d}), please ensure a production release exists: ${e.stack||e.message}`,"ERR_UPDATER_LATEST_VERSION_NOT_FOUND")}}get basePath(){return this.computeGithubBasePath(`/repos/${this.options.owner}/${this.options.repo}/releases`)}resolveFiles(e){return s.getFileList(e).map((a=>{const p=i.posix.basename(a.url).replace(/ /g,"-"),d=e.assets.find((e=>null!=e&&e.name===p));if(null==d)throw t.newError(`Cannot find asset "${p}" in: ${JSON.stringify(e.assets,null,2)}`,"ERR_UPDATER_ASSET_NOT_FOUND");return{url:new r.URL(d.url),info:a}}))}}a.PrivateGitHubProvider=l},2310:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.resolveFiles=a.getFileList=a.parseUpdateInfo=a.findFile=a.Provider=void 0;const t=p(9152),d=p(3320),i=p(1293);function r(e){const a=e.files;if(null!=a&&a.length>0)return a;if(null!=e.path)return[{url:e.path,sha2:e.sha2,sha512:e.sha512}];throw t.newError(`No files provided: ${t.safeStringifyJson(e)}`,"ERR_UPDATER_NO_FILES_PROVIDED")}a.Provider=class{constructor(e){this.runtimeOptions=e,this.requestHeaders=null,this.executor=e.executor}get isUseMultipleRangeRequest(){return!1!==this.runtimeOptions.isUseMultipleRangeRequest}getChannelFilePrefix(){if("linux"===this.runtimeOptions.platform){const e=process.env.TEST_UPDATER_ARCH||process.arch;return"-linux"+("x64"===e?"":`-${e}`)}return"darwin"===this.runtimeOptions.platform?"-mac":""}getDefaultChannelName(){return this.getCustomChannelName("latest")}getCustomChannelName(e){return`${e}${this.getChannelFilePrefix()}`}get fileExtraDownloadHeaders(){return null}setRequestHeaders(e){this.requestHeaders=e}httpRequest(e,a,p){return this.executor.request(this.createRequestOptions(e,a),p)}createRequestOptions(e,a){const p={};return null==this.requestHeaders?null!=a&&(p.headers=a):p.headers=null==a?this.requestHeaders:{...this.requestHeaders,...a},t.configureRequestUrl(e,p),p}},a.findFile=function(e,a,p){if(0===e.length)throw t.newError("No files provided","ERR_UPDATER_NO_FILES_PROVIDED");const d=e.find((e=>e.url.pathname.toLowerCase().endsWith(`.${a}`)));return null!=d?d:null==p?e[0]:e.find((e=>!p.some((a=>e.url.pathname.toLowerCase().endsWith(`.${a}`)))))},a.parseUpdateInfo=function(e,a,p){if(null==e)throw t.newError(`Cannot parse update info from ${a} in the latest release artifacts (${p}): rawData: null`,"ERR_UPDATER_INVALID_UPDATE_INFO");let i;try{i=d.load(e)}catch(d){throw t.newError(`Cannot parse update info from ${a} in the latest release artifacts (${p}): ${d.stack||d.message}, rawData: ${e}`,"ERR_UPDATER_INVALID_UPDATE_INFO")}return i},a.getFileList=r,a.resolveFiles=function(e,a,p=(e=>e)){const d=r(e).map((e=>{if(null==e.sha2&&null==e.sha512)throw t.newError(`Update info doesn't contain nor sha256 neither sha512 checksum: ${t.safeStringifyJson(e)}`,"ERR_UPDATER_NO_CHECKSUM");return{url:i.newUrlFromBase(p(e.url),a),info:e}})),n=e.packages,o=null==n?null:n[process.arch]||n.ia32;return null!=o&&(d[0].packageInfo={...o,path:i.newUrlFromBase(p(o.path),a).href}),d}},1293:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.blockmapFiles=a.getChannelFilename=a.newUrlFromBase=a.newBaseUrl=void 0;const t=p(7310),d=p(1658);function i(e,a,p=!1){const d=new t.URL(e,a),i=a.search;return null!=i&&0!==i.length?d.search=i:p&&(d.search=`noCache=${Date.now().toString(32)}`),d}a.newBaseUrl=function(e){const a=new t.URL(e);return a.pathname.endsWith("/")||(a.pathname+="/"),a},a.newUrlFromBase=i,a.getChannelFilename=function(e){return`${e}.yml`},a.blockmapFiles=function(e,a,p){const t=i(`${e.pathname}.blockmap`,e);return[i(`${e.pathname.replace(new RegExp(d(p),"g"),a)}.blockmap`,e),t]}},6659:(e,a,p)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.verifySignature=void 0;const t=p(9152),d=p(2081),i=p(2037);function r(e,a,p){if(function(){const e=i.release();return e.startsWith("6.")&&!e.startsWith("6.3")}())e.warn(`Cannot execute Get-AuthenticodeSignature: ${a||p}. Ignoring signature validation due to unsupported powershell version. Please upgrade to powershell 3 or higher.`);else{try{d.execFileSync("powershell.exe",["-NoProfile","-NonInteractive","-Command","ConvertTo-Json test"],{timeout:1e4})}catch(a){return void e.warn(`Cannot execute ConvertTo-Json: ${a.message}. Ignoring signature validation due to unsupported powershell version. Please upgrade to powershell 3 or higher.`)}if(null!=a)throw a;if(p)throw new Error(`Cannot execute Get-AuthenticodeSignature, stderr: ${p}. Failing signature validation due to unknown stderr.`)}}a.verifySignature=function(e,a,p){return new Promise((i=>{const n=a.replace(/'/g,"''");d.execFile("powershell.exe",["-NoProfile","-NonInteractive","-InputFormat","None","-Command",`Get-AuthenticodeSignature -LiteralPath '${n}' | ConvertTo-Json -Compress | ForEach-Object { [Convert]::ToBase64String([System.Text.Encoding]::UTF8.GetBytes($_)) }`],{timeout:2e4},((a,d,n)=>{try{if(null!=a||n)return r(p,a,n),void i(null);const o=function(e){const a=JSON.parse(e);delete a.PrivateKey,delete a.IsOSBinary,delete a.SignatureType;const p=a.SignerCertificate;return null!=p&&(delete p.Archived,delete p.Extensions,delete p.Handle,delete p.HasPrivateKey,delete p.SubjectName),delete a.Path,a}(Buffer.from(d,"base64").toString("utf-8"));if(0===o.Status){const a=t.parseDn(o.SignerCertificate.Subject);let d=!1;for(const r of e){const e=t.parseDn(r);if(e.size?d=Array.from(e.keys()).every((p=>e.get(p)===a.get(p))):r===a.get("CN")&&(p.warn(`Signature validated using only CN ${r}. Please add your full Distinguished Name (DN) to publisherNames configuration`),d=!0),d)return void i(null)}}const s=`publisherNames: ${e.join(" | ")}, raw info: `+JSON.stringify(o,((e,a)=>"RawData"===e?void 0:a),2);p.warn(`Sign verification failed, installer signed with incorrect certificate: ${s}`),i(s)}catch(e){return r(p,e,null),void i(null)}}))}))}},6458:e=>{"use strict";e.exports=function(e){if(null===e||"object"!=typeof e)return e;if(e instanceof Object)var p={__proto__:a(e)};else p=Object.create(null);return Object.getOwnPropertyNames(e).forEach((function(a){Object.defineProperty(p,a,Object.getOwnPropertyDescriptor(e,a))})),p};var a=Object.getPrototypeOf||function(e){return e.__proto__}},77:(e,a,p)=>{var t,d,i=p(7147),r=p(2161),n=p(8520),o=p(6458),s=p(3837);function l(e,a){Object.defineProperty(e,t,{get:function(){return a}})}"function"==typeof Symbol&&"function"==typeof Symbol.for?(t=Symbol.for("graceful-fs.queue"),d=Symbol.for("graceful-fs.previous")):(t="___graceful-fs.queue",d="___graceful-fs.previous");var m,u=function(){};if(s.debuglog?u=s.debuglog("gfs4"):/\bgfs4\b/i.test(process.env.NODE_DEBUG||"")&&(u=function(){var e=s.format.apply(s,arguments);e="GFS4: "+e.split(/\n/).join("\nGFS4: "),console.error(e)}),!i[t]){var c=global[t]||[];l(i,c),i.close=function(e){function a(a,p){return e.call(i,a,(function(e){e||v(),"function"==typeof p&&p.apply(this,arguments)}))}return Object.defineProperty(a,d,{value:e}),a}(i.close),i.closeSync=function(e){function a(a){e.apply(i,arguments),v()}return Object.defineProperty(a,d,{value:e}),a}(i.closeSync),/\bgfs4\b/i.test(process.env.NODE_DEBUG||"")&&process.on("exit",(function(){u(i[t]),p(9491).equal(i[t].length,0)}))}function h(e){r(e),e.gracefulify=h,e.createReadStream=function(a,p){return new e.ReadStream(a,p)},e.createWriteStream=function(a,p){return new e.WriteStream(a,p)};var a=e.readFile;e.readFile=function(e,p,t){return"function"==typeof p&&(t=p,p=null),function e(p,t,d,i){return a(p,t,(function(a){!a||"EMFILE"!==a.code&&"ENFILE"!==a.code?"function"==typeof d&&d.apply(this,arguments):f([e,[p,t,d],a,i||Date.now(),Date.now()])}))}(e,p,t)};var p=e.writeFile;e.writeFile=function(e,a,t,d){return"function"==typeof t&&(d=t,t=null),function e(a,t,d,i,r){return p(a,t,d,(function(p){!p||"EMFILE"!==p.code&&"ENFILE"!==p.code?"function"==typeof i&&i.apply(this,arguments):f([e,[a,t,d,i],p,r||Date.now(),Date.now()])}))}(e,a,t,d)};var t=e.appendFile;t&&(e.appendFile=function(e,a,p,d){return"function"==typeof p&&(d=p,p=null),function e(a,p,d,i,r){return t(a,p,d,(function(t){!t||"EMFILE"!==t.code&&"ENFILE"!==t.code?"function"==typeof i&&i.apply(this,arguments):f([e,[a,p,d,i],t,r||Date.now(),Date.now()])}))}(e,a,p,d)});var d=e.copyFile;d&&(e.copyFile=function(e,a,p,t){return"function"==typeof p&&(t=p,p=0),function e(a,p,t,i,r){return d(a,p,t,(function(d){!d||"EMFILE"!==d.code&&"ENFILE"!==d.code?"function"==typeof i&&i.apply(this,arguments):f([e,[a,p,t,i],d,r||Date.now(),Date.now()])}))}(e,a,p,t)});var i=e.readdir;e.readdir=function(e,a,p){"function"==typeof a&&(p=a,a=null);var t=o.test(process.version)?function(e,a,p,t){return i(e,d(e,a,p,t))}:function(e,a,p,t){return i(e,a,d(e,a,p,t))};return t(e,a,p);function d(e,a,p,d){return function(i,r){!i||"EMFILE"!==i.code&&"ENFILE"!==i.code?(r&&r.sort&&r.sort(),"function"==typeof p&&p.call(this,i,r)):f([t,[e,a,p],i,d||Date.now(),Date.now()])}}};var o=/^v[0-5]\./;if("v0.8"===process.version.substr(0,4)){var s=n(e);v=s.ReadStream,w=s.WriteStream}var l=e.ReadStream;l&&(v.prototype=Object.create(l.prototype),v.prototype.open=function(){var e=this;y(e.path,e.flags,e.mode,(function(a,p){a?(e.autoClose&&e.destroy(),e.emit("error",a)):(e.fd=p,e.emit("open",p),e.read())}))});var m=e.WriteStream;m&&(w.prototype=Object.create(m.prototype),w.prototype.open=function(){var e=this;y(e.path,e.flags,e.mode,(function(a,p){a?(e.destroy(),e.emit("error",a)):(e.fd=p,e.emit("open",p))}))}),Object.defineProperty(e,"ReadStream",{get:function(){return v},set:function(e){v=e},enumerable:!0,configurable:!0}),Object.defineProperty(e,"WriteStream",{get:function(){return w},set:function(e){w=e},enumerable:!0,configurable:!0});var u=v;Object.defineProperty(e,"FileReadStream",{get:function(){return u},set:function(e){u=e},enumerable:!0,configurable:!0});var c=w;function v(e,a){return this instanceof v?(l.apply(this,arguments),this):v.apply(Object.create(v.prototype),arguments)}function w(e,a){return this instanceof w?(m.apply(this,arguments),this):w.apply(Object.create(w.prototype),arguments)}Object.defineProperty(e,"FileWriteStream",{get:function(){return c},set:function(e){c=e},enumerable:!0,configurable:!0});var g=e.open;function y(e,a,p,t){return"function"==typeof p&&(t=p,p=null),function e(a,p,t,d,i){return g(a,p,t,(function(r,n){!r||"EMFILE"!==r.code&&"ENFILE"!==r.code?"function"==typeof d&&d.apply(this,arguments):f([e,[a,p,t,d],r,i||Date.now(),Date.now()])}))}(e,a,p,t)}return e.open=y,e}function f(e){u("ENQUEUE",e[0].name,e[1]),i[t].push(e),w()}function v(){for(var e=Date.now(),a=0;a<i[t].length;++a)i[t][a].length>2&&(i[t][a][3]=e,i[t][a][4]=e);w()}function w(){if(clearTimeout(m),m=void 0,0!==i[t].length){var e=i[t].shift(),a=e[0],p=e[1],d=e[2],r=e[3],n=e[4];if(void 0===r)u("RETRY",a.name,p),a.apply(null,p);else if(Date.now()-r>=6e4){u("TIMEOUT",a.name,p);var o=p.pop();"function"==typeof o&&o.call(null,d)}else{var s=Date.now()-n,l=Math.max(n-r,1);s>=Math.min(1.2*l,100)?(u("RETRY",a.name,p),a.apply(null,p.concat([r]))):i[t].push(e)}void 0===m&&(m=setTimeout(w,0))}}global[t]||l(global,i[t]),e.exports=h(o(i)),process.env.TEST_GRACEFUL_FS_GLOBAL_PATCH&&!i.__patched&&(e.exports=h(i),i.__patched=!0)},8520:(e,a,p)=>{var t=p(2781).Stream;e.exports=function(e){return{ReadStream:function a(p,d){if(!(this instanceof a))return new a(p,d);t.call(this);var i=this;this.path=p,this.fd=null,this.readable=!0,this.paused=!1,this.flags="r",this.mode=438,this.bufferSize=65536,d=d||{};for(var r=Object.keys(d),n=0,o=r.length;n<o;n++){var s=r[n];this[s]=d[s]}if(this.encoding&&this.setEncoding(this.encoding),void 0!==this.start){if("number"!=typeof this.start)throw TypeError("start must be a Number");if(void 0===this.end)this.end=1/0;else if("number"!=typeof this.end)throw TypeError("end must be a Number");if(this.start>this.end)throw new Error("start must be <= end");this.pos=this.start}null===this.fd?e.open(this.path,this.flags,this.mode,(function(e,a){if(e)return i.emit("error",e),void(i.readable=!1);i.fd=a,i.emit("open",a),i._read()})):process.nextTick((function(){i._read()}))},WriteStream:function a(p,d){if(!(this instanceof a))return new a(p,d);t.call(this),this.path=p,this.fd=null,this.writable=!0,this.flags="w",this.encoding="binary",this.mode=438,this.bytesWritten=0,d=d||{};for(var i=Object.keys(d),r=0,n=i.length;r<n;r++){var o=i[r];this[o]=d[o]}if(void 0!==this.start){if("number"!=typeof this.start)throw TypeError("start must be a Number");if(this.start<0)throw new Error("start must be >= zero");this.pos=this.start}this.busy=!1,this._queue=[],null===this.fd&&(this._open=e.open,this._queue.push([this._open,this.path,this.flags,this.mode,void 0]),this.flush())}}}},2161:(e,a,p)=>{var t=p(2057),d=process.cwd,i=null,r=process.env.GRACEFUL_FS_PLATFORM||process.platform;process.cwd=function(){return i||(i=d.call(process)),i};try{process.cwd()}catch(e){}if("function"==typeof process.chdir){var n=process.chdir;process.chdir=function(e){i=null,n.call(process,e)},Object.setPrototypeOf&&Object.setPrototypeOf(process.chdir,n)}e.exports=function(e){function a(a){return a?function(p,t,d){return a.call(e,p,t,(function(e){s(e)&&(e=null),d&&d.apply(this,arguments)}))}:a}function p(a){return a?function(p,t){try{return a.call(e,p,t)}catch(e){if(!s(e))throw e}}:a}function d(a){return a?function(p,t,d,i){return a.call(e,p,t,d,(function(e){s(e)&&(e=null),i&&i.apply(this,arguments)}))}:a}function i(a){return a?function(p,t,d){try{return a.call(e,p,t,d)}catch(e){if(!s(e))throw e}}:a}function n(a){return a?function(p,t,d){function i(e,a){a&&(a.uid<0&&(a.uid+=4294967296),a.gid<0&&(a.gid+=4294967296)),d&&d.apply(this,arguments)}return"function"==typeof t&&(d=t,t=null),t?a.call(e,p,t,i):a.call(e,p,i)}:a}function o(a){return a?function(p,t){var d=t?a.call(e,p,t):a.call(e,p);return d&&(d.uid<0&&(d.uid+=4294967296),d.gid<0&&(d.gid+=4294967296)),d}:a}function s(e){return!e||"ENOSYS"===e.code||!(process.getuid&&0===process.getuid()||"EINVAL"!==e.code&&"EPERM"!==e.code)}var l;t.hasOwnProperty("O_SYMLINK")&&process.version.match(/^v0\.6\.[0-2]|^v0\.5\./)&&function(e){e.lchmod=function(a,p,d){e.open(a,t.O_WRONLY|t.O_SYMLINK,p,(function(a,t){a?d&&d(a):e.fchmod(t,p,(function(a){e.close(t,(function(e){d&&d(a||e)}))}))}))},e.lchmodSync=function(a,p){var d,i=e.openSync(a,t.O_WRONLY|t.O_SYMLINK,p),r=!0;try{d=e.fchmodSync(i,p),r=!1}finally{if(r)try{e.closeSync(i)}catch(e){}else e.closeSync(i)}return d}}(e),e.lutimes||function(e){t.hasOwnProperty("O_SYMLINK")&&e.futimes?(e.lutimes=function(a,p,d,i){e.open(a,t.O_SYMLINK,(function(a,t){a?i&&i(a):e.futimes(t,p,d,(function(a){e.close(t,(function(e){i&&i(a||e)}))}))}))},e.lutimesSync=function(a,p,d){var i,r=e.openSync(a,t.O_SYMLINK),n=!0;try{i=e.futimesSync(r,p,d),n=!1}finally{if(n)try{e.closeSync(r)}catch(e){}else e.closeSync(r)}return i}):e.futimes&&(e.lutimes=function(e,a,p,t){t&&process.nextTick(t)},e.lutimesSync=function(){})}(e),e.chown=d(e.chown),e.fchown=d(e.fchown),e.lchown=d(e.lchown),e.chmod=a(e.chmod),e.fchmod=a(e.fchmod),e.lchmod=a(e.lchmod),e.chownSync=i(e.chownSync),e.fchownSync=i(e.fchownSync),e.lchownSync=i(e.lchownSync),e.chmodSync=p(e.chmodSync),e.fchmodSync=p(e.fchmodSync),e.lchmodSync=p(e.lchmodSync),e.stat=n(e.stat),e.fstat=n(e.fstat),e.lstat=n(e.lstat),e.statSync=o(e.statSync),e.fstatSync=o(e.fstatSync),e.lstatSync=o(e.lstatSync),e.chmod&&!e.lchmod&&(e.lchmod=function(e,a,p){p&&process.nextTick(p)},e.lchmodSync=function(){}),e.chown&&!e.lchown&&(e.lchown=function(e,a,p,t){t&&process.nextTick(t)},e.lchownSync=function(){}),"win32"===r&&(e.rename="function"!=typeof e.rename?e.rename:function(a){function p(p,t,d){var i=Date.now(),r=0;a(p,t,(function n(o){if(o&&("EACCES"===o.code||"EPERM"===o.code)&&Date.now()-i<6e4)return setTimeout((function(){e.stat(t,(function(e,i){e&&"ENOENT"===e.code?a(p,t,n):d(o)}))}),r),void(r<100&&(r+=10));d&&d(o)}))}return Object.setPrototypeOf&&Object.setPrototypeOf(p,a),p}(e.rename)),e.read="function"!=typeof e.read?e.read:function(a){function p(p,t,d,i,r,n){var o;if(n&&"function"==typeof n){var s=0;o=function(l,m,u){if(l&&"EAGAIN"===l.code&&s<10)return s++,a.call(e,p,t,d,i,r,o);n.apply(this,arguments)}}return a.call(e,p,t,d,i,r,o)}return Object.setPrototypeOf&&Object.setPrototypeOf(p,a),p}(e.read),e.readSync="function"!=typeof e.readSync?e.readSync:(l=e.readSync,function(a,p,t,d,i){for(var r=0;;)try{return l.call(e,a,p,t,d,i)}catch(e){if("EAGAIN"===e.code&&r<10){r++;continue}throw e}})}},6560:e=>{"use strict";e.exports=(e,a=process.argv)=>{const p=e.startsWith("-")?"":1===e.length?"-":"--",t=a.indexOf(p+e),d=a.indexOf("--");return-1!==t&&(-1===d||t<d)}},3320:(e,a,p)=>{"use strict";var t=p(7990),d=p(3150);function i(e,a){return function(){throw new Error("Function yaml."+e+" is removed in js-yaml 4. Use yaml."+a+" instead, which is now safe by default.")}}e.exports.Type=p(1364),e.exports.Schema=p(7657),e.exports.FAILSAFE_SCHEMA=p(4795),e.exports.JSON_SCHEMA=p(5966),e.exports.CORE_SCHEMA=p(9471),e.exports.DEFAULT_SCHEMA=p(6601),e.exports.load=t.load,e.exports.loadAll=t.loadAll,e.exports.dump=d.dump,e.exports.YAMLException=p(8425),e.exports.types={binary:p(3531),float:p(5215),map:p(945),null:p(151),pairs:p(6879),set:p(4982),timestamp:p(2156),bool:p(8771),int:p(1518),merge:p(7452),omap:p(1605),seq:p(6451),str:p(48)},e.exports.safeLoad=i("safeLoad","load"),e.exports.safeLoadAll=i("safeLoadAll","loadAll"),e.exports.safeDump=i("safeDump","dump")},8347:e=>{"use strict";function a(e){return null==e}e.exports.isNothing=a,e.exports.isObject=function(e){return"object"==typeof e&&null!==e},e.exports.toArray=function(e){return Array.isArray(e)?e:a(e)?[]:[e]},e.exports.repeat=function(e,a){var p,t="";for(p=0;p<a;p+=1)t+=e;return t},e.exports.isNegativeZero=function(e){return 0===e&&Number.NEGATIVE_INFINITY===1/e},e.exports.extend=function(e,a){var p,t,d,i;if(a)for(p=0,t=(i=Object.keys(a)).length;p<t;p+=1)e[d=i[p]]=a[d];return e}},3150:(e,a,p)=>{"use strict";var t=p(8347),d=p(8425),i=p(6601),r=Object.prototype.toString,n=Object.prototype.hasOwnProperty,o=65279,s={0:"\\0",7:"\\a",8:"\\b",9:"\\t",10:"\\n",11:"\\v",12:"\\f",13:"\\r",27:"\\e",34:'\\"',92:"\\\\",133:"\\N",160:"\\_",8232:"\\L",8233:"\\P"},l=["y","Y","yes","Yes","YES","on","On","ON","n","N","no","No","NO","off","Off","OFF"],m=/^[-+]?[0-9_]+(?::[0-9_]+)+(?:\.[0-9_]*)?$/;function u(e){var a,p,i;if(a=e.toString(16).toUpperCase(),e<=255)p="x",i=2;else if(e<=65535)p="u",i=4;else{if(!(e<=4294967295))throw new d("code point within a string may not be greater than 0xFFFFFFFF");p="U",i=8}return"\\"+p+t.repeat("0",i-a.length)+a}function c(e){this.schema=e.schema||i,this.indent=Math.max(1,e.indent||2),this.noArrayIndent=e.noArrayIndent||!1,this.skipInvalid=e.skipInvalid||!1,this.flowLevel=t.isNothing(e.flowLevel)?-1:e.flowLevel,this.styleMap=function(e,a){var p,t,d,i,r,o,s;if(null===a)return{};for(p={},d=0,i=(t=Object.keys(a)).length;d<i;d+=1)r=t[d],o=String(a[r]),"!!"===r.slice(0,2)&&(r="tag:yaml.org,2002:"+r.slice(2)),(s=e.compiledTypeMap.fallback[r])&&n.call(s.styleAliases,o)&&(o=s.styleAliases[o]),p[r]=o;return p}(this.schema,e.styles||null),this.sortKeys=e.sortKeys||!1,this.lineWidth=e.lineWidth||80,this.noRefs=e.noRefs||!1,this.noCompatMode=e.noCompatMode||!1,this.condenseFlow=e.condenseFlow||!1,this.quotingType='"'===e.quotingType?2:1,this.forceQuotes=e.forceQuotes||!1,this.replacer="function"==typeof e.replacer?e.replacer:null,this.implicitTypes=this.schema.compiledImplicit,this.explicitTypes=this.schema.compiledExplicit,this.tag=null,this.result="",this.duplicates=[],this.usedDuplicates=null}function h(e,a){for(var p,d=t.repeat(" ",a),i=0,r=-1,n="",o=e.length;i<o;)-1===(r=e.indexOf("\n",i))?(p=e.slice(i),i=o):(p=e.slice(i,r+1),i=r+1),p.length&&"\n"!==p&&(n+=d),n+=p;return n}function f(e,a){return"\n"+t.repeat(" ",e.indent*a)}function v(e){return 32===e||9===e}function w(e){return 32<=e&&e<=126||161<=e&&e<=55295&&8232!==e&&8233!==e||57344<=e&&e<=65533&&e!==o||65536<=e&&e<=1114111}function g(e){return w(e)&&e!==o&&13!==e&&10!==e}function y(e,a,p){var t=g(e),d=t&&!v(e);return(p?t:t&&44!==e&&91!==e&&93!==e&&123!==e&&125!==e)&&35!==e&&!(58===a&&!d)||g(a)&&!v(a)&&35===e||58===a&&d}function b(e,a){var p,t=e.charCodeAt(a);return t>=55296&&t<=56319&&a+1<e.length&&(p=e.charCodeAt(a+1))>=56320&&p<=57343?1024*(t-55296)+p-56320+65536:t}function _(e){return/^\n* /.test(e)}function E(e,a,p,t,i){e.dump=function(){if(0===a.length)return 2===e.quotingType?'""':"''";if(!e.noCompatMode&&(-1!==l.indexOf(a)||m.test(a)))return 2===e.quotingType?'"'+a+'"':"'"+a+"'";var r=e.indent*Math.max(1,p),n=-1===e.lineWidth?-1:Math.max(Math.min(e.lineWidth,40),e.lineWidth-r),c=t||e.flowLevel>-1&&p>=e.flowLevel;switch(function(e,a,p,t,d,i,r,n){var s,l,m=0,u=null,c=!1,h=!1,f=-1!==t,g=-1,E=w(l=b(e,0))&&l!==o&&!v(l)&&45!==l&&63!==l&&58!==l&&44!==l&&91!==l&&93!==l&&123!==l&&125!==l&&35!==l&&38!==l&&42!==l&&33!==l&&124!==l&&61!==l&&62!==l&&39!==l&&34!==l&&37!==l&&64!==l&&96!==l&&function(e){return!v(e)&&58!==e}(b(e,e.length-1));if(a||r)for(s=0;s<e.length;m>=65536?s+=2:s++){if(!w(m=b(e,s)))return 5;E=E&&y(m,u,n),u=m}else{for(s=0;s<e.length;m>=65536?s+=2:s++){if(10===(m=b(e,s)))c=!0,f&&(h=h||s-g-1>t&&" "!==e[g+1],g=s);else if(!w(m))return 5;E=E&&y(m,u,n),u=m}h=h||f&&s-g-1>t&&" "!==e[g+1]}return c||h?p>9&&_(e)?5:r?2===i?5:2:h?4:3:!E||r||d(e)?2===i?5:2:1}(a,c,e.indent,n,(function(a){return function(e,a){var p,t;for(p=0,t=e.implicitTypes.length;p<t;p+=1)if(e.implicitTypes[p].resolve(a))return!0;return!1}(e,a)}),e.quotingType,e.forceQuotes&&!t,i)){case 1:return a;case 2:return"'"+a.replace(/'/g,"''")+"'";case 3:return"|"+N(a,e.indent)+S(h(a,r));case 4:return">"+N(a,e.indent)+S(h(function(e,a){for(var p,t,d,i=/(\n+)([^\n]*)/g,r=(d=-1!==(d=e.indexOf("\n"))?d:e.length,i.lastIndex=d,T(e.slice(0,d),a)),n="\n"===e[0]||" "===e[0];t=i.exec(e);){var o=t[1],s=t[2];p=" "===s[0],r+=o+(n||p||""===s?"":"\n")+T(s,a),n=p}return r}(a,n),r));case 5:return'"'+function(e){for(var a,p="",t=0,d=0;d<e.length;t>=65536?d+=2:d++)t=b(e,d),!(a=s[t])&&w(t)?(p+=e[d],t>=65536&&(p+=e[d+1])):p+=a||u(t);return p}(a)+'"';default:throw new d("impossible error: invalid scalar style")}}()}function N(e,a){var p=_(e)?String(a):"",t="\n"===e[e.length-1];return p+(!t||"\n"!==e[e.length-2]&&"\n"!==e?t?"":"-":"+")+"\n"}function S(e){return"\n"===e[e.length-1]?e.slice(0,-1):e}function T(e,a){if(""===e||" "===e[0])return e;for(var p,t,d=/ [^ ]/g,i=0,r=0,n=0,o="";p=d.exec(e);)(n=p.index)-i>a&&(t=r>i?r:n,o+="\n"+e.slice(i,t),i=t+1),r=n;return o+="\n",e.length-i>a&&r>i?o+=e.slice(i,r)+"\n"+e.slice(r+1):o+=e.slice(i),o.slice(1)}function D(e,a,p,t){var d,i,r,n="",o=e.tag;for(d=0,i=p.length;d<i;d+=1)r=p[d],e.replacer&&(r=e.replacer.call(p,String(d),r)),(C(e,a+1,r,!0,!0,!1,!0)||void 0===r&&C(e,a+1,null,!0,!0,!1,!0))&&(t&&""===n||(n+=f(e,a)),e.dump&&10===e.dump.charCodeAt(0)?n+="-":n+="- ",n+=e.dump);e.tag=o,e.dump=n||"[]"}function A(e,a,p){var t,i,o,s,l,m;for(o=0,s=(i=p?e.explicitTypes:e.implicitTypes).length;o<s;o+=1)if(((l=i[o]).instanceOf||l.predicate)&&(!l.instanceOf||"object"==typeof a&&a instanceof l.instanceOf)&&(!l.predicate||l.predicate(a))){if(p?l.multi&&l.representName?e.tag=l.representName(a):e.tag=l.tag:e.tag="?",l.represent){if(m=e.styleMap[l.tag]||l.defaultStyle,"[object Function]"===r.call(l.represent))t=l.represent(a,m);else{if(!n.call(l.represent,m))throw new d("!<"+l.tag+'> tag resolver accepts not "'+m+'" style');t=l.represent[m](a,m)}e.dump=t}return!0}return!1}function C(e,a,p,t,i,n,o){e.tag=null,e.dump=p,A(e,p,!1)||A(e,p,!0);var s,l=r.call(e.dump),m=t;t&&(t=e.flowLevel<0||e.flowLevel>a);var u,c,h="[object Object]"===l||"[object Array]"===l;if(h&&(c=-1!==(u=e.duplicates.indexOf(p))),(null!==e.tag&&"?"!==e.tag||c||2!==e.indent&&a>0)&&(i=!1),c&&e.usedDuplicates[u])e.dump="*ref_"+u;else{if(h&&c&&!e.usedDuplicates[u]&&(e.usedDuplicates[u]=!0),"[object Object]"===l)t&&0!==Object.keys(e.dump).length?(function(e,a,p,t){var i,r,n,o,s,l,m="",u=e.tag,c=Object.keys(p);if(!0===e.sortKeys)c.sort();else if("function"==typeof e.sortKeys)c.sort(e.sortKeys);else if(e.sortKeys)throw new d("sortKeys must be a boolean or a function");for(i=0,r=c.length;i<r;i+=1)l="",t&&""===m||(l+=f(e,a)),o=p[n=c[i]],e.replacer&&(o=e.replacer.call(p,n,o)),C(e,a+1,n,!0,!0,!0)&&((s=null!==e.tag&&"?"!==e.tag||e.dump&&e.dump.length>1024)&&(e.dump&&10===e.dump.charCodeAt(0)?l+="?":l+="? "),l+=e.dump,s&&(l+=f(e,a)),C(e,a+1,o,!0,s)&&(e.dump&&10===e.dump.charCodeAt(0)?l+=":":l+=": ",m+=l+=e.dump));e.tag=u,e.dump=m||"{}"}(e,a,e.dump,i),c&&(e.dump="&ref_"+u+e.dump)):(function(e,a,p){var t,d,i,r,n,o="",s=e.tag,l=Object.keys(p);for(t=0,d=l.length;t<d;t+=1)n="",""!==o&&(n+=", "),e.condenseFlow&&(n+='"'),r=p[i=l[t]],e.replacer&&(r=e.replacer.call(p,i,r)),C(e,a,i,!1,!1)&&(e.dump.length>1024&&(n+="? "),n+=e.dump+(e.condenseFlow?'"':"")+":"+(e.condenseFlow?"":" "),C(e,a,r,!1,!1)&&(o+=n+=e.dump));e.tag=s,e.dump="{"+o+"}"}(e,a,e.dump),c&&(e.dump="&ref_"+u+" "+e.dump));else if("[object Array]"===l)t&&0!==e.dump.length?(e.noArrayIndent&&!o&&a>0?D(e,a-1,e.dump,i):D(e,a,e.dump,i),c&&(e.dump="&ref_"+u+e.dump)):(function(e,a,p){var t,d,i,r="",n=e.tag;for(t=0,d=p.length;t<d;t+=1)i=p[t],e.replacer&&(i=e.replacer.call(p,String(t),i)),(C(e,a,i,!1,!1)||void 0===i&&C(e,a,null,!1,!1))&&(""!==r&&(r+=","+(e.condenseFlow?"":" ")),r+=e.dump);e.tag=n,e.dump="["+r+"]"}(e,a,e.dump),c&&(e.dump="&ref_"+u+" "+e.dump));else{if("[object String]"!==l){if("[object Undefined]"===l)return!1;if(e.skipInvalid)return!1;throw new d("unacceptable kind of an object to dump "+l)}"?"!==e.tag&&E(e,e.dump,a,n,m)}null!==e.tag&&"?"!==e.tag&&(s=encodeURI("!"===e.tag[0]?e.tag.slice(1):e.tag).replace(/!/g,"%21"),s="!"===e.tag[0]?"!"+s:"tag:yaml.org,2002:"===s.slice(0,18)?"!!"+s.slice(18):"!<"+s+">",e.dump=s+" "+e.dump)}return!0}function O(e,a){var p,t,d=[],i=[];for(I(e,d,i),p=0,t=i.length;p<t;p+=1)a.duplicates.push(d[i[p]]);a.usedDuplicates=new Array(t)}function I(e,a,p){var t,d,i;if(null!==e&&"object"==typeof e)if(-1!==(d=a.indexOf(e)))-1===p.indexOf(d)&&p.push(d);else if(a.push(e),Array.isArray(e))for(d=0,i=e.length;d<i;d+=1)I(e[d],a,p);else for(d=0,i=(t=Object.keys(e)).length;d<i;d+=1)I(e[t[d]],a,p)}e.exports.dump=function(e,a){var p=new c(a=a||{});p.noRefs||O(e,p);var t=e;return p.replacer&&(t=p.replacer.call({"":t},"",t)),C(p,0,t,!0,!0)?p.dump+"\n":""}},8425:e=>{"use strict";function a(e,a){var p="",t=e.reason||"(unknown reason)";return e.mark?(e.mark.name&&(p+='in "'+e.mark.name+'" '),p+="("+(e.mark.line+1)+":"+(e.mark.column+1)+")",!a&&e.mark.snippet&&(p+="\n\n"+e.mark.snippet),t+" "+p):t}function p(e,p){Error.call(this),this.name="YAMLException",this.reason=e,this.mark=p,this.message=a(this,!1),Error.captureStackTrace?Error.captureStackTrace(this,this.constructor):this.stack=(new Error).stack||""}p.prototype=Object.create(Error.prototype),p.prototype.constructor=p,p.prototype.toString=function(e){return this.name+": "+a(this,e)},e.exports=p},7990:(e,a,p)=>{"use strict";var t=p(8347),d=p(8425),i=p(192),r=p(6601),n=Object.prototype.hasOwnProperty,o=/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F-\x84\x86-\x9F\uFFFE\uFFFF]|[\uD800-\uDBFF](?![\uDC00-\uDFFF])|(?:[^\uD800-\uDBFF]|^)[\uDC00-\uDFFF]/,s=/[\x85\u2028\u2029]/,l=/[,\[\]\{\}]/,m=/^(?:!|!!|![a-z\-]+!)$/i,u=/^(?:!|[^,\[\]\{\}])(?:%[0-9a-f]{2}|[0-9a-z\-#;\/\?:@&=\+\$,_\.!~\*'\(\)\[\]])*$/i;function c(e){return Object.prototype.toString.call(e)}function h(e){return 10===e||13===e}function f(e){return 9===e||32===e}function v(e){return 9===e||32===e||10===e||13===e}function w(e){return 44===e||91===e||93===e||123===e||125===e}function g(e){var a;return 48<=e&&e<=57?e-48:97<=(a=32|e)&&a<=102?a-97+10:-1}function y(e){return 48===e?"\0":97===e?"":98===e?"\b":116===e||9===e?"\t":110===e?"\n":118===e?"\v":102===e?"\f":114===e?"\r":101===e?"":32===e?" ":34===e?'"':47===e?"/":92===e?"\\":78===e?"":95===e?" ":76===e?"\u2028":80===e?"\u2029":""}function b(e){return e<=65535?String.fromCharCode(e):String.fromCharCode(55296+(e-65536>>10),56320+(e-65536&1023))}for(var _=new Array(256),E=new Array(256),N=0;N<256;N++)_[N]=y(N)?1:0,E[N]=y(N);function S(e,a){this.input=e,this.filename=a.filename||null,this.schema=a.schema||r,this.onWarning=a.onWarning||null,this.legacy=a.legacy||!1,this.json=a.json||!1,this.listener=a.listener||null,this.implicitTypes=this.schema.compiledImplicit,this.typeMap=this.schema.compiledTypeMap,this.length=e.length,this.position=0,this.line=0,this.lineStart=0,this.lineIndent=0,this.firstTabInLine=-1,this.documents=[]}function T(e,a){var p={name:e.filename,buffer:e.input.slice(0,-1),position:e.position,line:e.line,column:e.position-e.lineStart};return p.snippet=i(p),new d(a,p)}function D(e,a){throw T(e,a)}function A(e,a){e.onWarning&&e.onWarning.call(null,T(e,a))}var C={YAML:function(e,a,p){var t,d,i;null!==e.version&&D(e,"duplication of %YAML directive"),1!==p.length&&D(e,"YAML directive accepts exactly one argument"),null===(t=/^([0-9]+)\.([0-9]+)$/.exec(p[0]))&&D(e,"ill-formed argument of the YAML directive"),d=parseInt(t[1],10),i=parseInt(t[2],10),1!==d&&D(e,"unacceptable YAML version of the document"),e.version=p[0],e.checkLineBreaks=i<2,1!==i&&2!==i&&A(e,"unsupported YAML version of the document")},TAG:function(e,a,p){var t,d;2!==p.length&&D(e,"TAG directive accepts exactly two arguments"),t=p[0],d=p[1],m.test(t)||D(e,"ill-formed tag handle (first argument) of the TAG directive"),n.call(e.tagMap,t)&&D(e,'there is a previously declared suffix for "'+t+'" tag handle'),u.test(d)||D(e,"ill-formed tag prefix (second argument) of the TAG directive");try{d=decodeURIComponent(d)}catch(a){D(e,"tag prefix is malformed: "+d)}e.tagMap[t]=d}};function O(e,a,p,t){var d,i,r,n;if(a<p){if(n=e.input.slice(a,p),t)for(d=0,i=n.length;d<i;d+=1)9===(r=n.charCodeAt(d))||32<=r&&r<=1114111||D(e,"expected valid JSON character");else o.test(n)&&D(e,"the stream contains non-printable characters");e.result+=n}}function I(e,a,p,d){var i,r,o,s;for(t.isObject(p)||D(e,"cannot merge mappings; the provided source object is unacceptable"),o=0,s=(i=Object.keys(p)).length;o<s;o+=1)r=i[o],n.call(a,r)||(a[r]=p[r],d[r]=!0)}function R(e,a,p,t,d,i,r,o,s){var l,m;if(Array.isArray(d))for(l=0,m=(d=Array.prototype.slice.call(d)).length;l<m;l+=1)Array.isArray(d[l])&&D(e,"nested arrays are not supported inside keys"),"object"==typeof d&&"[object Object]"===c(d[l])&&(d[l]="[object Object]");if("object"==typeof d&&"[object Object]"===c(d)&&(d="[object Object]"),d=String(d),null===a&&(a={}),"tag:yaml.org,2002:merge"===t)if(Array.isArray(i))for(l=0,m=i.length;l<m;l+=1)I(e,a,i[l],p);else I(e,a,i,p);else e.json||n.call(p,d)||!n.call(a,d)||(e.line=r||e.line,e.lineStart=o||e.lineStart,e.position=s||e.position,D(e,"duplicated mapping key")),"__proto__"===d?Object.defineProperty(a,d,{configurable:!0,enumerable:!0,writable:!0,value:i}):a[d]=i,delete p[d];return a}function P(e){var a;10===(a=e.input.charCodeAt(e.position))?e.position++:13===a?(e.position++,10===e.input.charCodeAt(e.position)&&e.position++):D(e,"a line break is expected"),e.line+=1,e.lineStart=e.position,e.firstTabInLine=-1}function x(e,a,p){for(var t=0,d=e.input.charCodeAt(e.position);0!==d;){for(;f(d);)9===d&&-1===e.firstTabInLine&&(e.firstTabInLine=e.position),d=e.input.charCodeAt(++e.position);if(a&&35===d)do{d=e.input.charCodeAt(++e.position)}while(10!==d&&13!==d&&0!==d);if(!h(d))break;for(P(e),d=e.input.charCodeAt(e.position),t++,e.lineIndent=0;32===d;)e.lineIndent++,d=e.input.charCodeAt(++e.position)}return-1!==p&&0!==t&&e.lineIndent<p&&A(e,"deficient indentation"),t}function F(e){var a,p=e.position;return!(45!==(a=e.input.charCodeAt(p))&&46!==a||a!==e.input.charCodeAt(p+1)||a!==e.input.charCodeAt(p+2)||(p+=3,0!==(a=e.input.charCodeAt(p))&&!v(a)))}function V(e,a){1===a?e.result+=" ":a>1&&(e.result+=t.repeat("\n",a-1))}function k(e,a){var p,t,d=e.tag,i=e.anchor,r=[],n=!1;if(-1!==e.firstTabInLine)return!1;for(null!==e.anchor&&(e.anchorMap[e.anchor]=r),t=e.input.charCodeAt(e.position);0!==t&&(-1!==e.firstTabInLine&&(e.position=e.firstTabInLine,D(e,"tab characters must not be used in indentation")),45===t)&&v(e.input.charCodeAt(e.position+1));)if(n=!0,e.position++,x(e,!0,-1)&&e.lineIndent<=a)r.push(null),t=e.input.charCodeAt(e.position);else if(p=e.line,$(e,a,3,!1,!0),r.push(e.result),x(e,!0,-1),t=e.input.charCodeAt(e.position),(e.line===p||e.lineIndent>a)&&0!==t)D(e,"bad indentation of a sequence entry");else if(e.lineIndent<a)break;return!!n&&(e.tag=d,e.anchor=i,e.kind="sequence",e.result=r,!0)}function U(e){var a,p,t,d,i=!1,r=!1;if(33!==(d=e.input.charCodeAt(e.position)))return!1;if(null!==e.tag&&D(e,"duplication of a tag property"),60===(d=e.input.charCodeAt(++e.position))?(i=!0,d=e.input.charCodeAt(++e.position)):33===d?(r=!0,p="!!",d=e.input.charCodeAt(++e.position)):p="!",a=e.position,i){do{d=e.input.charCodeAt(++e.position)}while(0!==d&&62!==d);e.position<e.length?(t=e.input.slice(a,e.position),d=e.input.charCodeAt(++e.position)):D(e,"unexpected end of the stream within a verbatim tag")}else{for(;0!==d&&!v(d);)33===d&&(r?D(e,"tag suffix cannot contain exclamation marks"):(p=e.input.slice(a-1,e.position+1),m.test(p)||D(e,"named tag handle cannot contain such characters"),r=!0,a=e.position+1)),d=e.input.charCodeAt(++e.position);t=e.input.slice(a,e.position),l.test(t)&&D(e,"tag suffix cannot contain flow indicator characters")}t&&!u.test(t)&&D(e,"tag name cannot contain such characters: "+t);try{t=decodeURIComponent(t)}catch(a){D(e,"tag name is malformed: "+t)}return i?e.tag=t:n.call(e.tagMap,p)?e.tag=e.tagMap[p]+t:"!"===p?e.tag="!"+t:"!!"===p?e.tag="tag:yaml.org,2002:"+t:D(e,'undeclared tag handle "'+p+'"'),!0}function L(e){var a,p;if(38!==(p=e.input.charCodeAt(e.position)))return!1;for(null!==e.anchor&&D(e,"duplication of an anchor property"),p=e.input.charCodeAt(++e.position),a=e.position;0!==p&&!v(p)&&!w(p);)p=e.input.charCodeAt(++e.position);return e.position===a&&D(e,"name of an anchor node must contain at least one character"),e.anchor=e.input.slice(a,e.position),!0}function $(e,a,p,d,i){var r,o,s,l,m,u,c,y,N,S=1,T=!1,A=!1;if(null!==e.listener&&e.listener("open",e),e.tag=null,e.anchor=null,e.kind=null,e.result=null,r=o=s=4===p||3===p,d&&x(e,!0,-1)&&(T=!0,e.lineIndent>a?S=1:e.lineIndent===a?S=0:e.lineIndent<a&&(S=-1)),1===S)for(;U(e)||L(e);)x(e,!0,-1)?(T=!0,s=r,e.lineIndent>a?S=1:e.lineIndent===a?S=0:e.lineIndent<a&&(S=-1)):s=!1;if(s&&(s=T||i),1!==S&&4!==p||(y=1===p||2===p?a:a+1,N=e.position-e.lineStart,1===S?s&&(k(e,N)||function(e,a,p){var t,d,i,r,n,o,s,l=e.tag,m=e.anchor,u={},c=Object.create(null),h=null,w=null,g=null,y=!1,b=!1;if(-1!==e.firstTabInLine)return!1;for(null!==e.anchor&&(e.anchorMap[e.anchor]=u),s=e.input.charCodeAt(e.position);0!==s;){if(y||-1===e.firstTabInLine||(e.position=e.firstTabInLine,D(e,"tab characters must not be used in indentation")),t=e.input.charCodeAt(e.position+1),i=e.line,63!==s&&58!==s||!v(t)){if(r=e.line,n=e.lineStart,o=e.position,!$(e,p,2,!1,!0))break;if(e.line===i){for(s=e.input.charCodeAt(e.position);f(s);)s=e.input.charCodeAt(++e.position);if(58===s)v(s=e.input.charCodeAt(++e.position))||D(e,"a whitespace character is expected after the key-value separator within a block mapping"),y&&(R(e,u,c,h,w,null,r,n,o),h=w=g=null),b=!0,y=!1,d=!1,h=e.tag,w=e.result;else{if(!b)return e.tag=l,e.anchor=m,!0;D(e,"can not read an implicit mapping pair; a colon is missed")}}else{if(!b)return e.tag=l,e.anchor=m,!0;D(e,"can not read a block mapping entry; a multiline key may not be an implicit key")}}else 63===s?(y&&(R(e,u,c,h,w,null,r,n,o),h=w=g=null),b=!0,y=!0,d=!0):y?(y=!1,d=!0):D(e,"incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line"),e.position+=1,s=t;if((e.line===i||e.lineIndent>a)&&(y&&(r=e.line,n=e.lineStart,o=e.position),$(e,a,4,!0,d)&&(y?w=e.result:g=e.result),y||(R(e,u,c,h,w,g,r,n,o),h=w=g=null),x(e,!0,-1),s=e.input.charCodeAt(e.position)),(e.line===i||e.lineIndent>a)&&0!==s)D(e,"bad indentation of a mapping entry");else if(e.lineIndent<a)break}return y&&R(e,u,c,h,w,null,r,n,o),b&&(e.tag=l,e.anchor=m,e.kind="mapping",e.result=u),b}(e,N,y))||function(e,a){var p,t,d,i,r,n,o,s,l,m,u,c,h=!0,f=e.tag,w=e.anchor,g=Object.create(null);if(91===(c=e.input.charCodeAt(e.position)))r=93,s=!1,i=[];else{if(123!==c)return!1;r=125,s=!0,i={}}for(null!==e.anchor&&(e.anchorMap[e.anchor]=i),c=e.input.charCodeAt(++e.position);0!==c;){if(x(e,!0,a),(c=e.input.charCodeAt(e.position))===r)return e.position++,e.tag=f,e.anchor=w,e.kind=s?"mapping":"sequence",e.result=i,!0;h?44===c&&D(e,"expected the node content, but found ','"):D(e,"missed comma between flow collection entries"),u=null,n=o=!1,63===c&&v(e.input.charCodeAt(e.position+1))&&(n=o=!0,e.position++,x(e,!0,a)),p=e.line,t=e.lineStart,d=e.position,$(e,a,1,!1,!0),m=e.tag,l=e.result,x(e,!0,a),c=e.input.charCodeAt(e.position),!o&&e.line!==p||58!==c||(n=!0,c=e.input.charCodeAt(++e.position),x(e,!0,a),$(e,a,1,!1,!0),u=e.result),s?R(e,i,g,m,l,u,p,t,d):n?i.push(R(e,null,g,m,l,u,p,t,d)):i.push(l),x(e,!0,a),44===(c=e.input.charCodeAt(e.position))?(h=!0,c=e.input.charCodeAt(++e.position)):h=!1}D(e,"unexpected end of the stream within a flow collection")}(e,y)?A=!0:(o&&function(e,a){var p,d,i,r,n,o=1,s=!1,l=!1,m=a,u=0,c=!1;if(124===(r=e.input.charCodeAt(e.position)))d=!1;else{if(62!==r)return!1;d=!0}for(e.kind="scalar",e.result="";0!==r;)if(43===(r=e.input.charCodeAt(++e.position))||45===r)1===o?o=43===r?3:2:D(e,"repeat of a chomping mode identifier");else{if(!((i=48<=(n=r)&&n<=57?n-48:-1)>=0))break;0===i?D(e,"bad explicit indentation width of a block scalar; it cannot be less than one"):l?D(e,"repeat of an indentation width identifier"):(m=a+i-1,l=!0)}if(f(r)){do{r=e.input.charCodeAt(++e.position)}while(f(r));if(35===r)do{r=e.input.charCodeAt(++e.position)}while(!h(r)&&0!==r)}for(;0!==r;){for(P(e),e.lineIndent=0,r=e.input.charCodeAt(e.position);(!l||e.lineIndent<m)&&32===r;)e.lineIndent++,r=e.input.charCodeAt(++e.position);if(!l&&e.lineIndent>m&&(m=e.lineIndent),h(r))u++;else{if(e.lineIndent<m){3===o?e.result+=t.repeat("\n",s?1+u:u):1===o&&s&&(e.result+="\n");break}for(d?f(r)?(c=!0,e.result+=t.repeat("\n",s?1+u:u)):c?(c=!1,e.result+=t.repeat("\n",u+1)):0===u?s&&(e.result+=" "):e.result+=t.repeat("\n",u):e.result+=t.repeat("\n",s?1+u:u),s=!0,l=!0,u=0,p=e.position;!h(r)&&0!==r;)r=e.input.charCodeAt(++e.position);O(e,p,e.position,!1)}}return!0}(e,y)||function(e,a){var p,t,d;if(39!==(p=e.input.charCodeAt(e.position)))return!1;for(e.kind="scalar",e.result="",e.position++,t=d=e.position;0!==(p=e.input.charCodeAt(e.position));)if(39===p){if(O(e,t,e.position,!0),39!==(p=e.input.charCodeAt(++e.position)))return!0;t=e.position,e.position++,d=e.position}else h(p)?(O(e,t,d,!0),V(e,x(e,!1,a)),t=d=e.position):e.position===e.lineStart&&F(e)?D(e,"unexpected end of the document within a single quoted scalar"):(e.position++,d=e.position);D(e,"unexpected end of the stream within a single quoted scalar")}(e,y)||function(e,a){var p,t,d,i,r,n,o;if(34!==(n=e.input.charCodeAt(e.position)))return!1;for(e.kind="scalar",e.result="",e.position++,p=t=e.position;0!==(n=e.input.charCodeAt(e.position));){if(34===n)return O(e,p,e.position,!0),e.position++,!0;if(92===n){if(O(e,p,e.position,!0),h(n=e.input.charCodeAt(++e.position)))x(e,!1,a);else if(n<256&&_[n])e.result+=E[n],e.position++;else if((r=120===(o=n)?2:117===o?4:85===o?8:0)>0){for(d=r,i=0;d>0;d--)(r=g(n=e.input.charCodeAt(++e.position)))>=0?i=(i<<4)+r:D(e,"expected hexadecimal character");e.result+=b(i),e.position++}else D(e,"unknown escape sequence");p=t=e.position}else h(n)?(O(e,p,t,!0),V(e,x(e,!1,a)),p=t=e.position):e.position===e.lineStart&&F(e)?D(e,"unexpected end of the document within a double quoted scalar"):(e.position++,t=e.position)}D(e,"unexpected end of the stream within a double quoted scalar")}(e,y)?A=!0:function(e){var a,p,t;if(42!==(t=e.input.charCodeAt(e.position)))return!1;for(t=e.input.charCodeAt(++e.position),a=e.position;0!==t&&!v(t)&&!w(t);)t=e.input.charCodeAt(++e.position);return e.position===a&&D(e,"name of an alias node must contain at least one character"),p=e.input.slice(a,e.position),n.call(e.anchorMap,p)||D(e,'unidentified alias "'+p+'"'),e.result=e.anchorMap[p],x(e,!0,-1),!0}(e)?(A=!0,null===e.tag&&null===e.anchor||D(e,"alias node should not have any properties")):function(e,a,p){var t,d,i,r,n,o,s,l,m=e.kind,u=e.result;if(v(l=e.input.charCodeAt(e.position))||w(l)||35===l||38===l||42===l||33===l||124===l||62===l||39===l||34===l||37===l||64===l||96===l)return!1;if((63===l||45===l)&&(v(t=e.input.charCodeAt(e.position+1))||p&&w(t)))return!1;for(e.kind="scalar",e.result="",d=i=e.position,r=!1;0!==l;){if(58===l){if(v(t=e.input.charCodeAt(e.position+1))||p&&w(t))break}else if(35===l){if(v(e.input.charCodeAt(e.position-1)))break}else{if(e.position===e.lineStart&&F(e)||p&&w(l))break;if(h(l)){if(n=e.line,o=e.lineStart,s=e.lineIndent,x(e,!1,-1),e.lineIndent>=a){r=!0,l=e.input.charCodeAt(e.position);continue}e.position=i,e.line=n,e.lineStart=o,e.lineIndent=s;break}}r&&(O(e,d,i,!1),V(e,e.line-n),d=i=e.position,r=!1),f(l)||(i=e.position+1),l=e.input.charCodeAt(++e.position)}return O(e,d,i,!1),!!e.result||(e.kind=m,e.result=u,!1)}(e,y,1===p)&&(A=!0,null===e.tag&&(e.tag="?")),null!==e.anchor&&(e.anchorMap[e.anchor]=e.result)):0===S&&(A=s&&k(e,N))),null===e.tag)null!==e.anchor&&(e.anchorMap[e.anchor]=e.result);else if("?"===e.tag){for(null!==e.result&&"scalar"!==e.kind&&D(e,'unacceptable node kind for !<?> tag; it should be "scalar", not "'+e.kind+'"'),l=0,m=e.implicitTypes.length;l<m;l+=1)if((c=e.implicitTypes[l]).resolve(e.result)){e.result=c.construct(e.result),e.tag=c.tag,null!==e.anchor&&(e.anchorMap[e.anchor]=e.result);break}}else if("!"!==e.tag){if(n.call(e.typeMap[e.kind||"fallback"],e.tag))c=e.typeMap[e.kind||"fallback"][e.tag];else for(c=null,l=0,m=(u=e.typeMap.multi[e.kind||"fallback"]).length;l<m;l+=1)if(e.tag.slice(0,u[l].tag.length)===u[l].tag){c=u[l];break}c||D(e,"unknown tag !<"+e.tag+">"),null!==e.result&&c.kind!==e.kind&&D(e,"unacceptable node kind for !<"+e.tag+'> tag; it should be "'+c.kind+'", not "'+e.kind+'"'),c.resolve(e.result,e.tag)?(e.result=c.construct(e.result,e.tag),null!==e.anchor&&(e.anchorMap[e.anchor]=e.result)):D(e,"cannot resolve a node with !<"+e.tag+"> explicit tag")}return null!==e.listener&&e.listener("close",e),null!==e.tag||null!==e.anchor||A}function j(e){var a,p,t,d,i=e.position,r=!1;for(e.version=null,e.checkLineBreaks=e.legacy,e.tagMap=Object.create(null),e.anchorMap=Object.create(null);0!==(d=e.input.charCodeAt(e.position))&&(x(e,!0,-1),d=e.input.charCodeAt(e.position),!(e.lineIndent>0||37!==d));){for(r=!0,d=e.input.charCodeAt(++e.position),a=e.position;0!==d&&!v(d);)d=e.input.charCodeAt(++e.position);for(t=[],(p=e.input.slice(a,e.position)).length<1&&D(e,"directive name must not be less than one character in length");0!==d;){for(;f(d);)d=e.input.charCodeAt(++e.position);if(35===d){do{d=e.input.charCodeAt(++e.position)}while(0!==d&&!h(d));break}if(h(d))break;for(a=e.position;0!==d&&!v(d);)d=e.input.charCodeAt(++e.position);t.push(e.input.slice(a,e.position))}0!==d&&P(e),n.call(C,p)?C[p](e,p,t):A(e,'unknown document directive "'+p+'"')}x(e,!0,-1),0===e.lineIndent&&45===e.input.charCodeAt(e.position)&&45===e.input.charCodeAt(e.position+1)&&45===e.input.charCodeAt(e.position+2)?(e.position+=3,x(e,!0,-1)):r&&D(e,"directives end mark is expected"),$(e,e.lineIndent-1,4,!1,!0),x(e,!0,-1),e.checkLineBreaks&&s.test(e.input.slice(i,e.position))&&A(e,"non-ASCII line breaks are interpreted as content"),e.documents.push(e.result),e.position===e.lineStart&&F(e)?46===e.input.charCodeAt(e.position)&&(e.position+=3,x(e,!0,-1)):e.position<e.length-1&&D(e,"end of the stream or a document separator is expected")}function B(e,a){a=a||{},0!==(e=String(e)).length&&(10!==e.charCodeAt(e.length-1)&&13!==e.charCodeAt(e.length-1)&&(e+="\n"),65279===e.charCodeAt(0)&&(e=e.slice(1)));var p=new S(e,a),t=e.indexOf("\0");for(-1!==t&&(p.position=t,D(p,"null byte is not allowed in input")),p.input+="\0";32===p.input.charCodeAt(p.position);)p.lineIndent+=1,p.position+=1;for(;p.position<p.length-1;)j(p);return p.documents}e.exports.loadAll=function(e,a,p){null!==a&&"object"==typeof a&&void 0===p&&(p=a,a=null);var t=B(e,p);if("function"!=typeof a)return t;for(var d=0,i=t.length;d<i;d+=1)a(t[d])},e.exports.load=function(e,a){var p=B(e,a);if(0!==p.length){if(1===p.length)return p[0];throw new d("expected a single document in the stream, but found more")}}},7657:(e,a,p)=>{"use strict";var t=p(8425),d=p(1364);function i(e,a){var p=[];return e[a].forEach((function(e){var a=p.length;p.forEach((function(p,t){p.tag===e.tag&&p.kind===e.kind&&p.multi===e.multi&&(a=t)})),p[a]=e})),p}function r(e){return this.extend(e)}r.prototype.extend=function(e){var a=[],p=[];if(e instanceof d)p.push(e);else if(Array.isArray(e))p=p.concat(e);else{if(!e||!Array.isArray(e.implicit)&&!Array.isArray(e.explicit))throw new t("Schema.extend argument should be a Type, [ Type ], or a schema definition ({ implicit: [...], explicit: [...] })");e.implicit&&(a=a.concat(e.implicit)),e.explicit&&(p=p.concat(e.explicit))}a.forEach((function(e){if(!(e instanceof d))throw new t("Specified list of YAML types (or a single Type object) contains a non-Type object.");if(e.loadKind&&"scalar"!==e.loadKind)throw new t("There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.");if(e.multi)throw new t("There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.")})),p.forEach((function(e){if(!(e instanceof d))throw new t("Specified list of YAML types (or a single Type object) contains a non-Type object.")}));var n=Object.create(r.prototype);return n.implicit=(this.implicit||[]).concat(a),n.explicit=(this.explicit||[]).concat(p),n.compiledImplicit=i(n,"implicit"),n.compiledExplicit=i(n,"explicit"),n.compiledTypeMap=function(){var e,a,p={scalar:{},sequence:{},mapping:{},fallback:{},multi:{scalar:[],sequence:[],mapping:[],fallback:[]}};function t(e){e.multi?(p.multi[e.kind].push(e),p.multi.fallback.push(e)):p[e.kind][e.tag]=p.fallback[e.tag]=e}for(e=0,a=arguments.length;e<a;e+=1)arguments[e].forEach(t);return p}(n.compiledImplicit,n.compiledExplicit),n},e.exports=r},9471:(e,a,p)=>{"use strict";e.exports=p(5966)},6601:(e,a,p)=>{"use strict";e.exports=p(9471).extend({implicit:[p(2156),p(7452)],explicit:[p(3531),p(1605),p(6879),p(4982)]})},4795:(e,a,p)=>{"use strict";var t=p(7657);e.exports=new t({explicit:[p(48),p(6451),p(945)]})},5966:(e,a,p)=>{"use strict";e.exports=p(4795).extend({implicit:[p(151),p(8771),p(1518),p(5215)]})},192:(e,a,p)=>{"use strict";var t=p(8347);function d(e,a,p,t,d){var i="",r="",n=Math.floor(d/2)-1;return t-a>n&&(a=t-n+(i=" ... ").length),p-t>n&&(p=t+n-(r=" ...").length),{str:i+e.slice(a,p).replace(/\t/g,"→")+r,pos:t-a+i.length}}function i(e,a){return t.repeat(" ",a-e.length)+e}e.exports=function(e,a){if(a=Object.create(a||null),!e.buffer)return null;a.maxLength||(a.maxLength=79),"number"!=typeof a.indent&&(a.indent=1),"number"!=typeof a.linesBefore&&(a.linesBefore=3),"number"!=typeof a.linesAfter&&(a.linesAfter=2);for(var p,r=/\r?\n|\r|\0/g,n=[0],o=[],s=-1;p=r.exec(e.buffer);)o.push(p.index),n.push(p.index+p[0].length),e.position<=p.index&&s<0&&(s=n.length-2);s<0&&(s=n.length-1);var l,m,u="",c=Math.min(e.line+a.linesAfter,o.length).toString().length,h=a.maxLength-(a.indent+c+3);for(l=1;l<=a.linesBefore&&!(s-l<0);l++)m=d(e.buffer,n[s-l],o[s-l],e.position-(n[s]-n[s-l]),h),u=t.repeat(" ",a.indent)+i((e.line-l+1).toString(),c)+" | "+m.str+"\n"+u;for(m=d(e.buffer,n[s],o[s],e.position,h),u+=t.repeat(" ",a.indent)+i((e.line+1).toString(),c)+" | "+m.str+"\n",u+=t.repeat("-",a.indent+c+3+m.pos)+"^\n",l=1;l<=a.linesAfter&&!(s+l>=o.length);l++)m=d(e.buffer,n[s+l],o[s+l],e.position-(n[s]-n[s+l]),h),u+=t.repeat(" ",a.indent)+i((e.line+l+1).toString(),c)+" | "+m.str+"\n";return u.replace(/\n$/,"")}},1364:(e,a,p)=>{"use strict";var t=p(8425),d=["kind","multi","resolve","construct","instanceOf","predicate","represent","representName","defaultStyle","styleAliases"],i=["scalar","sequence","mapping"];e.exports=function(e,a){var p,r;if(a=a||{},Object.keys(a).forEach((function(a){if(-1===d.indexOf(a))throw new t('Unknown option "'+a+'" is met in definition of "'+e+'" YAML type.')})),this.options=a,this.tag=e,this.kind=a.kind||null,this.resolve=a.resolve||function(){return!0},this.construct=a.construct||function(e){return e},this.instanceOf=a.instanceOf||null,this.predicate=a.predicate||null,this.represent=a.represent||null,this.representName=a.representName||null,this.defaultStyle=a.defaultStyle||null,this.multi=a.multi||!1,this.styleAliases=(p=a.styleAliases||null,r={},null!==p&&Object.keys(p).forEach((function(e){p[e].forEach((function(a){r[String(a)]=e}))})),r),-1===i.indexOf(this.kind))throw new t('Unknown kind "'+this.kind+'" is specified for "'+e+'" YAML type.')}},3531:(e,a,p)=>{"use strict";var t=p(1364),d="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\n\r";e.exports=new t("tag:yaml.org,2002:binary",{kind:"scalar",resolve:function(e){if(null===e)return!1;var a,p,t=0,i=e.length,r=d;for(p=0;p<i;p++)if(!((a=r.indexOf(e.charAt(p)))>64)){if(a<0)return!1;t+=6}return t%8==0},construct:function(e){var a,p,t=e.replace(/[\r\n=]/g,""),i=t.length,r=d,n=0,o=[];for(a=0;a<i;a++)a%4==0&&a&&(o.push(n>>16&255),o.push(n>>8&255),o.push(255&n)),n=n<<6|r.indexOf(t.charAt(a));return 0==(p=i%4*6)?(o.push(n>>16&255),o.push(n>>8&255),o.push(255&n)):18===p?(o.push(n>>10&255),o.push(n>>2&255)):12===p&&o.push(n>>4&255),new Uint8Array(o)},predicate:function(e){return"[object Uint8Array]"===Object.prototype.toString.call(e)},represent:function(e){var a,p,t="",i=0,r=e.length,n=d;for(a=0;a<r;a++)a%3==0&&a&&(t+=n[i>>18&63],t+=n[i>>12&63],t+=n[i>>6&63],t+=n[63&i]),i=(i<<8)+e[a];return 0==(p=r%3)?(t+=n[i>>18&63],t+=n[i>>12&63],t+=n[i>>6&63],t+=n[63&i]):2===p?(t+=n[i>>10&63],t+=n[i>>4&63],t+=n[i<<2&63],t+=n[64]):1===p&&(t+=n[i>>2&63],t+=n[i<<4&63],t+=n[64],t+=n[64]),t}})},8771:(e,a,p)=>{"use strict";var t=p(1364);e.exports=new t("tag:yaml.org,2002:bool",{kind:"scalar",resolve:function(e){if(null===e)return!1;var a=e.length;return 4===a&&("true"===e||"True"===e||"TRUE"===e)||5===a&&("false"===e||"False"===e||"FALSE"===e)},construct:function(e){return"true"===e||"True"===e||"TRUE"===e},predicate:function(e){return"[object Boolean]"===Object.prototype.toString.call(e)},represent:{lowercase:function(e){return e?"true":"false"},uppercase:function(e){return e?"TRUE":"FALSE"},camelcase:function(e){return e?"True":"False"}},defaultStyle:"lowercase"})},5215:(e,a,p)=>{"use strict";var t=p(8347),d=p(1364),i=new RegExp("^(?:[-+]?(?:[0-9][0-9_]*)(?:\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?|\\.[0-9_]+(?:[eE][-+]?[0-9]+)?|[-+]?\\.(?:inf|Inf|INF)|\\.(?:nan|NaN|NAN))$"),r=/^[-+]?[0-9]+e/;e.exports=new d("tag:yaml.org,2002:float",{kind:"scalar",resolve:function(e){return null!==e&&!(!i.test(e)||"_"===e[e.length-1])},construct:function(e){var a,p;return p="-"===(a=e.replace(/_/g,"").toLowerCase())[0]?-1:1,"+-".indexOf(a[0])>=0&&(a=a.slice(1)),".inf"===a?1===p?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY:".nan"===a?NaN:p*parseFloat(a,10)},predicate:function(e){return"[object Number]"===Object.prototype.toString.call(e)&&(e%1!=0||t.isNegativeZero(e))},represent:function(e,a){var p;if(isNaN(e))switch(a){case"lowercase":return".nan";case"uppercase":return".NAN";case"camelcase":return".NaN"}else if(Number.POSITIVE_INFINITY===e)switch(a){case"lowercase":return".inf";case"uppercase":return".INF";case"camelcase":return".Inf"}else if(Number.NEGATIVE_INFINITY===e)switch(a){case"lowercase":return"-.inf";case"uppercase":return"-.INF";case"camelcase":return"-.Inf"}else if(t.isNegativeZero(e))return"-0.0";return p=e.toString(10),r.test(p)?p.replace("e",".e"):p},defaultStyle:"lowercase"})},1518:(e,a,p)=>{"use strict";var t=p(8347),d=p(1364);function i(e){return 48<=e&&e<=55}function r(e){return 48<=e&&e<=57}e.exports=new d("tag:yaml.org,2002:int",{kind:"scalar",resolve:function(e){if(null===e)return!1;var a,p,t=e.length,d=0,n=!1;if(!t)return!1;if("-"!==(a=e[d])&&"+"!==a||(a=e[++d]),"0"===a){if(d+1===t)return!0;if("b"===(a=e[++d])){for(d++;d<t;d++)if("_"!==(a=e[d])){if("0"!==a&&"1"!==a)return!1;n=!0}return n&&"_"!==a}if("x"===a){for(d++;d<t;d++)if("_"!==(a=e[d])){if(!(48<=(p=e.charCodeAt(d))&&p<=57||65<=p&&p<=70||97<=p&&p<=102))return!1;n=!0}return n&&"_"!==a}if("o"===a){for(d++;d<t;d++)if("_"!==(a=e[d])){if(!i(e.charCodeAt(d)))return!1;n=!0}return n&&"_"!==a}}if("_"===a)return!1;for(;d<t;d++)if("_"!==(a=e[d])){if(!r(e.charCodeAt(d)))return!1;n=!0}return!(!n||"_"===a)},construct:function(e){var a,p=e,t=1;if(-1!==p.indexOf("_")&&(p=p.replace(/_/g,"")),"-"!==(a=p[0])&&"+"!==a||("-"===a&&(t=-1),a=(p=p.slice(1))[0]),"0"===p)return 0;if("0"===a){if("b"===p[1])return t*parseInt(p.slice(2),2);if("x"===p[1])return t*parseInt(p.slice(2),16);if("o"===p[1])return t*parseInt(p.slice(2),8)}return t*parseInt(p,10)},predicate:function(e){return"[object Number]"===Object.prototype.toString.call(e)&&e%1==0&&!t.isNegativeZero(e)},represent:{binary:function(e){return e>=0?"0b"+e.toString(2):"-0b"+e.toString(2).slice(1)},octal:function(e){return e>=0?"0o"+e.toString(8):"-0o"+e.toString(8).slice(1)},decimal:function(e){return e.toString(10)},hexadecimal:function(e){return e>=0?"0x"+e.toString(16).toUpperCase():"-0x"+e.toString(16).toUpperCase().slice(1)}},defaultStyle:"decimal",styleAliases:{binary:[2,"bin"],octal:[8,"oct"],decimal:[10,"dec"],hexadecimal:[16,"hex"]}})},945:(e,a,p)=>{"use strict";var t=p(1364);e.exports=new t("tag:yaml.org,2002:map",{kind:"mapping",construct:function(e){return null!==e?e:{}}})},7452:(e,a,p)=>{"use strict";var t=p(1364);e.exports=new t("tag:yaml.org,2002:merge",{kind:"scalar",resolve:function(e){return"<<"===e||null===e}})},151:(e,a,p)=>{"use strict";var t=p(1364);e.exports=new t("tag:yaml.org,2002:null",{kind:"scalar",resolve:function(e){if(null===e)return!0;var a=e.length;return 1===a&&"~"===e||4===a&&("null"===e||"Null"===e||"NULL"===e)},construct:function(){return null},predicate:function(e){return null===e},represent:{canonical:function(){return"~"},lowercase:function(){return"null"},uppercase:function(){return"NULL"},camelcase:function(){return"Null"},empty:function(){return""}},defaultStyle:"lowercase"})},1605:(e,a,p)=>{"use strict";var t=p(1364),d=Object.prototype.hasOwnProperty,i=Object.prototype.toString;e.exports=new t("tag:yaml.org,2002:omap",{kind:"sequence",resolve:function(e){if(null===e)return!0;var a,p,t,r,n,o=[],s=e;for(a=0,p=s.length;a<p;a+=1){if(t=s[a],n=!1,"[object Object]"!==i.call(t))return!1;for(r in t)if(d.call(t,r)){if(n)return!1;n=!0}if(!n)return!1;if(-1!==o.indexOf(r))return!1;o.push(r)}return!0},construct:function(e){return null!==e?e:[]}})},6879:(e,a,p)=>{"use strict";var t=p(1364),d=Object.prototype.toString;e.exports=new t("tag:yaml.org,2002:pairs",{kind:"sequence",resolve:function(e){if(null===e)return!0;var a,p,t,i,r,n=e;for(r=new Array(n.length),a=0,p=n.length;a<p;a+=1){if(t=n[a],"[object Object]"!==d.call(t))return!1;if(1!==(i=Object.keys(t)).length)return!1;r[a]=[i[0],t[i[0]]]}return!0},construct:function(e){if(null===e)return[];var a,p,t,d,i,r=e;for(i=new Array(r.length),a=0,p=r.length;a<p;a+=1)t=r[a],d=Object.keys(t),i[a]=[d[0],t[d[0]]];return i}})},6451:(e,a,p)=>{"use strict";var t=p(1364);e.exports=new t("tag:yaml.org,2002:seq",{kind:"sequence",construct:function(e){return null!==e?e:[]}})},4982:(e,a,p)=>{"use strict";var t=p(1364),d=Object.prototype.hasOwnProperty;e.exports=new t("tag:yaml.org,2002:set",{kind:"mapping",resolve:function(e){if(null===e)return!0;var a,p=e;for(a in p)if(d.call(p,a)&&null!==p[a])return!1;return!0},construct:function(e){return null!==e?e:{}}})},48:(e,a,p)=>{"use strict";var t=p(1364);e.exports=new t("tag:yaml.org,2002:str",{kind:"scalar",construct:function(e){return null!==e?e:""}})},2156:(e,a,p)=>{"use strict";var t=p(1364),d=new RegExp("^([0-9][0-9][0-9][0-9])-([0-9][0-9])-([0-9][0-9])$"),i=new RegExp("^([0-9][0-9][0-9][0-9])-([0-9][0-9]?)-([0-9][0-9]?)(?:[Tt]|[ \\t]+)([0-9][0-9]?):([0-9][0-9]):([0-9][0-9])(?:\\.([0-9]*))?(?:[ \\t]*(Z|([-+])([0-9][0-9]?)(?::([0-9][0-9]))?))?$");e.exports=new t("tag:yaml.org,2002:timestamp",{kind:"scalar",resolve:function(e){return null!==e&&(null!==d.exec(e)||null!==i.exec(e))},construct:function(e){var a,p,t,r,n,o,s,l,m=0,u=null;if(null===(a=d.exec(e))&&(a=i.exec(e)),null===a)throw new Error("Date resolve error");if(p=+a[1],t=+a[2]-1,r=+a[3],!a[4])return new Date(Date.UTC(p,t,r));if(n=+a[4],o=+a[5],s=+a[6],a[7]){for(m=a[7].slice(0,3);m.length<3;)m+="0";m=+m}return a[9]&&(u=6e4*(60*+a[10]+ +(a[11]||0)),"-"===a[9]&&(u=-u)),l=new Date(Date.UTC(p,t,r,n,o,s,m)),u&&l.setTime(l.getTime()-u),l},instanceOf:Date,represent:function(e){return e.toISOString()}})},8218:(e,a)=>{"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.Lazy=void 0,a.Lazy=class{constructor(e){this._value=null,this.creator=e}get hasValue(){return null==this.creator}get value(){if(null==this.creator)return this._value;const e=this.creator();return this.value=e,e}set value(e){this._value=e,this.creator=null}}},1658:e=>{var a=/[\\^$.*+?()[\]{}|]/g,p=RegExp(a.source),t="object"==typeof global&&global&&global.Object===Object&&global,d="object"==typeof self&&self&&self.Object===Object&&self,i=t||d||Function("return this")(),r=Object.prototype.toString,n=i.Symbol,o=n?n.prototype:void 0,s=o?o.toString:void 0;e.exports=function(e){var t;return(e=null==(t=e)?"":function(e){if("string"==typeof e)return e;if(function(e){return"symbol"==typeof e||function(e){return!!e&&"object"==typeof e}(e)&&"[object Symbol]"==r.call(e)}(e))return s?s.call(e):"";var a=e+"";return"0"==a&&1/e==-1/0?"-0":a}(t))&&p.test(e)?e.replace(a,"\\$&"):e}},2307:(e,a,p)=>{e=p.nmd(e);var t="__lodash_hash_undefined__",d=9007199254740991,i="[object Arguments]",r="[object Array]",n="[object Boolean]",o="[object Date]",s="[object Error]",l="[object Function]",m="[object Map]",u="[object Number]",c="[object Object]",h="[object Promise]",f="[object RegExp]",v="[object Set]",w="[object String]",g="[object WeakMap]",y="[object ArrayBuffer]",b="[object DataView]",_=/^\[object .+?Constructor\]$/,E=/^(?:0|[1-9]\d*)$/,N={};N["[object Float32Array]"]=N["[object Float64Array]"]=N["[object Int8Array]"]=N["[object Int16Array]"]=N["[object Int32Array]"]=N["[object Uint8Array]"]=N["[object Uint8ClampedArray]"]=N["[object Uint16Array]"]=N["[object Uint32Array]"]=!0,N[i]=N[r]=N[y]=N[n]=N[b]=N[o]=N[s]=N[l]=N[m]=N[u]=N[c]=N[f]=N[v]=N[w]=N[g]=!1;var S="object"==typeof global&&global&&global.Object===Object&&global,T="object"==typeof self&&self&&self.Object===Object&&self,D=S||T||Function("return this")(),A=a&&!a.nodeType&&a,C=A&&e&&!e.nodeType&&e,O=C&&C.exports===A,I=O&&S.process,R=function(){try{return I&&I.binding&&I.binding("util")}catch(e){}}(),P=R&&R.isTypedArray;function x(e,a){for(var p=-1,t=null==e?0:e.length;++p<t;)if(a(e[p],p,e))return!0;return!1}function F(e){var a=-1,p=Array(e.size);return e.forEach((function(e,t){p[++a]=[t,e]})),p}function V(e){var a=-1,p=Array(e.size);return e.forEach((function(e){p[++a]=e})),p}var k,U,L,$=Array.prototype,j=Function.prototype,B=Object.prototype,M=D["__core-js_shared__"],q=j.toString,H=B.hasOwnProperty,G=(k=/[^.]+$/.exec(M&&M.keys&&M.keys.IE_PROTO||""))?"Symbol(src)_1."+k:"",z=B.toString,W=RegExp("^"+q.call(H).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Y=O?D.Buffer:void 0,X=D.Symbol,J=D.Uint8Array,K=B.propertyIsEnumerable,Q=$.splice,Z=X?X.toStringTag:void 0,ee=Object.getOwnPropertySymbols,ae=Y?Y.isBuffer:void 0,pe=(U=Object.keys,L=Object,function(e){return U(L(e))}),te=Ce(D,"DataView"),de=Ce(D,"Map"),ie=Ce(D,"Promise"),re=Ce(D,"Set"),ne=Ce(D,"WeakMap"),oe=Ce(Object,"create"),se=Pe(te),le=Pe(de),me=Pe(ie),ue=Pe(re),ce=Pe(ne),he=X?X.prototype:void 0,fe=he?he.valueOf:void 0;function ve(e){var a=-1,p=null==e?0:e.length;for(this.clear();++a<p;){var t=e[a];this.set(t[0],t[1])}}function we(e){var a=-1,p=null==e?0:e.length;for(this.clear();++a<p;){var t=e[a];this.set(t[0],t[1])}}function ge(e){var a=-1,p=null==e?0:e.length;for(this.clear();++a<p;){var t=e[a];this.set(t[0],t[1])}}function ye(e){var a=-1,p=null==e?0:e.length;for(this.__data__=new ge;++a<p;)this.add(e[a])}function be(e){var a=this.__data__=new we(e);this.size=a.size}function _e(e,a){for(var p=e.length;p--;)if(xe(e[p][0],a))return p;return-1}function Ee(e){return null==e?void 0===e?"[object Undefined]":"[object Null]":Z&&Z in Object(e)?function(e){var a=H.call(e,Z),p=e[Z];try{e[Z]=void 0;var t=!0}catch(e){}var d=z.call(e);return t&&(a?e[Z]=p:delete e[Z]),d}(e):function(e){return z.call(e)}(e)}function Ne(e){return je(e)&&Ee(e)==i}function Se(e,a,p,t,d){return e===a||(null==e||null==a||!je(e)&&!je(a)?e!=e&&a!=a:function(e,a,p,t,d,l){var h=Ve(e),g=Ve(a),_=h?r:Ie(e),E=g?r:Ie(a),N=(_=_==i?c:_)==c,S=(E=E==i?c:E)==c,T=_==E;if(T&&ke(e)){if(!ke(a))return!1;h=!0,N=!1}if(T&&!N)return l||(l=new be),h||Be(e)?Te(e,a,p,t,d,l):function(e,a,p,t,d,i,r){switch(p){case b:if(e.byteLength!=a.byteLength||e.byteOffset!=a.byteOffset)return!1;e=e.buffer,a=a.buffer;case y:return!(e.byteLength!=a.byteLength||!i(new J(e),new J(a)));case n:case o:case u:return xe(+e,+a);case s:return e.name==a.name&&e.message==a.message;case f:case w:return e==a+"";case m:var l=F;case v:var c=1&t;if(l||(l=V),e.size!=a.size&&!c)return!1;var h=r.get(e);if(h)return h==a;t|=2,r.set(e,a);var g=Te(l(e),l(a),t,d,i,r);return r.delete(e),g;case"[object Symbol]":if(fe)return fe.call(e)==fe.call(a)}return!1}(e,a,_,p,t,d,l);if(!(1&p)){var D=N&&H.call(e,"__wrapped__"),A=S&&H.call(a,"__wrapped__");if(D||A){var C=D?e.value():e,O=A?a.value():a;return l||(l=new be),d(C,O,p,t,l)}}return!!T&&(l||(l=new be),function(e,a,p,t,d,i){var r=1&p,n=De(e),o=n.length;if(o!=De(a).length&&!r)return!1;for(var s=o;s--;){var l=n[s];if(!(r?l in a:H.call(a,l)))return!1}var m=i.get(e);if(m&&i.get(a))return m==a;var u=!0;i.set(e,a),i.set(a,e);for(var c=r;++s<o;){var h=e[l=n[s]],f=a[l];if(t)var v=r?t(f,h,l,a,e,i):t(h,f,l,e,a,i);if(!(void 0===v?h===f||d(h,f,p,t,i):v)){u=!1;break}c||(c="constructor"==l)}if(u&&!c){var w=e.constructor,g=a.constructor;w==g||!("constructor"in e)||!("constructor"in a)||"function"==typeof w&&w instanceof w&&"function"==typeof g&&g instanceof g||(u=!1)}return i.delete(e),i.delete(a),u}(e,a,p,t,d,l))}(e,a,p,t,Se,d))}function Te(e,a,p,t,d,i){var r=1&p,n=e.length,o=a.length;if(n!=o&&!(r&&o>n))return!1;var s=i.get(e);if(s&&i.get(a))return s==a;var l=-1,m=!0,u=2&p?new ye:void 0;for(i.set(e,a),i.set(a,e);++l<n;){var c=e[l],h=a[l];if(t)var f=r?t(h,c,l,a,e,i):t(c,h,l,e,a,i);if(void 0!==f){if(f)continue;m=!1;break}if(u){if(!x(a,(function(e,a){if(r=a,!u.has(r)&&(c===e||d(c,e,p,t,i)))return u.push(a);var r}))){m=!1;break}}else if(c!==h&&!d(c,h,p,t,i)){m=!1;break}}return i.delete(e),i.delete(a),m}function De(e){return function(e,a,p){var t=a(e);return Ve(e)?t:function(e,a){for(var p=-1,t=a.length,d=e.length;++p<t;)e[d+p]=a[p];return e}(t,p(e))}(e,Me,Oe)}function Ae(e,a){var p,t,d=e.__data__;return("string"==(t=typeof(p=a))||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==p:null===p)?d["string"==typeof a?"string":"hash"]:d.map}function Ce(e,a){var p=function(e,a){return null==e?void 0:e[a]}(e,a);return function(e){return!(!$e(e)||function(e){return!!G&&G in e}(e))&&(Ue(e)?W:_).test(Pe(e))}(p)?p:void 0}ve.prototype.clear=function(){this.__data__=oe?oe(null):{},this.size=0},ve.prototype.delete=function(e){var a=this.has(e)&&delete this.__data__[e];return this.size-=a?1:0,a},ve.prototype.get=function(e){var a=this.__data__;if(oe){var p=a[e];return p===t?void 0:p}return H.call(a,e)?a[e]:void 0},ve.prototype.has=function(e){var a=this.__data__;return oe?void 0!==a[e]:H.call(a,e)},ve.prototype.set=function(e,a){var p=this.__data__;return this.size+=this.has(e)?0:1,p[e]=oe&&void 0===a?t:a,this},we.prototype.clear=function(){this.__data__=[],this.size=0},we.prototype.delete=function(e){var a=this.__data__,p=_e(a,e);return!(p<0||(p==a.length-1?a.pop():Q.call(a,p,1),--this.size,0))},we.prototype.get=function(e){var a=this.__data__,p=_e(a,e);return p<0?void 0:a[p][1]},we.prototype.has=function(e){return _e(this.__data__,e)>-1},we.prototype.set=function(e,a){var p=this.__data__,t=_e(p,e);return t<0?(++this.size,p.push([e,a])):p[t][1]=a,this},ge.prototype.clear=function(){this.size=0,this.__data__={hash:new ve,map:new(de||we),string:new ve}},ge.prototype.delete=function(e){var a=Ae(this,e).delete(e);return this.size-=a?1:0,a},ge.prototype.get=function(e){return Ae(this,e).get(e)},ge.prototype.has=function(e){return Ae(this,e).has(e)},ge.prototype.set=function(e,a){var p=Ae(this,e),t=p.size;return p.set(e,a),this.size+=p.size==t?0:1,this},ye.prototype.add=ye.prototype.push=function(e){return this.__data__.set(e,t),this},ye.prototype.has=function(e){return this.__data__.has(e)},be.prototype.clear=function(){this.__data__=new we,this.size=0},be.prototype.delete=function(e){var a=this.__data__,p=a.delete(e);return this.size=a.size,p},be.prototype.get=function(e){return this.__data__.get(e)},be.prototype.has=function(e){return this.__data__.has(e)},be.prototype.set=function(e,a){var p=this.__data__;if(p instanceof we){var t=p.__data__;if(!de||t.length<199)return t.push([e,a]),this.size=++p.size,this;p=this.__data__=new ge(t)}return p.set(e,a),this.size=p.size,this};var Oe=ee?function(e){return null==e?[]:(e=Object(e),function(a,p){for(var t=-1,d=null==a?0:a.length,i=0,r=[];++t<d;){var n=a[t];o=n,K.call(e,o)&&(r[i++]=n)}var o;return r}(ee(e)))}:function(){return[]},Ie=Ee;function Re(e,a){return!!(a=null==a?d:a)&&("number"==typeof e||E.test(e))&&e>-1&&e%1==0&&e<a}function Pe(e){if(null!=e){try{return q.call(e)}catch(e){}try{return e+""}catch(e){}}return""}function xe(e,a){return e===a||e!=e&&a!=a}(te&&Ie(new te(new ArrayBuffer(1)))!=b||de&&Ie(new de)!=m||ie&&Ie(ie.resolve())!=h||re&&Ie(new re)!=v||ne&&Ie(new ne)!=g)&&(Ie=function(e){var a=Ee(e),p=a==c?e.constructor:void 0,t=p?Pe(p):"";if(t)switch(t){case se:return b;case le:return m;case me:return h;case ue:return v;case ce:return g}return a});var Fe=Ne(function(){return arguments}())?Ne:function(e){return je(e)&&H.call(e,"callee")&&!K.call(e,"callee")},Ve=Array.isArray,ke=ae||function(){return!1};function Ue(e){if(!$e(e))return!1;var a=Ee(e);return a==l||"[object GeneratorFunction]"==a||"[object AsyncFunction]"==a||"[object Proxy]"==a}function Le(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=d}function $e(e){var a=typeof e;return null!=e&&("object"==a||"function"==a)}function je(e){return null!=e&&"object"==typeof e}var Be=P?function(e){return function(a){return e(a)}}(P):function(e){return je(e)&&Le(e.length)&&!!N[Ee(e)]};function Me(e){return null!=(a=e)&&Le(a.length)&&!Ue(a)?function(e,a){var p=Ve(e),t=!p&&Fe(e),d=!p&&!t&&ke(e),i=!p&&!t&&!d&&Be(e),r=p||t||d||i,n=r?function(e,a){for(var p=-1,t=Array(e);++p<e;)t[p]=a(p);return t}(e.length,String):[],o=n.length;for(var s in e)!a&&!H.call(e,s)||r&&("length"==s||d&&("offset"==s||"parent"==s)||i&&("buffer"==s||"byteLength"==s||"byteOffset"==s)||Re(s,o))||n.push(s);return n}(e):function(e){if(p=(a=e)&&a.constructor,a!==("function"==typeof p&&p.prototype||B))return pe(e);var a,p,t=[];for(var d in Object(e))H.call(e,d)&&"constructor"!=d&&t.push(d);return t}(e);var a}e.exports=function(e,a){return Se(e,a)}},9593:(e,a,p)=>{"use strict";const t=p(4411),d=Symbol("max"),i=Symbol("length"),r=Symbol("lengthCalculator"),n=Symbol("allowStale"),o=Symbol("maxAge"),s=Symbol("dispose"),l=Symbol("noDisposeOnSet"),m=Symbol("lruList"),u=Symbol("cache"),c=Symbol("updateAgeOnGet"),h=()=>1,f=(e,a,p)=>{const t=e[u].get(a);if(t){const a=t.value;if(v(e,a)){if(g(e,t),!e[n])return}else p&&(e[c]&&(t.value.now=Date.now()),e[m].unshiftNode(t));return a.value}},v=(e,a)=>{if(!a||!a.maxAge&&!e[o])return!1;const p=Date.now()-a.now;return a.maxAge?p>a.maxAge:e[o]&&p>e[o]},w=e=>{if(e[i]>e[d])for(let a=e[m].tail;e[i]>e[d]&&null!==a;){const p=a.prev;g(e,a),a=p}},g=(e,a)=>{if(a){const p=a.value;e[s]&&e[s](p.key,p.value),e[i]-=p.length,e[u].delete(p.key),e[m].removeNode(a)}};class y{constructor(e,a,p,t,d){this.key=e,this.value=a,this.length=p,this.now=t,this.maxAge=d||0}}const b=(e,a,p,t)=>{let d=p.value;v(e,d)&&(g(e,p),e[n]||(d=void 0)),d&&a.call(t,d.value,d.key,e)};e.exports=class{constructor(e){if("number"==typeof e&&(e={max:e}),e||(e={}),e.max&&("number"!=typeof e.max||e.max<0))throw new TypeError("max must be a non-negative number");this[d]=e.max||1/0;const a=e.length||h;if(this[r]="function"!=typeof a?h:a,this[n]=e.stale||!1,e.maxAge&&"number"!=typeof e.maxAge)throw new TypeError("maxAge must be a number");this[o]=e.maxAge||0,this[s]=e.dispose,this[l]=e.noDisposeOnSet||!1,this[c]=e.updateAgeOnGet||!1,this.reset()}set max(e){if("number"!=typeof e||e<0)throw new TypeError("max must be a non-negative number");this[d]=e||1/0,w(this)}get max(){return this[d]}set allowStale(e){this[n]=!!e}get allowStale(){return this[n]}set maxAge(e){if("number"!=typeof e)throw new TypeError("maxAge must be a non-negative number");this[o]=e,w(this)}get maxAge(){return this[o]}set lengthCalculator(e){"function"!=typeof e&&(e=h),e!==this[r]&&(this[r]=e,this[i]=0,this[m].forEach((e=>{e.length=this[r](e.value,e.key),this[i]+=e.length}))),w(this)}get lengthCalculator(){return this[r]}get length(){return this[i]}get itemCount(){return this[m].length}rforEach(e,a){a=a||this;for(let p=this[m].tail;null!==p;){const t=p.prev;b(this,e,p,a),p=t}}forEach(e,a){a=a||this;for(let p=this[m].head;null!==p;){const t=p.next;b(this,e,p,a),p=t}}keys(){return this[m].toArray().map((e=>e.key))}values(){return this[m].toArray().map((e=>e.value))}reset(){this[s]&&this[m]&&this[m].length&&this[m].forEach((e=>this[s](e.key,e.value))),this[u]=new Map,this[m]=new t,this[i]=0}dump(){return this[m].map((e=>!v(this,e)&&{k:e.key,v:e.value,e:e.now+(e.maxAge||0)})).toArray().filter((e=>e))}dumpLru(){return this[m]}set(e,a,p){if((p=p||this[o])&&"number"!=typeof p)throw new TypeError("maxAge must be a number");const t=p?Date.now():0,n=this[r](a,e);if(this[u].has(e)){if(n>this[d])return g(this,this[u].get(e)),!1;const r=this[u].get(e).value;return this[s]&&(this[l]||this[s](e,r.value)),r.now=t,r.maxAge=p,r.value=a,this[i]+=n-r.length,r.length=n,this.get(e),w(this),!0}const c=new y(e,a,n,t,p);return c.length>this[d]?(this[s]&&this[s](e,a),!1):(this[i]+=c.length,this[m].unshift(c),this[u].set(e,this[m].head),w(this),!0)}has(e){if(!this[u].has(e))return!1;const a=this[u].get(e).value;return!v(this,a)}get(e){return f(this,e,!0)}peek(e){return f(this,e,!1)}pop(){const e=this[m].tail;return e?(g(this,e),e.value):null}del(e){g(this,this[u].get(e))}load(e){this.reset();const a=Date.now();for(let p=e.length-1;p>=0;p--){const t=e[p],d=t.e||0;if(0===d)this.set(t.k,t.v);else{const e=d-a;e>0&&this.set(t.k,t.v,e)}}}prune(){this[u].forEach(((e,a)=>f(this,a,!1)))}}},7824:e=>{var a=1e3,p=60*a,t=60*p,d=24*t;function i(e,a,p,t){var d=a>=1.5*p;return Math.round(e/p)+" "+t+(d?"s":"")}e.exports=function(e,r){r=r||{};var n,o,s=typeof e;if("string"===s&&e.length>0)return function(e){if(!((e=String(e)).length>100)){var i=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(i){var r=parseFloat(i[1]);switch((i[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*r;case"weeks":case"week":case"w":return 6048e5*r;case"days":case"day":case"d":return r*d;case"hours":case"hour":case"hrs":case"hr":case"h":return r*t;case"minutes":case"minute":case"mins":case"min":case"m":return r*p;case"seconds":case"second":case"secs":case"sec":case"s":return r*a;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return r;default:return}}}}(e);if("number"===s&&isFinite(e))return r.long?(n=e,(o=Math.abs(n))>=d?i(n,o,d,"day"):o>=t?i(n,o,t,"hour"):o>=p?i(n,o,p,"minute"):o>=a?i(n,o,a,"second"):n+" ms"):function(e){var i=Math.abs(e);return i>=d?Math.round(e/d)+"d":i>=t?Math.round(e/t)+"h":i>=p?Math.round(e/p)+"m":i>=a?Math.round(e/a)+"s":e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},6099:(e,a,p)=>{!function(e){e.parser=function(e,a){return new d(e,a)},e.SAXParser=d,e.SAXStream=r,e.createStream=function(e,a){return new r(e,a)},e.MAX_BUFFER_LENGTH=65536;var a,t=["comment","sgmlDecl","textNode","tagName","doctype","procInstName","procInstBody","entity","attribName","attribValue","cdata","script"];function d(a,p){if(!(this instanceof d))return new d(a,p);var i=this;!function(e){for(var a=0,p=t.length;a<p;a++)e[t[a]]=""}(i),i.q=i.c="",i.bufferCheckPosition=e.MAX_BUFFER_LENGTH,i.opt=p||{},i.opt.lowercase=i.opt.lowercase||i.opt.lowercasetags,i.looseCase=i.opt.lowercase?"toLowerCase":"toUpperCase",i.tags=[],i.closed=i.closedRoot=i.sawRoot=!1,i.tag=i.error=null,i.strict=!!a,i.noscript=!(!a&&!i.opt.noscript),i.state=E.BEGIN,i.strictEntities=i.opt.strictEntities,i.ENTITIES=i.strictEntities?Object.create(e.XML_ENTITIES):Object.create(e.ENTITIES),i.attribList=[],i.opt.xmlns&&(i.ns=Object.create(s)),i.trackPosition=!1!==i.opt.position,i.trackPosition&&(i.position=i.line=i.column=0),S(i,"onready")}e.EVENTS=["text","processinginstruction","sgmldeclaration","doctype","comment","opentagstart","attribute","opentag","closetag","opencdata","cdata","closecdata","error","end","ready","script","opennamespace","closenamespace"],Object.create||(Object.create=function(e){function a(){}return a.prototype=e,new a}),Object.keys||(Object.keys=function(e){var a=[];for(var p in e)e.hasOwnProperty(p)&&a.push(p);return a}),d.prototype={end:function(){O(this)},write:function(a){var p=this;if(this.error)throw this.error;if(p.closed)return C(p,"Cannot write after close. Assign an onready handler.");if(null===a)return O(p);"object"==typeof a&&(a=a.toString());for(var d=0,i="";i=L(a,d++),p.c=i,i;)switch(p.trackPosition&&(p.position++,"\n"===i?(p.line++,p.column=0):p.column++),p.state){case E.BEGIN:if(p.state=E.BEGIN_WHITESPACE,"\ufeff"===i)continue;U(p,i);continue;case E.BEGIN_WHITESPACE:U(p,i);continue;case E.TEXT:if(p.sawRoot&&!p.closedRoot){for(var r=d-1;i&&"<"!==i&&"&"!==i;)(i=L(a,d++))&&p.trackPosition&&(p.position++,"\n"===i?(p.line++,p.column=0):p.column++);p.textNode+=a.substring(r,d-1)}"<"!==i||p.sawRoot&&p.closedRoot&&!p.strict?(h(i)||p.sawRoot&&!p.closedRoot||I(p,"Text data outside of root node."),"&"===i?p.state=E.TEXT_ENTITY:p.textNode+=i):(p.state=E.OPEN_WAKA,p.startTagPosition=p.position);continue;case E.SCRIPT:"<"===i?p.state=E.SCRIPT_ENDING:p.script+=i;continue;case E.SCRIPT_ENDING:"/"===i?p.state=E.CLOSE_TAG:(p.script+="<"+i,p.state=E.SCRIPT);continue;case E.OPEN_WAKA:if("!"===i)p.state=E.SGML_DECL,p.sgmlDecl="";else if(h(i));else if(w(l,i))p.state=E.OPEN_TAG,p.tagName=i;else if("/"===i)p.state=E.CLOSE_TAG,p.tagName="";else if("?"===i)p.state=E.PROC_INST,p.procInstName=p.procInstBody="";else{if(I(p,"Unencoded <"),p.startTagPosition+1<p.position){var n=p.position-p.startTagPosition;i=new Array(n).join(" ")+i}p.textNode+="<"+i,p.state=E.TEXT}continue;case E.SGML_DECL:"[CDATA["===(p.sgmlDecl+i).toUpperCase()?(T(p,"onopencdata"),p.state=E.CDATA,p.sgmlDecl="",p.cdata=""):p.sgmlDecl+i==="--"?(p.state=E.COMMENT,p.comment="",p.sgmlDecl=""):"DOCTYPE"===(p.sgmlDecl+i).toUpperCase()?(p.state=E.DOCTYPE,(p.doctype||p.sawRoot)&&I(p,"Inappropriately located doctype declaration"),p.doctype="",p.sgmlDecl=""):">"===i?(T(p,"onsgmldeclaration",p.sgmlDecl),p.sgmlDecl="",p.state=E.TEXT):f(i)?(p.state=E.SGML_DECL_QUOTED,p.sgmlDecl+=i):p.sgmlDecl+=i;continue;case E.SGML_DECL_QUOTED:i===p.q&&(p.state=E.SGML_DECL,p.q=""),p.sgmlDecl+=i;continue;case E.DOCTYPE:">"===i?(p.state=E.TEXT,T(p,"ondoctype",p.doctype),p.doctype=!0):(p.doctype+=i,"["===i?p.state=E.DOCTYPE_DTD:f(i)&&(p.state=E.DOCTYPE_QUOTED,p.q=i));continue;case E.DOCTYPE_QUOTED:p.doctype+=i,i===p.q&&(p.q="",p.state=E.DOCTYPE);continue;case E.DOCTYPE_DTD:p.doctype+=i,"]"===i?p.state=E.DOCTYPE:f(i)&&(p.state=E.DOCTYPE_DTD_QUOTED,p.q=i);continue;case E.DOCTYPE_DTD_QUOTED:p.doctype+=i,i===p.q&&(p.state=E.DOCTYPE_DTD,p.q="");continue;case E.COMMENT:"-"===i?p.state=E.COMMENT_ENDING:p.comment+=i;continue;case E.COMMENT_ENDING:"-"===i?(p.state=E.COMMENT_ENDED,p.comment=A(p.opt,p.comment),p.comment&&T(p,"oncomment",p.comment),p.comment=""):(p.comment+="-"+i,p.state=E.COMMENT);continue;case E.COMMENT_ENDED:">"!==i?(I(p,"Malformed comment"),p.comment+="--"+i,p.state=E.COMMENT):p.state=E.TEXT;continue;case E.CDATA:"]"===i?p.state=E.CDATA_ENDING:p.cdata+=i;continue;case E.CDATA_ENDING:"]"===i?p.state=E.CDATA_ENDING_2:(p.cdata+="]"+i,p.state=E.CDATA);continue;case E.CDATA_ENDING_2:">"===i?(p.cdata&&T(p,"oncdata",p.cdata),T(p,"onclosecdata"),p.cdata="",p.state=E.TEXT):"]"===i?p.cdata+="]":(p.cdata+="]]"+i,p.state=E.CDATA);continue;case E.PROC_INST:"?"===i?p.state=E.PROC_INST_ENDING:h(i)?p.state=E.PROC_INST_BODY:p.procInstName+=i;continue;case E.PROC_INST_BODY:if(!p.procInstBody&&h(i))continue;"?"===i?p.state=E.PROC_INST_ENDING:p.procInstBody+=i;continue;case E.PROC_INST_ENDING:">"===i?(T(p,"onprocessinginstruction",{name:p.procInstName,body:p.procInstBody}),p.procInstName=p.procInstBody="",p.state=E.TEXT):(p.procInstBody+="?"+i,p.state=E.PROC_INST_BODY);continue;case E.OPEN_TAG:w(m,i)?p.tagName+=i:(R(p),">"===i?F(p):"/"===i?p.state=E.OPEN_TAG_SLASH:(h(i)||I(p,"Invalid character in tag name"),p.state=E.ATTRIB));continue;case E.OPEN_TAG_SLASH:">"===i?(F(p,!0),V(p)):(I(p,"Forward-slash in opening tag not followed by >"),p.state=E.ATTRIB);continue;case E.ATTRIB:if(h(i))continue;">"===i?F(p):"/"===i?p.state=E.OPEN_TAG_SLASH:w(l,i)?(p.attribName=i,p.attribValue="",p.state=E.ATTRIB_NAME):I(p,"Invalid attribute name");continue;case E.ATTRIB_NAME:"="===i?p.state=E.ATTRIB_VALUE:">"===i?(I(p,"Attribute without value"),p.attribValue=p.attribName,x(p),F(p)):h(i)?p.state=E.ATTRIB_NAME_SAW_WHITE:w(m,i)?p.attribName+=i:I(p,"Invalid attribute name");continue;case E.ATTRIB_NAME_SAW_WHITE:if("="===i)p.state=E.ATTRIB_VALUE;else{if(h(i))continue;I(p,"Attribute without value"),p.tag.attributes[p.attribName]="",p.attribValue="",T(p,"onattribute",{name:p.attribName,value:""}),p.attribName="",">"===i?F(p):w(l,i)?(p.attribName=i,p.state=E.ATTRIB_NAME):(I(p,"Invalid attribute name"),p.state=E.ATTRIB)}continue;case E.ATTRIB_VALUE:if(h(i))continue;f(i)?(p.q=i,p.state=E.ATTRIB_VALUE_QUOTED):(I(p,"Unquoted attribute value"),p.state=E.ATTRIB_VALUE_UNQUOTED,p.attribValue=i);continue;case E.ATTRIB_VALUE_QUOTED:if(i!==p.q){"&"===i?p.state=E.ATTRIB_VALUE_ENTITY_Q:p.attribValue+=i;continue}x(p),p.q="",p.state=E.ATTRIB_VALUE_CLOSED;continue;case E.ATTRIB_VALUE_CLOSED:h(i)?p.state=E.ATTRIB:">"===i?F(p):"/"===i?p.state=E.OPEN_TAG_SLASH:w(l,i)?(I(p,"No whitespace between attributes"),p.attribName=i,p.attribValue="",p.state=E.ATTRIB_NAME):I(p,"Invalid attribute name");continue;case E.ATTRIB_VALUE_UNQUOTED:if(!v(i)){"&"===i?p.state=E.ATTRIB_VALUE_ENTITY_U:p.attribValue+=i;continue}x(p),">"===i?F(p):p.state=E.ATTRIB;continue;case E.CLOSE_TAG:if(p.tagName)">"===i?V(p):w(m,i)?p.tagName+=i:p.script?(p.script+="</"+p.tagName,p.tagName="",p.state=E.SCRIPT):(h(i)||I(p,"Invalid tagname in closing tag"),p.state=E.CLOSE_TAG_SAW_WHITE);else{if(h(i))continue;g(l,i)?p.script?(p.script+="</"+i,p.state=E.SCRIPT):I(p,"Invalid tagname in closing tag."):p.tagName=i}continue;case E.CLOSE_TAG_SAW_WHITE:if(h(i))continue;">"===i?V(p):I(p,"Invalid characters in closing tag");continue;case E.TEXT_ENTITY:case E.ATTRIB_VALUE_ENTITY_Q:case E.ATTRIB_VALUE_ENTITY_U:var o,s;switch(p.state){case E.TEXT_ENTITY:o=E.TEXT,s="textNode";break;case E.ATTRIB_VALUE_ENTITY_Q:o=E.ATTRIB_VALUE_QUOTED,s="attribValue";break;case E.ATTRIB_VALUE_ENTITY_U:o=E.ATTRIB_VALUE_UNQUOTED,s="attribValue"}";"===i?(p[s]+=k(p),p.entity="",p.state=o):w(p.entity.length?c:u,i)?p.entity+=i:(I(p,"Invalid character in entity name"),p[s]+="&"+p.entity+i,p.entity="",p.state=o);continue;default:throw new Error(p,"Unknown state: "+p.state)}return p.position>=p.bufferCheckPosition&&function(a){for(var p=Math.max(e.MAX_BUFFER_LENGTH,10),d=0,i=0,r=t.length;i<r;i++){var n=a[t[i]].length;if(n>p)switch(t[i]){case"textNode":D(a);break;case"cdata":T(a,"oncdata",a.cdata),a.cdata="";break;case"script":T(a,"onscript",a.script),a.script="";break;default:C(a,"Max buffer length exceeded: "+t[i])}d=Math.max(d,n)}var o=e.MAX_BUFFER_LENGTH-d;a.bufferCheckPosition=o+a.position}(p),p},resume:function(){return this.error=null,this},close:function(){return this.write(null)},flush:function(){var e;D(e=this),""!==e.cdata&&(T(e,"oncdata",e.cdata),e.cdata=""),""!==e.script&&(T(e,"onscript",e.script),e.script="")}};try{a=p(2781).Stream}catch(e){a=function(){}}var i=e.EVENTS.filter((function(e){return"error"!==e&&"end"!==e}));function r(e,p){if(!(this instanceof r))return new r(e,p);a.apply(this),this._parser=new d(e,p),this.writable=!0,this.readable=!0;var t=this;this._parser.onend=function(){t.emit("end")},this._parser.onerror=function(e){t.emit("error",e),t._parser.error=null},this._decoder=null,i.forEach((function(e){Object.defineProperty(t,"on"+e,{get:function(){return t._parser["on"+e]},set:function(a){if(!a)return t.removeAllListeners(e),t._parser["on"+e]=a,a;t.on(e,a)},enumerable:!0,configurable:!1})}))}r.prototype=Object.create(a.prototype,{constructor:{value:r}}),r.prototype.write=function(e){if("function"==typeof Buffer&&"function"==typeof Buffer.isBuffer&&Buffer.isBuffer(e)){if(!this._decoder){var a=p(1576).StringDecoder;this._decoder=new a("utf8")}e=this._decoder.write(e)}return this._parser.write(e.toString()),this.emit("data",e),!0},r.prototype.end=function(e){return e&&e.length&&this.write(e),this._parser.end(),!0},r.prototype.on=function(e,p){var t=this;return t._parser["on"+e]||-1===i.indexOf(e)||(t._parser["on"+e]=function(){var a=1===arguments.length?[arguments[0]]:Array.apply(null,arguments);a.splice(0,0,e),t.emit.apply(t,a)}),a.prototype.on.call(t,e,p)};var n="http://www.w3.org/XML/1998/namespace",o="http://www.w3.org/2000/xmlns/",s={xml:n,xmlns:o},l=/[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/,m=/[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040.\d-]/,u=/[#:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/,c=/[#:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040.\d-]/;function h(e){return" "===e||"\n"===e||"\r"===e||"\t"===e}function f(e){return'"'===e||"'"===e}function v(e){return">"===e||h(e)}function w(e,a){return e.test(a)}function g(e,a){return!w(e,a)}var y,b,_,E=0;for(var N in e.STATE={BEGIN:E++,BEGIN_WHITESPACE:E++,TEXT:E++,TEXT_ENTITY:E++,OPEN_WAKA:E++,SGML_DECL:E++,SGML_DECL_QUOTED:E++,DOCTYPE:E++,DOCTYPE_QUOTED:E++,DOCTYPE_DTD:E++,DOCTYPE_DTD_QUOTED:E++,COMMENT_STARTING:E++,COMMENT:E++,COMMENT_ENDING:E++,COMMENT_ENDED:E++,CDATA:E++,CDATA_ENDING:E++,CDATA_ENDING_2:E++,PROC_INST:E++,PROC_INST_BODY:E++,PROC_INST_ENDING:E++,OPEN_TAG:E++,OPEN_TAG_SLASH:E++,ATTRIB:E++,ATTRIB_NAME:E++,ATTRIB_NAME_SAW_WHITE:E++,ATTRIB_VALUE:E++,ATTRIB_VALUE_QUOTED:E++,ATTRIB_VALUE_CLOSED:E++,ATTRIB_VALUE_UNQUOTED:E++,ATTRIB_VALUE_ENTITY_Q:E++,ATTRIB_VALUE_ENTITY_U:E++,CLOSE_TAG:E++,CLOSE_TAG_SAW_WHITE:E++,SCRIPT:E++,SCRIPT_ENDING:E++},e.XML_ENTITIES={amp:"&",gt:">",lt:"<",quot:'"',apos:"'"},e.ENTITIES={amp:"&",gt:">",lt:"<",quot:'"',apos:"'",AElig:198,Aacute:193,Acirc:194,Agrave:192,Aring:197,Atilde:195,Auml:196,Ccedil:199,ETH:208,Eacute:201,Ecirc:202,Egrave:200,Euml:203,Iacute:205,Icirc:206,Igrave:204,Iuml:207,Ntilde:209,Oacute:211,Ocirc:212,Ograve:210,Oslash:216,Otilde:213,Ouml:214,THORN:222,Uacute:218,Ucirc:219,Ugrave:217,Uuml:220,Yacute:221,aacute:225,acirc:226,aelig:230,agrave:224,aring:229,atilde:227,auml:228,ccedil:231,eacute:233,ecirc:234,egrave:232,eth:240,euml:235,iacute:237,icirc:238,igrave:236,iuml:239,ntilde:241,oacute:243,ocirc:244,ograve:242,oslash:248,otilde:245,ouml:246,szlig:223,thorn:254,uacute:250,ucirc:251,ugrave:249,uuml:252,yacute:253,yuml:255,copy:169,reg:174,nbsp:160,iexcl:161,cent:162,pound:163,curren:164,yen:165,brvbar:166,sect:167,uml:168,ordf:170,laquo:171,not:172,shy:173,macr:175,deg:176,plusmn:177,sup1:185,sup2:178,sup3:179,acute:180,micro:181,para:182,middot:183,cedil:184,ordm:186,raquo:187,frac14:188,frac12:189,frac34:190,iquest:191,times:215,divide:247,OElig:338,oelig:339,Scaron:352,scaron:353,Yuml:376,fnof:402,circ:710,tilde:732,Alpha:913,Beta:914,Gamma:915,Delta:916,Epsilon:917,Zeta:918,Eta:919,Theta:920,Iota:921,Kappa:922,Lambda:923,Mu:924,Nu:925,Xi:926,Omicron:927,Pi:928,Rho:929,Sigma:931,Tau:932,Upsilon:933,Phi:934,Chi:935,Psi:936,Omega:937,alpha:945,beta:946,gamma:947,delta:948,epsilon:949,zeta:950,eta:951,theta:952,iota:953,kappa:954,lambda:955,mu:956,nu:957,xi:958,omicron:959,pi:960,rho:961,sigmaf:962,sigma:963,tau:964,upsilon:965,phi:966,chi:967,psi:968,omega:969,thetasym:977,upsih:978,piv:982,ensp:8194,emsp:8195,thinsp:8201,zwnj:8204,zwj:8205,lrm:8206,rlm:8207,ndash:8211,mdash:8212,lsquo:8216,rsquo:8217,sbquo:8218,ldquo:8220,rdquo:8221,bdquo:8222,dagger:8224,Dagger:8225,bull:8226,hellip:8230,permil:8240,prime:8242,Prime:8243,lsaquo:8249,rsaquo:8250,oline:8254,frasl:8260,euro:8364,image:8465,weierp:8472,real:8476,trade:8482,alefsym:8501,larr:8592,uarr:8593,rarr:8594,darr:8595,harr:8596,crarr:8629,lArr:8656,uArr:8657,rArr:8658,dArr:8659,hArr:8660,forall:8704,part:8706,exist:8707,empty:8709,nabla:8711,isin:8712,notin:8713,ni:8715,prod:8719,sum:8721,minus:8722,lowast:8727,radic:8730,prop:8733,infin:8734,ang:8736,and:8743,or:8744,cap:8745,cup:8746,int:8747,there4:8756,sim:8764,cong:8773,asymp:8776,ne:8800,equiv:8801,le:8804,ge:8805,sub:8834,sup:8835,nsub:8836,sube:8838,supe:8839,oplus:8853,otimes:8855,perp:8869,sdot:8901,lceil:8968,rceil:8969,lfloor:8970,rfloor:8971,lang:9001,rang:9002,loz:9674,spades:9824,clubs:9827,hearts:9829,diams:9830},Object.keys(e.ENTITIES).forEach((function(a){var p=e.ENTITIES[a],t="number"==typeof p?String.fromCharCode(p):p;e.ENTITIES[a]=t})),e.STATE)e.STATE[e.STATE[N]]=N;function S(e,a,p){e[a]&&e[a](p)}function T(e,a,p){e.textNode&&D(e),S(e,a,p)}function D(e){e.textNode=A(e.opt,e.textNode),e.textNode&&S(e,"ontext",e.textNode),e.textNode=""}function A(e,a){return e.trim&&(a=a.trim()),e.normalize&&(a=a.replace(/\s+/g," ")),a}function C(e,a){return D(e),e.trackPosition&&(a+="\nLine: "+e.line+"\nColumn: "+e.column+"\nChar: "+e.c),a=new Error(a),e.error=a,S(e,"onerror",a),e}function O(e){return e.sawRoot&&!e.closedRoot&&I(e,"Unclosed root tag"),e.state!==E.BEGIN&&e.state!==E.BEGIN_WHITESPACE&&e.state!==E.TEXT&&C(e,"Unexpected end"),D(e),e.c="",e.closed=!0,S(e,"onend"),d.call(e,e.strict,e.opt),e}function I(e,a){if("object"!=typeof e||!(e instanceof d))throw new Error("bad call to strictFail");e.strict&&C(e,a)}function R(e){e.strict||(e.tagName=e.tagName[e.looseCase]());var a=e.tags[e.tags.length-1]||e,p=e.tag={name:e.tagName,attributes:{}};e.opt.xmlns&&(p.ns=a.ns),e.attribList.length=0,T(e,"onopentagstart",p)}function P(e,a){var p=e.indexOf(":")<0?["",e]:e.split(":"),t=p[0],d=p[1];return a&&"xmlns"===e&&(t="xmlns",d=""),{prefix:t,local:d}}function x(e){if(e.strict||(e.attribName=e.attribName[e.looseCase]()),-1!==e.attribList.indexOf(e.attribName)||e.tag.attributes.hasOwnProperty(e.attribName))e.attribName=e.attribValue="";else{if(e.opt.xmlns){var a=P(e.attribName,!0),p=a.prefix,t=a.local;if("xmlns"===p)if("xml"===t&&e.attribValue!==n)I(e,"xml: prefix must be bound to "+n+"\nActual: "+e.attribValue);else if("xmlns"===t&&e.attribValue!==o)I(e,"xmlns: prefix must be bound to "+o+"\nActual: "+e.attribValue);else{var d=e.tag,i=e.tags[e.tags.length-1]||e;d.ns===i.ns&&(d.ns=Object.create(i.ns)),d.ns[t]=e.attribValue}e.attribList.push([e.attribName,e.attribValue])}else e.tag.attributes[e.attribName]=e.attribValue,T(e,"onattribute",{name:e.attribName,value:e.attribValue});e.attribName=e.attribValue=""}}function F(e,a){if(e.opt.xmlns){var p=e.tag,t=P(e.tagName);p.prefix=t.prefix,p.local=t.local,p.uri=p.ns[t.prefix]||"",p.prefix&&!p.uri&&(I(e,"Unbound namespace prefix: "+JSON.stringify(e.tagName)),p.uri=t.prefix);var d=e.tags[e.tags.length-1]||e;p.ns&&d.ns!==p.ns&&Object.keys(p.ns).forEach((function(a){T(e,"onopennamespace",{prefix:a,uri:p.ns[a]})}));for(var i=0,r=e.attribList.length;i<r;i++){var n=e.attribList[i],o=n[0],s=n[1],l=P(o,!0),m=l.prefix,u=l.local,c=""===m?"":p.ns[m]||"",h={name:o,value:s,prefix:m,local:u,uri:c};m&&"xmlns"!==m&&!c&&(I(e,"Unbound namespace prefix: "+JSON.stringify(m)),h.uri=m),e.tag.attributes[o]=h,T(e,"onattribute",h)}e.attribList.length=0}e.tag.isSelfClosing=!!a,e.sawRoot=!0,e.tags.push(e.tag),T(e,"onopentag",e.tag),a||(e.noscript||"script"!==e.tagName.toLowerCase()?e.state=E.TEXT:e.state=E.SCRIPT,e.tag=null,e.tagName=""),e.attribName=e.attribValue="",e.attribList.length=0}function V(e){if(!e.tagName)return I(e,"Weird empty close tag."),e.textNode+="</>",void(e.state=E.TEXT);if(e.script){if("script"!==e.tagName)return e.script+="</"+e.tagName+">",e.tagName="",void(e.state=E.SCRIPT);T(e,"onscript",e.script),e.script=""}var a=e.tags.length,p=e.tagName;e.strict||(p=p[e.looseCase]());for(var t=p;a--&&e.tags[a].name!==t;)I(e,"Unexpected close tag");if(a<0)return I(e,"Unmatched closing tag: "+e.tagName),e.textNode+="</"+e.tagName+">",void(e.state=E.TEXT);e.tagName=p;for(var d=e.tags.length;d-- >a;){var i=e.tag=e.tags.pop();e.tagName=e.tag.name,T(e,"onclosetag",e.tagName);var r={};for(var n in i.ns)r[n]=i.ns[n];var o=e.tags[e.tags.length-1]||e;e.opt.xmlns&&i.ns!==o.ns&&Object.keys(i.ns).forEach((function(a){var p=i.ns[a];T(e,"onclosenamespace",{prefix:a,uri:p})}))}0===a&&(e.closedRoot=!0),e.tagName=e.attribValue=e.attribName="",e.attribList.length=0,e.state=E.TEXT}function k(e){var a,p=e.entity,t=p.toLowerCase(),d="";return e.ENTITIES[p]?e.ENTITIES[p]:e.ENTITIES[t]?e.ENTITIES[t]:("#"===(p=t).charAt(0)&&("x"===p.charAt(1)?(p=p.slice(2),d=(a=parseInt(p,16)).toString(16)):(p=p.slice(1),d=(a=parseInt(p,10)).toString(10))),p=p.replace(/^0+/,""),isNaN(a)||d.toLowerCase()!==p?(I(e,"Invalid character entity"),"&"+e.entity+";"):String.fromCodePoint(a))}function U(e,a){"<"===a?(e.state=E.OPEN_WAKA,e.startTagPosition=e.position):h(a)||(I(e,"Non-whitespace before first tag."),e.textNode=a,e.state=E.TEXT)}function L(e,a){var p="";return a<e.length&&(p=e.charAt(a)),p}E=e.STATE,String.fromCodePoint||(y=String.fromCharCode,b=Math.floor,_=function(){var e,a,p=16384,t=[],d=-1,i=arguments.length;if(!i)return"";for(var r="";++d<i;){var n=Number(arguments[d]);if(!isFinite(n)||n<0||n>1114111||b(n)!==n)throw RangeError("Invalid code point: "+n);n<=65535?t.push(n):(e=55296+((n-=65536)>>10),a=n%1024+56320,t.push(e,a)),(d+1===i||t.length>p)&&(r+=y.apply(null,t),t.length=0)}return r},Object.defineProperty?Object.defineProperty(String,"fromCodePoint",{value:_,configurable:!0,writable:!0}):String.fromCodePoint=_)}(a)},2257:(e,a,p)=>{const t=Symbol("SemVer ANY");class d{static get ANY(){return t}constructor(e,a){if(a=i(a),e instanceof d){if(e.loose===!!a.loose)return e;e=e.value}s("comparator",e,a),this.options=a,this.loose=!!a.loose,this.parse(e),this.semver===t?this.value="":this.value=this.operator+this.semver.version,s("comp",this)}parse(e){const a=this.options.loose?r[n.COMPARATORLOOSE]:r[n.COMPARATOR],p=e.match(a);if(!p)throw new TypeError(`Invalid comparator: ${e}`);this.operator=void 0!==p[1]?p[1]:"","="===this.operator&&(this.operator=""),p[2]?this.semver=new l(p[2],this.options.loose):this.semver=t}toString(){return this.value}test(e){if(s("Comparator.test",e,this.options.loose),this.semver===t||e===t)return!0;if("string"==typeof e)try{e=new l(e,this.options)}catch(e){return!1}return o(e,this.operator,this.semver,this.options)}intersects(e,a){if(!(e instanceof d))throw new TypeError("a Comparator is required");if(a&&"object"==typeof a||(a={loose:!!a,includePrerelease:!1}),""===this.operator)return""===this.value||new m(e.value,a).test(this.value);if(""===e.operator)return""===e.value||new m(this.value,a).test(e.semver);const p=!(">="!==this.operator&&">"!==this.operator||">="!==e.operator&&">"!==e.operator),t=!("<="!==this.operator&&"<"!==this.operator||"<="!==e.operator&&"<"!==e.operator),i=this.semver.version===e.semver.version,r=!(">="!==this.operator&&"<="!==this.operator||">="!==e.operator&&"<="!==e.operator),n=o(this.semver,"<",e.semver,a)&&(">="===this.operator||">"===this.operator)&&("<="===e.operator||"<"===e.operator),s=o(this.semver,">",e.semver,a)&&("<="===this.operator||"<"===this.operator)&&(">="===e.operator||">"===e.operator);return p||t||i&&r||n||s}}e.exports=d;const i=p(2893),{re:r,t:n}=p(5765),o=p(7539),s=p(4225),l=p(6376),m=p(6902)},6902:(e,a,p)=>{class t{constructor(e,a){if(a=i(a),e instanceof t)return e.loose===!!a.loose&&e.includePrerelease===!!a.includePrerelease?e:new t(e.raw,a);if(e instanceof r)return this.raw=e.value,this.set=[[e]],this.format(),this;if(this.options=a,this.loose=!!a.loose,this.includePrerelease=!!a.includePrerelease,this.raw=e,this.set=e.split("||").map((e=>this.parseRange(e.trim()))).filter((e=>e.length)),!this.set.length)throw new TypeError(`Invalid SemVer Range: ${e}`);if(this.set.length>1){const e=this.set[0];if(this.set=this.set.filter((e=>!h(e[0]))),0===this.set.length)this.set=[e];else if(this.set.length>1)for(const e of this.set)if(1===e.length&&f(e[0])){this.set=[e];break}}this.format()}format(){return this.range=this.set.map((e=>e.join(" ").trim())).join("||").trim(),this.range}toString(){return this.range}parseRange(e){e=e.trim();const a=`parseRange:${Object.keys(this.options).join(",")}:${e}`,p=d.get(a);if(p)return p;const t=this.options.loose,i=t?s[l.HYPHENRANGELOOSE]:s[l.HYPHENRANGE];e=e.replace(i,A(this.options.includePrerelease)),n("hyphen replace",e),e=e.replace(s[l.COMPARATORTRIM],m),n("comparator trim",e);let o=(e=(e=(e=e.replace(s[l.TILDETRIM],u)).replace(s[l.CARETTRIM],c)).split(/\s+/).join(" ")).split(" ").map((e=>w(e,this.options))).join(" ").split(/\s+/).map((e=>D(e,this.options)));t&&(o=o.filter((e=>(n("loose invalid filter",e,this.options),!!e.match(s[l.COMPARATORLOOSE]))))),n("range list",o);const f=new Map,v=o.map((e=>new r(e,this.options)));for(const e of v){if(h(e))return[e];f.set(e.value,e)}f.size>1&&f.has("")&&f.delete("");const g=[...f.values()];return d.set(a,g),g}intersects(e,a){if(!(e instanceof t))throw new TypeError("a Range is required");return this.set.some((p=>v(p,a)&&e.set.some((e=>v(e,a)&&p.every((p=>e.every((e=>p.intersects(e,a)))))))))}test(e){if(!e)return!1;if("string"==typeof e)try{e=new o(e,this.options)}catch(e){return!1}for(let a=0;a<this.set.length;a++)if(C(this.set[a],e,this.options))return!0;return!1}}e.exports=t;const d=new(p(9593))({max:1e3}),i=p(2893),r=p(2257),n=p(4225),o=p(6376),{re:s,t:l,comparatorTrimReplace:m,tildeTrimReplace:u,caretTrimReplace:c}=p(5765),h=e=>"<0.0.0-0"===e.value,f=e=>""===e.value,v=(e,a)=>{let p=!0;const t=e.slice();let d=t.pop();for(;p&&t.length;)p=t.every((e=>d.intersects(e,a))),d=t.pop();return p},w=(e,a)=>(n("comp",e,a),e=_(e,a),n("caret",e),e=y(e,a),n("tildes",e),e=N(e,a),n("xrange",e),e=T(e,a),n("stars",e),e),g=e=>!e||"x"===e.toLowerCase()||"*"===e,y=(e,a)=>e.trim().split(/\s+/).map((e=>b(e,a))).join(" "),b=(e,a)=>{const p=a.loose?s[l.TILDELOOSE]:s[l.TILDE];return e.replace(p,((a,p,t,d,i)=>{let r;return n("tilde",e,a,p,t,d,i),g(p)?r="":g(t)?r=`>=${p}.0.0 <${+p+1}.0.0-0`:g(d)?r=`>=${p}.${t}.0 <${p}.${+t+1}.0-0`:i?(n("replaceTilde pr",i),r=`>=${p}.${t}.${d}-${i} <${p}.${+t+1}.0-0`):r=`>=${p}.${t}.${d} <${p}.${+t+1}.0-0`,n("tilde return",r),r}))},_=(e,a)=>e.trim().split(/\s+/).map((e=>E(e,a))).join(" "),E=(e,a)=>{n("caret",e,a);const p=a.loose?s[l.CARETLOOSE]:s[l.CARET],t=a.includePrerelease?"-0":"";return e.replace(p,((a,p,d,i,r)=>{let o;return n("caret",e,a,p,d,i,r),g(p)?o="":g(d)?o=`>=${p}.0.0${t} <${+p+1}.0.0-0`:g(i)?o="0"===p?`>=${p}.${d}.0${t} <${p}.${+d+1}.0-0`:`>=${p}.${d}.0${t} <${+p+1}.0.0-0`:r?(n("replaceCaret pr",r),o="0"===p?"0"===d?`>=${p}.${d}.${i}-${r} <${p}.${d}.${+i+1}-0`:`>=${p}.${d}.${i}-${r} <${p}.${+d+1}.0-0`:`>=${p}.${d}.${i}-${r} <${+p+1}.0.0-0`):(n("no pr"),o="0"===p?"0"===d?`>=${p}.${d}.${i}${t} <${p}.${d}.${+i+1}-0`:`>=${p}.${d}.${i}${t} <${p}.${+d+1}.0-0`:`>=${p}.${d}.${i} <${+p+1}.0.0-0`),n("caret return",o),o}))},N=(e,a)=>(n("replaceXRanges",e,a),e.split(/\s+/).map((e=>S(e,a))).join(" ")),S=(e,a)=>{e=e.trim();const p=a.loose?s[l.XRANGELOOSE]:s[l.XRANGE];return e.replace(p,((p,t,d,i,r,o)=>{n("xRange",e,p,t,d,i,r,o);const s=g(d),l=s||g(i),m=l||g(r),u=m;return"="===t&&u&&(t=""),o=a.includePrerelease?"-0":"",s?p=">"===t||"<"===t?"<0.0.0-0":"*":t&&u?(l&&(i=0),r=0,">"===t?(t=">=",l?(d=+d+1,i=0,r=0):(i=+i+1,r=0)):"<="===t&&(t="<",l?d=+d+1:i=+i+1),"<"===t&&(o="-0"),p=`${t+d}.${i}.${r}${o}`):l?p=`>=${d}.0.0${o} <${+d+1}.0.0-0`:m&&(p=`>=${d}.${i}.0${o} <${d}.${+i+1}.0-0`),n("xRange return",p),p}))},T=(e,a)=>(n("replaceStars",e,a),e.trim().replace(s[l.STAR],"")),D=(e,a)=>(n("replaceGTE0",e,a),e.trim().replace(s[a.includePrerelease?l.GTE0PRE:l.GTE0],"")),A=e=>(a,p,t,d,i,r,n,o,s,l,m,u,c)=>`${p=g(t)?"":g(d)?`>=${t}.0.0${e?"-0":""}`:g(i)?`>=${t}.${d}.0${e?"-0":""}`:r?`>=${p}`:`>=${p}${e?"-0":""}`} ${o=g(s)?"":g(l)?`<${+s+1}.0.0-0`:g(m)?`<${s}.${+l+1}.0-0`:u?`<=${s}.${l}.${m}-${u}`:e?`<${s}.${l}.${+m+1}-0`:`<=${o}`}`.trim(),C=(e,a,p)=>{for(let p=0;p<e.length;p++)if(!e[p].test(a))return!1;if(a.prerelease.length&&!p.includePrerelease){for(let p=0;p<e.length;p++)if(n(e[p].semver),e[p].semver!==r.ANY&&e[p].semver.prerelease.length>0){const t=e[p].semver;if(t.major===a.major&&t.minor===a.minor&&t.patch===a.patch)return!0}return!1}return!0}},6376:(e,a,p)=>{const t=p(4225),{MAX_LENGTH:d,MAX_SAFE_INTEGER:i}=p(3295),{re:r,t:n}=p(5765),o=p(2893),{compareIdentifiers:s}=p(6742);class l{constructor(e,a){if(a=o(a),e instanceof l){if(e.loose===!!a.loose&&e.includePrerelease===!!a.includePrerelease)return e;e=e.version}else if("string"!=typeof e)throw new TypeError(`Invalid Version: ${e}`);if(e.length>d)throw new TypeError(`version is longer than ${d} characters`);t("SemVer",e,a),this.options=a,this.loose=!!a.loose,this.includePrerelease=!!a.includePrerelease;const p=e.trim().match(a.loose?r[n.LOOSE]:r[n.FULL]);if(!p)throw new TypeError(`Invalid Version: ${e}`);if(this.raw=e,this.major=+p[1],this.minor=+p[2],this.patch=+p[3],this.major>i||this.major<0)throw new TypeError("Invalid major version");if(this.minor>i||this.minor<0)throw new TypeError("Invalid minor version");if(this.patch>i||this.patch<0)throw new TypeError("Invalid patch version");p[4]?this.prerelease=p[4].split(".").map((e=>{if(/^[0-9]+$/.test(e)){const a=+e;if(a>=0&&a<i)return a}return e})):this.prerelease=[],this.build=p[5]?p[5].split("."):[],this.format()}format(){return this.version=`${this.major}.${this.minor}.${this.patch}`,this.prerelease.length&&(this.version+=`-${this.prerelease.join(".")}`),this.version}toString(){return this.version}compare(e){if(t("SemVer.compare",this.version,this.options,e),!(e instanceof l)){if("string"==typeof e&&e===this.version)return 0;e=new l(e,this.options)}return e.version===this.version?0:this.compareMain(e)||this.comparePre(e)}compareMain(e){return e instanceof l||(e=new l(e,this.options)),s(this.major,e.major)||s(this.minor,e.minor)||s(this.patch,e.patch)}comparePre(e){if(e instanceof l||(e=new l(e,this.options)),this.prerelease.length&&!e.prerelease.length)return-1;if(!this.prerelease.length&&e.prerelease.length)return 1;if(!this.prerelease.length&&!e.prerelease.length)return 0;let a=0;do{const p=this.prerelease[a],d=e.prerelease[a];if(t("prerelease compare",a,p,d),void 0===p&&void 0===d)return 0;if(void 0===d)return 1;if(void 0===p)return-1;if(p!==d)return s(p,d)}while(++a)}compareBuild(e){e instanceof l||(e=new l(e,this.options));let a=0;do{const p=this.build[a],d=e.build[a];if(t("prerelease compare",a,p,d),void 0===p&&void 0===d)return 0;if(void 0===d)return 1;if(void 0===p)return-1;if(p!==d)return s(p,d)}while(++a)}inc(e,a){switch(e){case"premajor":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc("pre",a);break;case"preminor":this.prerelease.length=0,this.patch=0,this.minor++,this.inc("pre",a);break;case"prepatch":this.prerelease.length=0,this.inc("patch",a),this.inc("pre",a);break;case"prerelease":0===this.prerelease.length&&this.inc("patch",a),this.inc("pre",a);break;case"major":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case"minor":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case"patch":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case"pre":if(0===this.prerelease.length)this.prerelease=[0];else{let e=this.prerelease.length;for(;--e>=0;)"number"==typeof this.prerelease[e]&&(this.prerelease[e]++,e=-2);-1===e&&this.prerelease.push(0)}a&&(0===s(this.prerelease[0],a)?isNaN(this.prerelease[1])&&(this.prerelease=[a,0]):this.prerelease=[a,0]);break;default:throw new Error(`invalid increment argument: ${e}`)}return this.format(),this.raw=this.version,this}}e.exports=l},3507:(e,a,p)=>{const t=p(3959);e.exports=(e,a)=>{const p=t(e.trim().replace(/^[=v]+/,""),a);return p?p.version:null}},7539:(e,a,p)=>{const t=p(8718),d=p(1194),i=p(1312),r=p(5903),n=p(1544),o=p(2056);e.exports=(e,a,p,s)=>{switch(a){case"===":return"object"==typeof e&&(e=e.version),"object"==typeof p&&(p=p.version),e===p;case"!==":return"object"==typeof e&&(e=e.version),"object"==typeof p&&(p=p.version),e!==p;case"":case"=":case"==":return t(e,p,s);case"!=":return d(e,p,s);case">":return i(e,p,s);case">=":return r(e,p,s);case"<":return n(e,p,s);case"<=":return o(e,p,s);default:throw new TypeError(`Invalid operator: ${a}`)}}},9038:(e,a,p)=>{const t=p(6376),d=p(3959),{re:i,t:r}=p(5765);e.exports=(e,a)=>{if(e instanceof t)return e;if("number"==typeof e&&(e=String(e)),"string"!=typeof e)return null;let p=null;if((a=a||{}).rtl){let a;for(;(a=i[r.COERCERTL].exec(e))&&(!p||p.index+p[0].length!==e.length);)p&&a.index+a[0].length===p.index+p[0].length||(p=a),i[r.COERCERTL].lastIndex=a.index+a[1].length+a[2].length;i[r.COERCERTL].lastIndex=-1}else p=e.match(i[r.COERCE]);return null===p?null:d(`${p[2]}.${p[3]||"0"}.${p[4]||"0"}`,a)}},8880:(e,a,p)=>{const t=p(6376);e.exports=(e,a,p)=>{const d=new t(e,p),i=new t(a,p);return d.compare(i)||d.compareBuild(i)}},7880:(e,a,p)=>{const t=p(6269);e.exports=(e,a)=>t(e,a,!0)},6269:(e,a,p)=>{const t=p(6376);e.exports=(e,a,p)=>new t(e,p).compare(new t(a,p))},2378:(e,a,p)=>{const t=p(3959),d=p(8718);e.exports=(e,a)=>{if(d(e,a))return null;{const p=t(e),d=t(a),i=p.prerelease.length||d.prerelease.length,r=i?"pre":"",n=i?"prerelease":"";for(const e in p)if(("major"===e||"minor"===e||"patch"===e)&&p[e]!==d[e])return r+e;return n}}},8718:(e,a,p)=>{const t=p(6269);e.exports=(e,a,p)=>0===t(e,a,p)},1312:(e,a,p)=>{const t=p(6269);e.exports=(e,a,p)=>t(e,a,p)>0},5903:(e,a,p)=>{const t=p(6269);e.exports=(e,a,p)=>t(e,a,p)>=0},253:(e,a,p)=>{const t=p(6376);e.exports=(e,a,p,d)=>{"string"==typeof p&&(d=p,p=void 0);try{return new t(e instanceof t?e.version:e,p).inc(a,d).version}catch(e){return null}}},1544:(e,a,p)=>{const t=p(6269);e.exports=(e,a,p)=>t(e,a,p)<0},2056:(e,a,p)=>{const t=p(6269);e.exports=(e,a,p)=>t(e,a,p)<=0},8679:(e,a,p)=>{const t=p(6376);e.exports=(e,a)=>new t(e,a).major},7789:(e,a,p)=>{const t=p(6376);e.exports=(e,a)=>new t(e,a).minor},1194:(e,a,p)=>{const t=p(6269);e.exports=(e,a,p)=>0!==t(e,a,p)},3959:(e,a,p)=>{const{MAX_LENGTH:t}=p(3295),{re:d,t:i}=p(5765),r=p(6376),n=p(2893);e.exports=(e,a)=>{if(a=n(a),e instanceof r)return e;if("string"!=typeof e)return null;if(e.length>t)return null;if(!(a.loose?d[i.LOOSE]:d[i.FULL]).test(e))return null;try{return new r(e,a)}catch(e){return null}}},2358:(e,a,p)=>{const t=p(6376);e.exports=(e,a)=>new t(e,a).patch},7559:(e,a,p)=>{const t=p(3959);e.exports=(e,a)=>{const p=t(e,a);return p&&p.prerelease.length?p.prerelease:null}},9795:(e,a,p)=>{const t=p(6269);e.exports=(e,a,p)=>t(a,e,p)},3657:(e,a,p)=>{const t=p(8880);e.exports=(e,a)=>e.sort(((e,p)=>t(p,e,a)))},5712:(e,a,p)=>{const t=p(6902);e.exports=(e,a,p)=>{try{a=new t(a,p)}catch(e){return!1}return a.test(e)}},1100:(e,a,p)=>{const t=p(8880);e.exports=(e,a)=>e.sort(((e,p)=>t(e,p,a)))},6397:(e,a,p)=>{const t=p(3959);e.exports=(e,a)=>{const p=t(e,a);return p?p.version:null}},1249:(e,a,p)=>{const t=p(5765),d=p(3295),i=p(6376),r=p(6742),n=p(3959),o=p(6397),s=p(3507),l=p(253),m=p(2378),u=p(8679),c=p(7789),h=p(2358),f=p(7559),v=p(6269),w=p(9795),g=p(7880),y=p(8880),b=p(1100),_=p(3657),E=p(1312),N=p(1544),S=p(8718),T=p(1194),D=p(5903),A=p(2056),C=p(7539),O=p(9038),I=p(2257),R=p(6902),P=p(5712),x=p(1042),F=p(5775),V=p(1657),k=p(5316),U=p(9042),L=p(6826),$=p(7606),j=p(32),B=p(2937),M=p(7908),q=p(799);e.exports={parse:n,valid:o,clean:s,inc:l,diff:m,major:u,minor:c,patch:h,prerelease:f,compare:v,rcompare:w,compareLoose:g,compareBuild:y,sort:b,rsort:_,gt:E,lt:N,eq:S,neq:T,gte:D,lte:A,cmp:C,coerce:O,Comparator:I,Range:R,satisfies:P,toComparators:x,maxSatisfying:F,minSatisfying:V,minVersion:k,validRange:U,outside:L,gtr:$,ltr:j,intersects:B,simplifyRange:M,subset:q,SemVer:i,re:t.re,src:t.src,tokens:t.t,SEMVER_SPEC_VERSION:d.SEMVER_SPEC_VERSION,compareIdentifiers:r.compareIdentifiers,rcompareIdentifiers:r.rcompareIdentifiers}},3295:e=>{const a=Number.MAX_SAFE_INTEGER||9007199254740991;e.exports={SEMVER_SPEC_VERSION:"2.0.0",MAX_LENGTH:256,MAX_SAFE_INTEGER:a,MAX_SAFE_COMPONENT_LENGTH:16}},4225:e=>{const a="object"==typeof process&&process.env&&process.env.NODE_DEBUG&&/\bsemver\b/i.test(process.env.NODE_DEBUG)?(...e)=>console.error("SEMVER",...e):()=>{};e.exports=a},6742:e=>{const a=/^[0-9]+$/,p=(e,p)=>{const t=a.test(e),d=a.test(p);return t&&d&&(e=+e,p=+p),e===p?0:t&&!d?-1:d&&!t?1:e<p?-1:1};e.exports={compareIdentifiers:p,rcompareIdentifiers:(e,a)=>p(a,e)}},2893:e=>{const a=["includePrerelease","loose","rtl"];e.exports=e=>e?"object"!=typeof e?{loose:!0}:a.filter((a=>e[a])).reduce(((e,a)=>(e[a]=!0,e)),{}):{}},5765:(e,a,p)=>{const{MAX_SAFE_COMPONENT_LENGTH:t}=p(3295),d=p(4225),i=(a=e.exports={}).re=[],r=a.src=[],n=a.t={};let o=0;const s=(e,a,p)=>{const t=o++;d(e,t,a),n[e]=t,r[t]=a,i[t]=new RegExp(a,p?"g":void 0)};s("NUMERICIDENTIFIER","0|[1-9]\\d*"),s("NUMERICIDENTIFIERLOOSE","[0-9]+"),s("NONNUMERICIDENTIFIER","\\d*[a-zA-Z-][a-zA-Z0-9-]*"),s("MAINVERSION",`(${r[n.NUMERICIDENTIFIER]})\\.(${r[n.NUMERICIDENTIFIER]})\\.(${r[n.NUMERICIDENTIFIER]})`),s("MAINVERSIONLOOSE",`(${r[n.NUMERICIDENTIFIERLOOSE]})\\.(${r[n.NUMERICIDENTIFIERLOOSE]})\\.(${r[n.NUMERICIDENTIFIERLOOSE]})`),s("PRERELEASEIDENTIFIER",`(?:${r[n.NUMERICIDENTIFIER]}|${r[n.NONNUMERICIDENTIFIER]})`),s("PRERELEASEIDENTIFIERLOOSE",`(?:${r[n.NUMERICIDENTIFIERLOOSE]}|${r[n.NONNUMERICIDENTIFIER]})`),s("PRERELEASE",`(?:-(${r[n.PRERELEASEIDENTIFIER]}(?:\\.${r[n.PRERELEASEIDENTIFIER]})*))`),s("PRERELEASELOOSE",`(?:-?(${r[n.PRERELEASEIDENTIFIERLOOSE]}(?:\\.${r[n.PRERELEASEIDENTIFIERLOOSE]})*))`),s("BUILDIDENTIFIER","[0-9A-Za-z-]+"),s("BUILD",`(?:\\+(${r[n.BUILDIDENTIFIER]}(?:\\.${r[n.BUILDIDENTIFIER]})*))`),s("FULLPLAIN",`v?${r[n.MAINVERSION]}${r[n.PRERELEASE]}?${r[n.BUILD]}?`),s("FULL",`^${r[n.FULLPLAIN]}$`),s("LOOSEPLAIN",`[v=\\s]*${r[n.MAINVERSIONLOOSE]}${r[n.PRERELEASELOOSE]}?${r[n.BUILD]}?`),s("LOOSE",`^${r[n.LOOSEPLAIN]}$`),s("GTLT","((?:<|>)?=?)"),s("XRANGEIDENTIFIERLOOSE",`${r[n.NUMERICIDENTIFIERLOOSE]}|x|X|\\*`),s("XRANGEIDENTIFIER",`${r[n.NUMERICIDENTIFIER]}|x|X|\\*`),s("XRANGEPLAIN",`[v=\\s]*(${r[n.XRANGEIDENTIFIER]})(?:\\.(${r[n.XRANGEIDENTIFIER]})(?:\\.(${r[n.XRANGEIDENTIFIER]})(?:${r[n.PRERELEASE]})?${r[n.BUILD]}?)?)?`),s("XRANGEPLAINLOOSE",`[v=\\s]*(${r[n.XRANGEIDENTIFIERLOOSE]})(?:\\.(${r[n.XRANGEIDENTIFIERLOOSE]})(?:\\.(${r[n.XRANGEIDENTIFIERLOOSE]})(?:${r[n.PRERELEASELOOSE]})?${r[n.BUILD]}?)?)?`),s("XRANGE",`^${r[n.GTLT]}\\s*${r[n.XRANGEPLAIN]}$`),s("XRANGELOOSE",`^${r[n.GTLT]}\\s*${r[n.XRANGEPLAINLOOSE]}$`),s("COERCE",`(^|[^\\d])(\\d{1,${t}})(?:\\.(\\d{1,${t}}))?(?:\\.(\\d{1,${t}}))?(?:$|[^\\d])`),s("COERCERTL",r[n.COERCE],!0),s("LONETILDE","(?:~>?)"),s("TILDETRIM",`(\\s*)${r[n.LONETILDE]}\\s+`,!0),a.tildeTrimReplace="$1~",s("TILDE",`^${r[n.LONETILDE]}${r[n.XRANGEPLAIN]}$`),s("TILDELOOSE",`^${r[n.LONETILDE]}${r[n.XRANGEPLAINLOOSE]}$`),s("LONECARET","(?:\\^)"),s("CARETTRIM",`(\\s*)${r[n.LONECARET]}\\s+`,!0),a.caretTrimReplace="$1^",s("CARET",`^${r[n.LONECARET]}${r[n.XRANGEPLAIN]}$`),s("CARETLOOSE",`^${r[n.LONECARET]}${r[n.XRANGEPLAINLOOSE]}$`),s("COMPARATORLOOSE",`^${r[n.GTLT]}\\s*(${r[n.LOOSEPLAIN]})$|^$`),s("COMPARATOR",`^${r[n.GTLT]}\\s*(${r[n.FULLPLAIN]})$|^$`),s("COMPARATORTRIM",`(\\s*)${r[n.GTLT]}\\s*(${r[n.LOOSEPLAIN]}|${r[n.XRANGEPLAIN]})`,!0),a.comparatorTrimReplace="$1$2$3",s("HYPHENRANGE",`^\\s*(${r[n.XRANGEPLAIN]})\\s+-\\s+(${r[n.XRANGEPLAIN]})\\s*$`),s("HYPHENRANGELOOSE",`^\\s*(${r[n.XRANGEPLAINLOOSE]})\\s+-\\s+(${r[n.XRANGEPLAINLOOSE]})\\s*$`),s("STAR","(<|>)?=?\\s*\\*"),s("GTE0","^\\s*>=\\s*0\\.0\\.0\\s*$"),s("GTE0PRE","^\\s*>=\\s*0\\.0\\.0-0\\s*$")},7606:(e,a,p)=>{const t=p(6826);e.exports=(e,a,p)=>t(e,a,">",p)},2937:(e,a,p)=>{const t=p(6902);e.exports=(e,a,p)=>(e=new t(e,p),a=new t(a,p),e.intersects(a))},32:(e,a,p)=>{const t=p(6826);e.exports=(e,a,p)=>t(e,a,"<",p)},5775:(e,a,p)=>{const t=p(6376),d=p(6902);e.exports=(e,a,p)=>{let i=null,r=null,n=null;try{n=new d(a,p)}catch(e){return null}return e.forEach((e=>{n.test(e)&&(i&&-1!==r.compare(e)||(i=e,r=new t(i,p)))})),i}},1657:(e,a,p)=>{const t=p(6376),d=p(6902);e.exports=(e,a,p)=>{let i=null,r=null,n=null;try{n=new d(a,p)}catch(e){return null}return e.forEach((e=>{n.test(e)&&(i&&1!==r.compare(e)||(i=e,r=new t(i,p)))})),i}},5316:(e,a,p)=>{const t=p(6376),d=p(6902),i=p(1312);e.exports=(e,a)=>{e=new d(e,a);let p=new t("0.0.0");if(e.test(p))return p;if(p=new t("0.0.0-0"),e.test(p))return p;p=null;for(let a=0;a<e.set.length;++a){const d=e.set[a];let r=null;d.forEach((e=>{const a=new t(e.semver.version);switch(e.operator){case">":0===a.prerelease.length?a.patch++:a.prerelease.push(0),a.raw=a.format();case"":case">=":r&&!i(a,r)||(r=a);break;case"<":case"<=":break;default:throw new Error(`Unexpected operation: ${e.operator}`)}})),!r||p&&!i(p,r)||(p=r)}return p&&e.test(p)?p:null}},6826:(e,a,p)=>{const t=p(6376),d=p(2257),{ANY:i}=d,r=p(6902),n=p(5712),o=p(1312),s=p(1544),l=p(2056),m=p(5903);e.exports=(e,a,p,u)=>{let c,h,f,v,w;switch(e=new t(e,u),a=new r(a,u),p){case">":c=o,h=l,f=s,v=">",w=">=";break;case"<":c=s,h=m,f=o,v="<",w="<=";break;default:throw new TypeError('Must provide a hilo val of "<" or ">"')}if(n(e,a,u))return!1;for(let p=0;p<a.set.length;++p){const t=a.set[p];let r=null,n=null;if(t.forEach((e=>{e.semver===i&&(e=new d(">=0.0.0")),r=r||e,n=n||e,c(e.semver,r.semver,u)?r=e:f(e.semver,n.semver,u)&&(n=e)})),r.operator===v||r.operator===w)return!1;if((!n.operator||n.operator===v)&&h(e,n.semver))return!1;if(n.operator===w&&f(e,n.semver))return!1}return!0}},7908:(e,a,p)=>{const t=p(5712),d=p(6269);e.exports=(e,a,p)=>{const i=[];let r=null,n=null;const o=e.sort(((e,a)=>d(e,a,p)));for(const e of o)t(e,a,p)?(n=e,r||(r=e)):(n&&i.push([r,n]),n=null,r=null);r&&i.push([r,null]);const s=[];for(const[e,a]of i)e===a?s.push(e):a||e!==o[0]?a?e===o[0]?s.push(`<=${a}`):s.push(`${e} - ${a}`):s.push(`>=${e}`):s.push("*");const l=s.join(" || "),m="string"==typeof a.raw?a.raw:String(a);return l.length<m.length?l:a}},799:(e,a,p)=>{const t=p(6902),d=p(2257),{ANY:i}=d,r=p(5712),n=p(6269),o=(e,a,p)=>{if(e===a)return!0;if(1===e.length&&e[0].semver===i){if(1===a.length&&a[0].semver===i)return!0;e=p.includePrerelease?[new d(">=0.0.0-0")]:[new d(">=0.0.0")]}if(1===a.length&&a[0].semver===i){if(p.includePrerelease)return!0;a=[new d(">=0.0.0")]}const t=new Set;let o,m,u,c,h,f,v;for(const a of e)">"===a.operator||">="===a.operator?o=s(o,a,p):"<"===a.operator||"<="===a.operator?m=l(m,a,p):t.add(a.semver);if(t.size>1)return null;if(o&&m){if(u=n(o.semver,m.semver,p),u>0)return null;if(0===u&&(">="!==o.operator||"<="!==m.operator))return null}for(const e of t){if(o&&!r(e,String(o),p))return null;if(m&&!r(e,String(m),p))return null;for(const t of a)if(!r(e,String(t),p))return!1;return!0}let w=!(!m||p.includePrerelease||!m.semver.prerelease.length)&&m.semver,g=!(!o||p.includePrerelease||!o.semver.prerelease.length)&&o.semver;w&&1===w.prerelease.length&&"<"===m.operator&&0===w.prerelease[0]&&(w=!1);for(const e of a){if(v=v||">"===e.operator||">="===e.operator,f=f||"<"===e.operator||"<="===e.operator,o)if(g&&e.semver.prerelease&&e.semver.prerelease.length&&e.semver.major===g.major&&e.semver.minor===g.minor&&e.semver.patch===g.patch&&(g=!1),">"===e.operator||">="===e.operator){if(c=s(o,e,p),c===e&&c!==o)return!1}else if(">="===o.operator&&!r(o.semver,String(e),p))return!1;if(m)if(w&&e.semver.prerelease&&e.semver.prerelease.length&&e.semver.major===w.major&&e.semver.minor===w.minor&&e.semver.patch===w.patch&&(w=!1),"<"===e.operator||"<="===e.operator){if(h=l(m,e,p),h===e&&h!==m)return!1}else if("<="===m.operator&&!r(m.semver,String(e),p))return!1;if(!e.operator&&(m||o)&&0!==u)return!1}return!(o&&f&&!m&&0!==u||m&&v&&!o&&0!==u||g||w)},s=(e,a,p)=>{if(!e)return a;const t=n(e.semver,a.semver,p);return t>0?e:t<0||">"===a.operator&&">="===e.operator?a:e},l=(e,a,p)=>{if(!e)return a;const t=n(e.semver,a.semver,p);return t<0?e:t>0||"<"===a.operator&&"<="===e.operator?a:e};e.exports=(e,a,p={})=>{if(e===a)return!0;e=new t(e,p),a=new t(a,p);let d=!1;e:for(const t of e.set){for(const e of a.set){const a=o(t,e,p);if(d=d||null!==a,a)continue e}if(d)return!1}return!0}},1042:(e,a,p)=>{const t=p(6902);e.exports=(e,a)=>new t(e,a).set.map((e=>e.map((e=>e.value)).join(" ").trim().split(" ")))},9042:(e,a,p)=>{const t=p(6902);e.exports=(e,a)=>{try{return new t(e,a).range||"*"}catch(e){return null}}},2130:(e,a,p)=>{"use strict";const t=p(2037),d=p(6224),i=p(6560),{env:r}=process;let n;function o(e){return 0!==e&&{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3}}function s(e,a){if(0===n)return 0;if(i("color=16m")||i("color=full")||i("color=truecolor"))return 3;if(i("color=256"))return 2;if(e&&!a&&void 0===n)return 0;const p=n||0;if("dumb"===r.TERM)return p;if("win32"===process.platform){const e=t.release().split(".");return Number(e[0])>=10&&Number(e[2])>=10586?Number(e[2])>=14931?3:2:1}if("CI"in r)return["TRAVIS","CIRCLECI","APPVEYOR","GITLAB_CI","GITHUB_ACTIONS","BUILDKITE"].some((e=>e in r))||"codeship"===r.CI_NAME?1:p;if("TEAMCITY_VERSION"in r)return/^(9\.(0*[1-9]\d*)\.|\d{2,}\.)/.test(r.TEAMCITY_VERSION)?1:0;if("truecolor"===r.COLORTERM)return 3;if("TERM_PROGRAM"in r){const e=parseInt((r.TERM_PROGRAM_VERSION||"").split(".")[0],10);switch(r.TERM_PROGRAM){case"iTerm.app":return e>=3?3:2;case"Apple_Terminal":return 2}}return/-256(color)?$/i.test(r.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(r.TERM)||"COLORTERM"in r?1:p}i("no-color")||i("no-colors")||i("color=false")||i("color=never")?n=0:(i("color")||i("colors")||i("color=true")||i("color=always"))&&(n=1),"FORCE_COLOR"in r&&(n="true"===r.FORCE_COLOR?1:"false"===r.FORCE_COLOR?0:0===r.FORCE_COLOR.length?1:Math.min(parseInt(r.FORCE_COLOR,10),3)),e.exports={supportsColor:function(e){return o(s(e,e&&e.isTTY))},stdout:o(s(!0,d.isatty(1))),stderr:o(s(!0,d.isatty(2)))}},4742:(e,a,p)=>{"use strict";var t=p(5477),d=p(2020),i={TRANSITIONAL:0,NONTRANSITIONAL:1};function r(e){return e.split("\0").map((function(e){return e.normalize("NFC")})).join("\0")}function n(e){for(var a=0,p=d.length-1;a<=p;){var t=Math.floor((a+p)/2),i=d[t];if(i[0][0]<=e&&i[0][1]>=e)return i;i[0][0]>e?p=t-1:a=t+1}return null}var o=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g;function s(e){return e.replace(o,"_").length}var l=/[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;function m(e,a){"xn--"===e.substr(0,4)&&(e=t.toUnicode(e));var p=!1;(r(e)!==e||"-"===e[3]&&"-"===e[4]||"-"===e[0]||"-"===e[e.length-1]||-1!==e.indexOf(".")||0===e.search(l))&&(p=!0);for(var d=s(e),o=0;o<d;++o){var m=n(e.codePointAt(o));if(u===i.TRANSITIONAL&&"valid"!==m[1]||u===i.NONTRANSITIONAL&&"valid"!==m[1]&&"deviation"!==m[1]){p=!0;break}}return{label:e,error:p}}function u(e,a,p){var t=function(e,a,p){for(var t=!1,d="",r=s(e),o=0;o<r;++o){var l=e.codePointAt(o),m=n(l);switch(m[1]){case"disallowed":t=!0,d+=String.fromCodePoint(l);break;case"ignored":break;case"mapped":d+=String.fromCodePoint.apply(String,m[2]);break;case"deviation":d+=p===i.TRANSITIONAL?String.fromCodePoint.apply(String,m[2]):String.fromCodePoint(l);break;case"valid":d+=String.fromCodePoint(l);break;case"disallowed_STD3_mapped":a?(t=!0,d+=String.fromCodePoint(l)):d+=String.fromCodePoint.apply(String,m[2]);break;case"disallowed_STD3_valid":a&&(t=!0),d+=String.fromCodePoint(l)}}return{string:d,error:t}}(e,a,p);t.string=r(t.string);for(var d=t.string.split("."),o=0;o<d.length;++o)try{var l=m(d[o]);d[o]=l.label,t.error=t.error||l.error}catch(e){t.error=!0}return{string:d.join("."),error:t.error}}e.exports.toASCII=function(e,a,p,d){var i=u(e,a,p),r=i.string.split(".");if(r=r.map((function(e){try{return t.toASCII(e)}catch(a){return i.error=!0,e}})),d){var n=r.slice(0,r.length-1).join(".").length;(n.length>253||0===n.length)&&(i.error=!0);for(var o=0;o<r.length;++o)if(r.length>63||0===r.length){i.error=!0;break}}return i.error?null:r.join(".")},e.exports.toUnicode=function(e,a){var p=u(e,a,i.NONTRANSITIONAL);return{domain:p.string,error:p.error}},e.exports.PROCESSING_OPTIONS=i},993:e=>{"use strict";var a={};function p(e){return e<0?-1:1}function t(e,a){a.unsigned||--e;const t=a.unsigned?0:-Math.pow(2,e),d=Math.pow(2,e)-1,i=a.moduloBitLength?Math.pow(2,a.moduloBitLength):Math.pow(2,e),r=a.moduloBitLength?Math.pow(2,a.moduloBitLength-1):Math.pow(2,e-1);return function(e,n){n||(n={});let o=+e;if(n.enforceRange){if(!Number.isFinite(o))throw new TypeError("Argument is not a finite number");if(o=p(o)*Math.floor(Math.abs(o)),o<t||o>d)throw new TypeError("Argument is not in byte range");return o}if(!isNaN(o)&&n.clamp)return o=function(e){return e%1==.5&&0==(1&e)?Math.floor(e):Math.round(e)}(o),o<t&&(o=t),o>d&&(o=d),o;if(!Number.isFinite(o)||0===o)return 0;if(o=p(o)*Math.floor(Math.abs(o)),o%=i,!a.unsigned&&o>=r)return o-i;if(a.unsigned)if(o<0)o+=i;else if(-0===o)return 0;return o}}e.exports=a,a.void=function(){},a.boolean=function(e){return!!e},a.byte=t(8,{unsigned:!1}),a.octet=t(8,{unsigned:!0}),a.short=t(16,{unsigned:!1}),a["unsigned short"]=t(16,{unsigned:!0}),a.long=t(32,{unsigned:!1}),a["unsigned long"]=t(32,{unsigned:!0}),a["long long"]=t(32,{unsigned:!1,moduloBitLength:64}),a["unsigned long long"]=t(32,{unsigned:!0,moduloBitLength:64}),a.double=function(e){const a=+e;if(!Number.isFinite(a))throw new TypeError("Argument is not a finite floating-point value");return a},a["unrestricted double"]=function(e){const a=+e;if(isNaN(a))throw new TypeError("Argument is NaN");return a},a.float=a.double,a["unrestricted float"]=a["unrestricted double"],a.DOMString=function(e,a){return a||(a={}),a.treatNullAsEmptyString&&null===e?"":String(e)},a.ByteString=function(e,a){const p=String(e);let t;for(let e=0;void 0!==(t=p.codePointAt(e));++e)if(t>255)throw new TypeError("Argument is not a valid bytestring");return p},a.USVString=function(e){const a=String(e),p=a.length,t=[];for(let e=0;e<p;++e){const d=a.charCodeAt(e);if(d<55296||d>57343)t.push(String.fromCodePoint(d));else if(56320<=d&&d<=57343)t.push(String.fromCodePoint(65533));else if(e===p-1)t.push(String.fromCodePoint(65533));else{const p=a.charCodeAt(e+1);if(56320<=p&&p<=57343){const a=1023&d,i=1023&p;t.push(String.fromCodePoint(65536+1024*a+i)),++e}else t.push(String.fromCodePoint(65533))}}return t.join("")},a.Date=function(e,a){if(!(e instanceof Date))throw new TypeError("Argument is not a Date object");if(!isNaN(e))return e},a.RegExp=function(e,a){return e instanceof RegExp||(e=new RegExp(e)),e}},9718:(e,a,p)=>{"use strict";const t=p(5341);a.implementation=class{constructor(e){const a=e[0],p=e[1];let d=null;if(void 0!==p&&(d=t.basicURLParse(p),"failure"===d))throw new TypeError("Invalid base URL");const i=t.basicURLParse(a,{baseURL:d});if("failure"===i)throw new TypeError("Invalid URL");this._url=i}get href(){return t.serializeURL(this._url)}set href(e){const a=t.basicURLParse(e);if("failure"===a)throw new TypeError("Invalid URL");this._url=a}get origin(){return t.serializeURLOrigin(this._url)}get protocol(){return this._url.scheme+":"}set protocol(e){t.basicURLParse(e+":",{url:this._url,stateOverride:"scheme start"})}get username(){return this._url.username}set username(e){t.cannotHaveAUsernamePasswordPort(this._url)||t.setTheUsername(this._url,e)}get password(){return this._url.password}set password(e){t.cannotHaveAUsernamePasswordPort(this._url)||t.setThePassword(this._url,e)}get host(){const e=this._url;return null===e.host?"":null===e.port?t.serializeHost(e.host):t.serializeHost(e.host)+":"+t.serializeInteger(e.port)}set host(e){this._url.cannotBeABaseURL||t.basicURLParse(e,{url:this._url,stateOverride:"host"})}get hostname(){return null===this._url.host?"":t.serializeHost(this._url.host)}set hostname(e){this._url.cannotBeABaseURL||t.basicURLParse(e,{url:this._url,stateOverride:"hostname"})}get port(){return null===this._url.port?"":t.serializeInteger(this._url.port)}set port(e){t.cannotHaveAUsernamePasswordPort(this._url)||(""===e?this._url.port=null:t.basicURLParse(e,{url:this._url,stateOverride:"port"}))}get pathname(){return this._url.cannotBeABaseURL?this._url.path[0]:0===this._url.path.length?"":"/"+this._url.path.join("/")}set pathname(e){this._url.cannotBeABaseURL||(this._url.path=[],t.basicURLParse(e,{url:this._url,stateOverride:"path start"}))}get search(){return null===this._url.query||""===this._url.query?"":"?"+this._url.query}set search(e){const a=this._url;if(""===e)return void(a.query=null);const p="?"===e[0]?e.substring(1):e;a.query="",t.basicURLParse(p,{url:a,stateOverride:"query"})}get hash(){return null===this._url.fragment||""===this._url.fragment?"":"#"+this._url.fragment}set hash(e){if(""===e)return void(this._url.fragment=null);const a="#"===e[0]?e.substring(1):e;this._url.fragment="",t.basicURLParse(a,{url:this._url,stateOverride:"fragment"})}toJSON(){return this.href}}},4328:(e,a,p)=>{"use strict";const t=p(993),d=p(9581),i=p(9718),r=d.implSymbol;function n(a){if(!this||this[r]||!(this instanceof n))throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");if(arguments.length<1)throw new TypeError("Failed to construct 'URL': 1 argument required, but only "+arguments.length+" present.");const p=[];for(let e=0;e<arguments.length&&e<2;++e)p[e]=arguments[e];p[0]=t.USVString(p[0]),void 0!==p[1]&&(p[1]=t.USVString(p[1])),e.exports.setup(this,p)}n.prototype.toJSON=function(){if(!this||!e.exports.is(this))throw new TypeError("Illegal invocation");const a=[];for(let e=0;e<arguments.length&&e<0;++e)a[e]=arguments[e];return this[r].toJSON.apply(this[r],a)},Object.defineProperty(n.prototype,"href",{get(){return this[r].href},set(e){e=t.USVString(e),this[r].href=e},enumerable:!0,configurable:!0}),n.prototype.toString=function(){if(!this||!e.exports.is(this))throw new TypeError("Illegal invocation");return this.href},Object.defineProperty(n.prototype,"origin",{get(){return this[r].origin},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"protocol",{get(){return this[r].protocol},set(e){e=t.USVString(e),this[r].protocol=e},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"username",{get(){return this[r].username},set(e){e=t.USVString(e),this[r].username=e},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"password",{get(){return this[r].password},set(e){e=t.USVString(e),this[r].password=e},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"host",{get(){return this[r].host},set(e){e=t.USVString(e),this[r].host=e},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"hostname",{get(){return this[r].hostname},set(e){e=t.USVString(e),this[r].hostname=e},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"port",{get(){return this[r].port},set(e){e=t.USVString(e),this[r].port=e},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"pathname",{get(){return this[r].pathname},set(e){e=t.USVString(e),this[r].pathname=e},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"search",{get(){return this[r].search},set(e){e=t.USVString(e),this[r].search=e},enumerable:!0,configurable:!0}),Object.defineProperty(n.prototype,"hash",{get(){return this[r].hash},set(e){e=t.USVString(e),this[r].hash=e},enumerable:!0,configurable:!0}),e.exports={is:e=>!!e&&e[r]instanceof i.implementation,create(e,a){let p=Object.create(n.prototype);return this.setup(p,e,a),p},setup(e,a,p){p||(p={}),p.wrapper=e,e[r]=new i.implementation(a,p),e[r][d.wrapperSymbol]=e},interface:n,expose:{Window:{URL:n},Worker:{URL:n}}}},7347:(e,a,p)=>{"use strict";a.URL=p(4328).interface,p(5341).serializeURL,p(5341).serializeURLOrigin,p(5341).basicURLParse,p(5341).setTheUsername,p(5341).setThePassword,p(5341).serializeHost,p(5341).serializeInteger,p(5341).parseURL},5341:(e,a,p)=>{"use strict";const t=p(5477),d=p(4742),i={ftp:21,file:null,gopher:70,http:80,https:443,ws:80,wss:443},r=Symbol("failure");function n(e){return t.ucs2.decode(e).length}function o(e,a){const p=e[a];return isNaN(p)?void 0:String.fromCodePoint(p)}function s(e){return e>=48&&e<=57}function l(e){return e>=65&&e<=90||e>=97&&e<=122}function m(e){return s(e)||e>=65&&e<=70||e>=97&&e<=102}function u(e){return"."===e||"%2e"===e.toLowerCase()}function c(e){return 2===e.length&&l(e.codePointAt(0))&&(":"===e[1]||"|"===e[1])}function h(e){return void 0!==i[e]}function f(e){return h(e.scheme)}function v(e){let a=e.toString(16).toUpperCase();return 1===a.length&&(a="0"+a),"%"+a}function w(e){return e<=31||e>126}const g=new Set([32,34,35,60,62,63,96,123,125]);function y(e){return w(e)||g.has(e)}const b=new Set([47,58,59,61,64,91,92,93,94,124]);function _(e){return y(e)||b.has(e)}function E(e,a){const p=String.fromCodePoint(e);return a(e)?function(e){const a=new Buffer(e);let p="";for(let e=0;e<a.length;++e)p+=v(a[e]);return p}(p):p}function N(e){let a=10;return e.length>=2&&"0"===e.charAt(0)&&"x"===e.charAt(1).toLowerCase()?(e=e.substring(2),a=16):e.length>=2&&"0"===e.charAt(0)&&(e=e.substring(1),a=8),""===e?0:(10===a?/[^0-9]/:16===a?/[^0-9A-Fa-f]/:/[^0-7]/).test(e)?r:parseInt(e,a)}function S(e,a){if("["===e[0])return"]"!==e[e.length-1]?r:function(e){const a=[0,0,0,0,0,0,0,0];let p=0,d=null,i=0;if(58===(e=t.ucs2.decode(e))[i]){if(58!==e[i+1])return r;i+=2,++p,d=p}for(;i<e.length;){if(8===p)return r;if(58===e[i]){if(null!==d)return r;++i,++p,d=p;continue}let t=0,n=0;for(;n<4&&m(e[i]);)t=16*t+parseInt(o(e,i),16),++i,++n;if(46===e[i]){if(0===n)return r;if(i-=n,p>6)return r;let t=0;for(;void 0!==e[i];){let d=null;if(t>0){if(!(46===e[i]&&t<4))return r;++i}if(!s(e[i]))return r;for(;s(e[i]);){const a=parseInt(o(e,i));if(null===d)d=a;else{if(0===d)return r;d=10*d+a}if(d>255)return r;++i}a[p]=256*a[p]+d,++t,2!==t&&4!==t||++p}if(4!==t)return r;break}if(58===e[i]){if(++i,void 0===e[i])return r}else if(void 0!==e[i])return r;a[p]=t,++p}if(null!==d){let e=p-d;for(p=7;0!==p&&e>0;){const t=a[d+e-1];a[d+e-1]=a[p],a[p]=t,--p,--e}}else if(null===d&&8!==p)return r;return a}(e.substring(1,e.length-1));if(!a)return function(e){if(-1!==e.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/))return r;let a="";const p=t.ucs2.decode(e);for(let e=0;e<p.length;++e)a+=E(p[e],w);return a}(e);const p=function(e){const a=new Buffer(e),p=[];for(let e=0;e<a.length;++e)37!==a[e]?p.push(a[e]):37===a[e]&&m(a[e+1])&&m(a[e+2])?(p.push(parseInt(a.slice(e+1,e+3).toString(),16)),e+=2):p.push(a[e]);return new Buffer(p).toString()}(e),i=d.toASCII(p,!1,d.PROCESSING_OPTIONS.NONTRANSITIONAL,!1);if(null===i)return r;if(-1!==i.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/))return r;const n=function(e){const a=e.split(".");if(""===a[a.length-1]&&a.length>1&&a.pop(),a.length>4)return e;const p=[];for(const t of a){if(""===t)return e;const a=N(t);if(a===r)return e;p.push(a)}for(let e=0;e<p.length-1;++e)if(p[e]>255)return r;if(p[p.length-1]>=Math.pow(256,5-p.length))return r;let t=p.pop(),d=0;for(const e of p)t+=e*Math.pow(256,3-d),++d;return t}(i);return"number"==typeof n||n===r?n:i}function T(e){return"number"==typeof e?function(e){let a="",p=e;for(let e=1;e<=4;++e)a=String(p%256)+a,4!==e&&(a="."+a),p=Math.floor(p/256);return a}(e):e instanceof Array?"["+function(e){let a="";const p=function(e){let a=null,p=1,t=null,d=0;for(let i=0;i<e.length;++i)0!==e[i]?(d>p&&(a=t,p=d),t=null,d=0):(null===t&&(t=i),++d);return d>p&&(a=t,p=d),{idx:a,len:p}}(e).idx;let t=!1;for(let d=0;d<=7;++d)t&&0===e[d]||(t&&(t=!1),p!==d?(a+=e[d].toString(16),7!==d&&(a+=":")):(a+=0===d?"::":":",t=!0));return a}(e)+"]":e}function D(e){const a=e.path;var p;0!==a.length&&("file"===e.scheme&&1===a.length&&(p=a[0],/^[A-Za-z]:$/.test(p))||a.pop())}function A(e){return""!==e.username||""!==e.password}function C(e,a,p,d,i){if(this.pointer=0,this.input=e,this.base=a||null,this.encodingOverride=p||"utf-8",this.stateOverride=i,this.url=d,this.failure=!1,this.parseError=!1,!this.url){this.url={scheme:"",username:"",password:"",host:null,port:null,path:[],query:null,fragment:null,cannotBeABaseURL:!1};const e=function(e){return e.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g,"")}(this.input);e!==this.input&&(this.parseError=!0),this.input=e}const n=function(e){return e.replace(/\u0009|\u000A|\u000D/g,"")}(this.input);for(n!==this.input&&(this.parseError=!0),this.input=n,this.state=i||"scheme start",this.buffer="",this.atFlag=!1,this.arrFlag=!1,this.passwordTokenSeenFlag=!1,this.input=t.ucs2.decode(this.input);this.pointer<=this.input.length;++this.pointer){const e=this.input[this.pointer],a=isNaN(e)?void 0:String.fromCodePoint(e),p=this["parse "+this.state](e,a);if(!p)break;if(p===r){this.failure=!0;break}}}C.prototype["parse scheme start"]=function(e,a){if(l(e))this.buffer+=a.toLowerCase(),this.state="scheme";else{if(this.stateOverride)return this.parseError=!0,r;this.state="no scheme",--this.pointer}return!0},C.prototype["parse scheme"]=function(e,a){if(function(e){return l(e)||s(e)}(e)||43===e||45===e||46===e)this.buffer+=a.toLowerCase();else if(58===e){if(this.stateOverride){if(f(this.url)&&!h(this.buffer))return!1;if(!f(this.url)&&h(this.buffer))return!1;if((A(this.url)||null!==this.url.port)&&"file"===this.buffer)return!1;if("file"===this.url.scheme&&(""===this.url.host||null===this.url.host))return!1}if(this.url.scheme=this.buffer,this.buffer="",this.stateOverride)return!1;"file"===this.url.scheme?(47===this.input[this.pointer+1]&&47===this.input[this.pointer+2]||(this.parseError=!0),this.state="file"):f(this.url)&&null!==this.base&&this.base.scheme===this.url.scheme?this.state="special relative or authority":f(this.url)?this.state="special authority slashes":47===this.input[this.pointer+1]?(this.state="path or authority",++this.pointer):(this.url.cannotBeABaseURL=!0,this.url.path.push(""),this.state="cannot-be-a-base-URL path")}else{if(this.stateOverride)return this.parseError=!0,r;this.buffer="",this.state="no scheme",this.pointer=-1}return!0},C.prototype["parse no scheme"]=function(e){return null===this.base||this.base.cannotBeABaseURL&&35!==e?r:(this.base.cannotBeABaseURL&&35===e?(this.url.scheme=this.base.scheme,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.url.cannotBeABaseURL=!0,this.state="fragment"):"file"===this.base.scheme?(this.state="file",--this.pointer):(this.state="relative",--this.pointer),!0)},C.prototype["parse special relative or authority"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="relative",--this.pointer),!0},C.prototype["parse path or authority"]=function(e){return 47===e?this.state="authority":(this.state="path",--this.pointer),!0},C.prototype["parse relative"]=function(e){return this.url.scheme=this.base.scheme,isNaN(e)?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query):47===e?this.state="relative slash":63===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):35===e?(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):f(this.url)&&92===e?(this.parseError=!0,this.state="relative slash"):(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.url.path=this.base.path.slice(0,this.base.path.length-1),this.state="path",--this.pointer),!0},C.prototype["parse relative slash"]=function(e){return!f(this.url)||47!==e&&92!==e?47===e?this.state="authority":(this.url.username=this.base.username,this.url.password=this.base.password,this.url.host=this.base.host,this.url.port=this.base.port,this.state="path",--this.pointer):(92===e&&(this.parseError=!0),this.state="special authority ignore slashes"),!0},C.prototype["parse special authority slashes"]=function(e){return 47===e&&47===this.input[this.pointer+1]?(this.state="special authority ignore slashes",++this.pointer):(this.parseError=!0,this.state="special authority ignore slashes",--this.pointer),!0},C.prototype["parse special authority ignore slashes"]=function(e){return 47!==e&&92!==e?(this.state="authority",--this.pointer):this.parseError=!0,!0},C.prototype["parse authority"]=function(e,a){if(64===e){this.parseError=!0,this.atFlag&&(this.buffer="%40"+this.buffer),this.atFlag=!0;const e=n(this.buffer);for(let a=0;a<e;++a){const e=this.buffer.codePointAt(a);if(58===e&&!this.passwordTokenSeenFlag){this.passwordTokenSeenFlag=!0;continue}const p=E(e,_);this.passwordTokenSeenFlag?this.url.password+=p:this.url.username+=p}this.buffer=""}else if(isNaN(e)||47===e||63===e||35===e||f(this.url)&&92===e){if(this.atFlag&&""===this.buffer)return this.parseError=!0,r;this.pointer-=n(this.buffer)+1,this.buffer="",this.state="host"}else this.buffer+=a;return!0},C.prototype["parse hostname"]=C.prototype["parse host"]=function(e,a){if(this.stateOverride&&"file"===this.url.scheme)--this.pointer,this.state="file host";else if(58!==e||this.arrFlag)if(isNaN(e)||47===e||63===e||35===e||f(this.url)&&92===e){if(--this.pointer,f(this.url)&&""===this.buffer)return this.parseError=!0,r;if(this.stateOverride&&""===this.buffer&&(A(this.url)||null!==this.url.port))return this.parseError=!0,!1;const e=S(this.buffer,f(this.url));if(e===r)return r;if(this.url.host=e,this.buffer="",this.state="path start",this.stateOverride)return!1}else 91===e?this.arrFlag=!0:93===e&&(this.arrFlag=!1),this.buffer+=a;else{if(""===this.buffer)return this.parseError=!0,r;const e=S(this.buffer,f(this.url));if(e===r)return r;if(this.url.host=e,this.buffer="",this.state="port","hostname"===this.stateOverride)return!1}return!0},C.prototype["parse port"]=function(e,a){if(s(e))this.buffer+=a;else{if(!(isNaN(e)||47===e||63===e||35===e||f(this.url)&&92===e||this.stateOverride))return this.parseError=!0,r;if(""!==this.buffer){const e=parseInt(this.buffer);if(e>Math.pow(2,16)-1)return this.parseError=!0,r;this.url.port=e===(p=this.url.scheme,i[p])?null:e,this.buffer=""}if(this.stateOverride)return!1;this.state="path start",--this.pointer}var p;return!0};const O=new Set([47,92,63,35]);C.prototype["parse file"]=function(e){var a,p;return this.url.scheme="file",47===e||92===e?(92===e&&(this.parseError=!0),this.state="file slash"):null!==this.base&&"file"===this.base.scheme?isNaN(e)?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query):63===e?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query="",this.state="query"):35===e?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),this.url.query=this.base.query,this.url.fragment="",this.state="fragment"):(this.input.length-this.pointer-1==0||(a=e,p=this.input[this.pointer+1],!l(a)||58!==p&&124!==p)||this.input.length-this.pointer-1>=2&&!O.has(this.input[this.pointer+2])?(this.url.host=this.base.host,this.url.path=this.base.path.slice(),D(this.url)):this.parseError=!0,this.state="path",--this.pointer):(this.state="path",--this.pointer),!0},C.prototype["parse file slash"]=function(e){var a;return 47===e||92===e?(92===e&&(this.parseError=!0),this.state="file host"):(null!==this.base&&"file"===this.base.scheme&&(2===(a=this.base.path[0]).length&&l(a.codePointAt(0))&&":"===a[1]?this.url.path.push(this.base.path[0]):this.url.host=this.base.host),this.state="path",--this.pointer),!0},C.prototype["parse file host"]=function(e,a){if(isNaN(e)||47===e||92===e||63===e||35===e)if(--this.pointer,!this.stateOverride&&c(this.buffer))this.parseError=!0,this.state="path";else if(""===this.buffer){if(this.url.host="",this.stateOverride)return!1;this.state="path start"}else{let e=S(this.buffer,f(this.url));if(e===r)return r;if("localhost"===e&&(e=""),this.url.host=e,this.stateOverride)return!1;this.buffer="",this.state="path start"}else this.buffer+=a;return!0},C.prototype["parse path start"]=function(e){return f(this.url)?(92===e&&(this.parseError=!0),this.state="path",47!==e&&92!==e&&--this.pointer):this.stateOverride||63!==e?this.stateOverride||35!==e?void 0!==e&&(this.state="path",47!==e&&--this.pointer):(this.url.fragment="",this.state="fragment"):(this.url.query="",this.state="query"),!0},C.prototype["parse path"]=function(e){if(isNaN(e)||47===e||f(this.url)&&92===e||!this.stateOverride&&(63===e||35===e)){if(f(this.url)&&92===e&&(this.parseError=!0),".."===(a=(a=this.buffer).toLowerCase())||"%2e."===a||".%2e"===a||"%2e%2e"===a?(D(this.url),47===e||f(this.url)&&92===e||this.url.path.push("")):!u(this.buffer)||47===e||f(this.url)&&92===e?u(this.buffer)||("file"===this.url.scheme&&0===this.url.path.length&&c(this.buffer)&&(""!==this.url.host&&null!==this.url.host&&(this.parseError=!0,this.url.host=""),this.buffer=this.buffer[0]+":"),this.url.path.push(this.buffer)):this.url.path.push(""),this.buffer="","file"===this.url.scheme&&(void 0===e||63===e||35===e))for(;this.url.path.length>1&&""===this.url.path[0];)this.parseError=!0,this.url.path.shift();63===e&&(this.url.query="",this.state="query"),35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||m(this.input[this.pointer+1])&&m(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=E(e,y);var a;return!0},C.prototype["parse cannot-be-a-base-URL path"]=function(e){return 63===e?(this.url.query="",this.state="query"):35===e?(this.url.fragment="",this.state="fragment"):(isNaN(e)||37===e||(this.parseError=!0),37!==e||m(this.input[this.pointer+1])&&m(this.input[this.pointer+2])||(this.parseError=!0),isNaN(e)||(this.url.path[0]=this.url.path[0]+E(e,w))),!0},C.prototype["parse query"]=function(e,a){if(isNaN(e)||!this.stateOverride&&35===e){f(this.url)&&"ws"!==this.url.scheme&&"wss"!==this.url.scheme||(this.encodingOverride="utf-8");const a=new Buffer(this.buffer);for(let e=0;e<a.length;++e)a[e]<33||a[e]>126||34===a[e]||35===a[e]||60===a[e]||62===a[e]?this.url.query+=v(a[e]):this.url.query+=String.fromCodePoint(a[e]);this.buffer="",35===e&&(this.url.fragment="",this.state="fragment")}else 37!==e||m(this.input[this.pointer+1])&&m(this.input[this.pointer+2])||(this.parseError=!0),this.buffer+=a;return!0},C.prototype["parse fragment"]=function(e){return isNaN(e)||(0===e?this.parseError=!0:(37!==e||m(this.input[this.pointer+1])&&m(this.input[this.pointer+2])||(this.parseError=!0),this.url.fragment+=E(e,w))),!0},e.exports.serializeURL=function(e,a){let p=e.scheme+":";if(null!==e.host?(p+="//",""===e.username&&""===e.password||(p+=e.username,""!==e.password&&(p+=":"+e.password),p+="@"),p+=T(e.host),null!==e.port&&(p+=":"+e.port)):null===e.host&&"file"===e.scheme&&(p+="//"),e.cannotBeABaseURL)p+=e.path[0];else for(const a of e.path)p+="/"+a;return null!==e.query&&(p+="?"+e.query),a||null===e.fragment||(p+="#"+e.fragment),p},e.exports.serializeURLOrigin=function(a){switch(a.scheme){case"blob":try{return e.exports.serializeURLOrigin(e.exports.parseURL(a.path[0]))}catch(e){return"null"}case"ftp":case"gopher":case"http":case"https":case"ws":case"wss":return function(e){let a=e.scheme+"://";return a+=T(e.host),null!==e.port&&(a+=":"+e.port),a}({scheme:a.scheme,host:a.host,port:a.port});case"file":return"file://";default:return"null"}},e.exports.basicURLParse=function(e,a){void 0===a&&(a={});const p=new C(e,a.baseURL,a.encodingOverride,a.url,a.stateOverride);return p.failure?"failure":p.url},e.exports.setTheUsername=function(e,a){e.username="";const p=t.ucs2.decode(a);for(let a=0;a<p.length;++a)e.username+=E(p[a],_)},e.exports.setThePassword=function(e,a){e.password="";const p=t.ucs2.decode(a);for(let a=0;a<p.length;++a)e.password+=E(p[a],_)},e.exports.serializeHost=T,e.exports.cannotHaveAUsernamePasswordPort=function(e){return null===e.host||""===e.host||e.cannotBeABaseURL||"file"===e.scheme},e.exports.serializeInteger=function(e){return String(e)},e.exports.parseURL=function(a,p){return void 0===p&&(p={}),e.exports.basicURLParse(a,{baseURL:p.baseURL,encodingOverride:p.encodingOverride})}},9581:e=>{"use strict";e.exports.mixin=function(e,a){const p=Object.getOwnPropertyNames(a);for(let t=0;t<p.length;++t)Object.defineProperty(e,p[t],Object.getOwnPropertyDescriptor(a,p[t]))},e.exports.wrapperSymbol=Symbol("wrapper"),e.exports.implSymbol=Symbol("impl"),e.exports.wrapperForImpl=function(a){return a[e.exports.wrapperSymbol]},e.exports.implForWrapper=function(a){return a[e.exports.implSymbol]}},9602:e=>{"use strict";e.exports=function(e){e.prototype[Symbol.iterator]=function*(){for(let e=this.head;e;e=e.next)yield e.value}}},4411:(e,a,p)=>{"use strict";function t(e){var a=this;if(a instanceof t||(a=new t),a.tail=null,a.head=null,a.length=0,e&&"function"==typeof e.forEach)e.forEach((function(e){a.push(e)}));else if(arguments.length>0)for(var p=0,d=arguments.length;p<d;p++)a.push(arguments[p]);return a}function d(e,a,p){var t=a===e.head?new n(p,null,a,e):new n(p,a,a.next,e);return null===t.next&&(e.tail=t),null===t.prev&&(e.head=t),e.length++,t}function i(e,a){e.tail=new n(a,e.tail,null,e),e.head||(e.head=e.tail),e.length++}function r(e,a){e.head=new n(a,null,e.head,e),e.tail||(e.tail=e.head),e.length++}function n(e,a,p,t){if(!(this instanceof n))return new n(e,a,p,t);this.list=t,this.value=e,a?(a.next=this,this.prev=a):this.prev=null,p?(p.prev=this,this.next=p):this.next=null}e.exports=t,t.Node=n,t.create=t,t.prototype.removeNode=function(e){if(e.list!==this)throw new Error("removing node which does not belong to this list");var a=e.next,p=e.prev;return a&&(a.prev=p),p&&(p.next=a),e===this.head&&(this.head=a),e===this.tail&&(this.tail=p),e.list.length--,e.next=null,e.prev=null,e.list=null,a},t.prototype.unshiftNode=function(e){if(e!==this.head){e.list&&e.list.removeNode(e);var a=this.head;e.list=this,e.next=a,a&&(a.prev=e),this.head=e,this.tail||(this.tail=e),this.length++}},t.prototype.pushNode=function(e){if(e!==this.tail){e.list&&e.list.removeNode(e);var a=this.tail;e.list=this,e.prev=a,a&&(a.next=e),this.tail=e,this.head||(this.head=e),this.length++}},t.prototype.push=function(){for(var e=0,a=arguments.length;e<a;e++)i(this,arguments[e]);return this.length},t.prototype.unshift=function(){for(var e=0,a=arguments.length;e<a;e++)r(this,arguments[e]);return this.length},t.prototype.pop=function(){if(this.tail){var e=this.tail.value;return this.tail=this.tail.prev,this.tail?this.tail.next=null:this.head=null,this.length--,e}},t.prototype.shift=function(){if(this.head){var e=this.head.value;return this.head=this.head.next,this.head?this.head.prev=null:this.tail=null,this.length--,e}},t.prototype.forEach=function(e,a){a=a||this;for(var p=this.head,t=0;null!==p;t++)e.call(a,p.value,t,this),p=p.next},t.prototype.forEachReverse=function(e,a){a=a||this;for(var p=this.tail,t=this.length-1;null!==p;t--)e.call(a,p.value,t,this),p=p.prev},t.prototype.get=function(e){for(var a=0,p=this.head;null!==p&&a<e;a++)p=p.next;if(a===e&&null!==p)return p.value},t.prototype.getReverse=function(e){for(var a=0,p=this.tail;null!==p&&a<e;a++)p=p.prev;if(a===e&&null!==p)return p.value},t.prototype.map=function(e,a){a=a||this;for(var p=new t,d=this.head;null!==d;)p.push(e.call(a,d.value,this)),d=d.next;return p},t.prototype.mapReverse=function(e,a){a=a||this;for(var p=new t,d=this.tail;null!==d;)p.push(e.call(a,d.value,this)),d=d.prev;return p},t.prototype.reduce=function(e,a){var p,t=this.head;if(arguments.length>1)p=a;else{if(!this.head)throw new TypeError("Reduce of empty list with no initial value");t=this.head.next,p=this.head.value}for(var d=0;null!==t;d++)p=e(p,t.value,d),t=t.next;return p},t.prototype.reduceReverse=function(e,a){var p,t=this.tail;if(arguments.length>1)p=a;else{if(!this.tail)throw new TypeError("Reduce of empty list with no initial value");t=this.tail.prev,p=this.tail.value}for(var d=this.length-1;null!==t;d--)p=e(p,t.value,d),t=t.prev;return p},t.prototype.toArray=function(){for(var e=new Array(this.length),a=0,p=this.head;null!==p;a++)e[a]=p.value,p=p.next;return e},t.prototype.toArrayReverse=function(){for(var e=new Array(this.length),a=0,p=this.tail;null!==p;a++)e[a]=p.value,p=p.prev;return e},t.prototype.slice=function(e,a){(a=a||this.length)<0&&(a+=this.length),(e=e||0)<0&&(e+=this.length);var p=new t;if(a<e||a<0)return p;e<0&&(e=0),a>this.length&&(a=this.length);for(var d=0,i=this.head;null!==i&&d<e;d++)i=i.next;for(;null!==i&&d<a;d++,i=i.next)p.push(i.value);return p},t.prototype.sliceReverse=function(e,a){(a=a||this.length)<0&&(a+=this.length),(e=e||0)<0&&(e+=this.length);var p=new t;if(a<e||a<0)return p;e<0&&(e=0),a>this.length&&(a=this.length);for(var d=this.length,i=this.tail;null!==i&&d>a;d--)i=i.prev;for(;null!==i&&d>e;d--,i=i.prev)p.push(i.value);return p},t.prototype.splice=function(e,a,...p){e>this.length&&(e=this.length-1),e<0&&(e=this.length+e);for(var t=0,i=this.head;null!==i&&t<e;t++)i=i.next;var r=[];for(t=0;i&&t<a;t++)r.push(i.value),i=this.removeNode(i);for(null===i&&(i=this.tail),i!==this.head&&i!==this.tail&&(i=i.prev),t=0;t<p.length;t++)i=d(this,i,p[t]);return r},t.prototype.reverse=function(){for(var e=this.head,a=this.tail,p=e;null!==p;p=p.prev){var t=p.prev;p.prev=p.next,p.next=t}return this.head=a,this.tail=e,this};try{p(9602)(t)}catch(e){}},9491:e=>{"use strict";e.exports=require("assert")},2081:e=>{"use strict";e.exports=require("child_process")},2057:e=>{"use strict";e.exports=require("constants")},6113:e=>{"use strict";e.exports=require("crypto")},2298:e=>{"use strict";e.exports=require("electron")},2361:e=>{"use strict";e.exports=require("events")},7147:e=>{"use strict";e.exports=require("fs")},3685:e=>{"use strict";e.exports=require("http")},2037:e=>{"use strict";e.exports=require("os")},1017:e=>{"use strict";e.exports=require("path")},5477:e=>{"use strict";e.exports=require("punycode")},2781:e=>{"use strict";e.exports=require("stream")},1576:e=>{"use strict";e.exports=require("string_decoder")},6224:e=>{"use strict";e.exports=require("tty")},7310:e=>{"use strict";e.exports=require("url")},3837:e=>{"use strict";e.exports=require("util")},9796:e=>{"use strict";e.exports=require("zlib")},2020:e=>{"use strict";e.exports=JSON.parse('[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1000,1000],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6000],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8000,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8000]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9000],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[30000]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13000,13000],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43000,43000],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64000,64000],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66000,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[120000,120000],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128000,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23000]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149000]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32000]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195000,195000],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[40000]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918000,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]]')}},a={};function p(t){var d=a[t];if(void 0!==d)return d.exports;var i=a[t]={id:t,loaded:!1,exports:{}};return e[t](i,i.exports,p),i.loaded=!0,i.exports}p.n=e=>{var a=e&&e.__esModule?()=>e.default:()=>e;return p.d(a,{a}),a},p.d=(e,a)=>{for(var t in a)p.o(a,t)&&!p.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:a[t]})},p.o=(e,a)=>Object.prototype.hasOwnProperty.call(e,a),p.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{"use strict";var e=p(2298),a=p(7430),t=p(2781),d=p(3685),i=p(7310),r=p(7347);const n=require("https");var o=p(9796);const s=t.Readable,l=Symbol("buffer"),m=Symbol("type");class u{constructor(){this[m]="";const e=arguments[0],a=arguments[1],p=[];let t=0;if(e){const a=e,d=Number(a.length);for(let e=0;e<d;e++){const d=a[e];let i;i=d instanceof Buffer?d:ArrayBuffer.isView(d)?Buffer.from(d.buffer,d.byteOffset,d.byteLength):d instanceof ArrayBuffer?Buffer.from(d):d instanceof u?d[l]:Buffer.from("string"==typeof d?d:String(d)),t+=i.length,p.push(i)}}this[l]=Buffer.concat(p);let d=a&&void 0!==a.type&&String(a.type).toLowerCase();d&&!/[^\u0020-\u007E]/.test(d)&&(this[m]=d)}get size(){return this[l].length}get type(){return this[m]}text(){return Promise.resolve(this[l].toString())}arrayBuffer(){const e=this[l],a=e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength);return Promise.resolve(a)}stream(){const e=new s;return e._read=function(){},e.push(this[l]),e.push(null),e}toString(){return"[object Blob]"}slice(){const e=this.size,a=arguments[0],p=arguments[1];let t,d;t=void 0===a?0:a<0?Math.max(e+a,0):Math.min(a,e),d=void 0===p?e:p<0?Math.max(e+p,0):Math.min(p,e);const i=Math.max(d-t,0),r=this[l].slice(t,t+i),n=new u([],{type:arguments[2]});return n[l]=r,n}}function c(e,a,p){Error.call(this,e),this.message=e,this.type=a,p&&(this.code=this.errno=p.code),Error.captureStackTrace(this,this.constructor)}let h;Object.defineProperties(u.prototype,{size:{enumerable:!0},type:{enumerable:!0},slice:{enumerable:!0}}),Object.defineProperty(u.prototype,Symbol.toStringTag,{value:"Blob",writable:!1,enumerable:!1,configurable:!0}),c.prototype=Object.create(Error.prototype),c.prototype.constructor=c,c.prototype.name="FetchError";try{h=require("encoding").convert}catch(e){}const f=Symbol("Body internals"),v=t.PassThrough;function w(e){var a=this,p=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},d=p.size;let i=void 0===d?0:d;var r=p.timeout;let n=void 0===r?0:r;null==e?e=null:y(e)?e=Buffer.from(e.toString()):b(e)||Buffer.isBuffer(e)||("[object ArrayBuffer]"===Object.prototype.toString.call(e)?e=Buffer.from(e):ArrayBuffer.isView(e)?e=Buffer.from(e.buffer,e.byteOffset,e.byteLength):e instanceof t||(e=Buffer.from(String(e)))),this[f]={body:e,disturbed:!1,error:null},this.size=i,this.timeout=n,e instanceof t&&e.on("error",(function(e){const p="AbortError"===e.name?e:new c(`Invalid response body while trying to fetch ${a.url}: ${e.message}`,"system",e);a[f].error=p}))}function g(){var e=this;if(this[f].disturbed)return w.Promise.reject(new TypeError(`body used already for: ${this.url}`));if(this[f].disturbed=!0,this[f].error)return w.Promise.reject(this[f].error);let a=this.body;if(null===a)return w.Promise.resolve(Buffer.alloc(0));if(b(a)&&(a=a.stream()),Buffer.isBuffer(a))return w.Promise.resolve(a);if(!(a instanceof t))return w.Promise.resolve(Buffer.alloc(0));let p=[],d=0,i=!1;return new w.Promise((function(t,r){let n;e.timeout&&(n=setTimeout((function(){i=!0,r(new c(`Response timeout while trying to fetch ${e.url} (over ${e.timeout}ms)`,"body-timeout"))}),e.timeout)),a.on("error",(function(a){"AbortError"===a.name?(i=!0,r(a)):r(new c(`Invalid response body while trying to fetch ${e.url}: ${a.message}`,"system",a))})),a.on("data",(function(a){if(!i&&null!==a){if(e.size&&d+a.length>e.size)return i=!0,void r(new c(`content size at ${e.url} over limit: ${e.size}`,"max-size"));d+=a.length,p.push(a)}})),a.on("end",(function(){if(!i){clearTimeout(n);try{t(Buffer.concat(p,d))}catch(a){r(new c(`Could not create Buffer from response body for ${e.url}: ${a.message}`,"system",a))}}}))}))}function y(e){return"object"==typeof e&&"function"==typeof e.append&&"function"==typeof e.delete&&"function"==typeof e.get&&"function"==typeof e.getAll&&"function"==typeof e.has&&"function"==typeof e.set&&("URLSearchParams"===e.constructor.name||"[object URLSearchParams]"===Object.prototype.toString.call(e)||"function"==typeof e.sort)}function b(e){return"object"==typeof e&&"function"==typeof e.arrayBuffer&&"string"==typeof e.type&&"function"==typeof e.stream&&"function"==typeof e.constructor&&"string"==typeof e.constructor.name&&/^(Blob|File)$/.test(e.constructor.name)&&/^(Blob|File)$/.test(e[Symbol.toStringTag])}function _(e){let a,p,d=e.body;if(e.bodyUsed)throw new Error("cannot clone body after it is used");return d instanceof t&&"function"!=typeof d.getBoundary&&(a=new v,p=new v,d.pipe(a),d.pipe(p),e[f].body=a,d=p),d}function E(e){return null===e?null:"string"==typeof e?"text/plain;charset=UTF-8":y(e)?"application/x-www-form-urlencoded;charset=UTF-8":b(e)?e.type||null:Buffer.isBuffer(e)||"[object ArrayBuffer]"===Object.prototype.toString.call(e)||ArrayBuffer.isView(e)?null:"function"==typeof e.getBoundary?`multipart/form-data;boundary=${e.getBoundary()}`:e instanceof t?null:"text/plain;charset=UTF-8"}function N(e){const a=e.body;return null===a?0:b(a)?a.size:Buffer.isBuffer(a)?a.length:a&&"function"==typeof a.getLengthSync&&(a._lengthRetrievers&&0==a._lengthRetrievers.length||a.hasKnownLength&&a.hasKnownLength())?a.getLengthSync():null}w.prototype={get body(){return this[f].body},get bodyUsed(){return this[f].disturbed},arrayBuffer(){return g.call(this).then((function(e){return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}))},blob(){let e=this.headers&&this.headers.get("content-type")||"";return g.call(this).then((function(a){return Object.assign(new u([],{type:e.toLowerCase()}),{[l]:a})}))},json(){var e=this;return g.call(this).then((function(a){try{return JSON.parse(a.toString())}catch(a){return w.Promise.reject(new c(`invalid json response body at ${e.url} reason: ${a.message}`,"invalid-json"))}}))},text(){return g.call(this).then((function(e){return e.toString()}))},buffer(){return g.call(this)},textConverted(){var e=this;return g.call(this).then((function(a){return function(e,a){if("function"!=typeof h)throw new Error("The package `encoding` must be installed to use the textConverted() function");const p=a.get("content-type");let t,d,i="utf-8";return p&&(t=/charset=([^;]*)/i.exec(p)),d=e.slice(0,1024).toString(),!t&&d&&(t=/<meta.+?charset=(['"])(.+?)\1/i.exec(d)),!t&&d&&(t=/<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(d),t||(t=/<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(d),t&&t.pop()),t&&(t=/charset=(.*)/i.exec(t.pop()))),!t&&d&&(t=/<\?xml.+?encoding=(['"])(.+?)\1/i.exec(d)),t&&(i=t.pop(),"gb2312"!==i&&"gbk"!==i||(i="gb18030")),h(e,"UTF-8",i).toString()}(a,e.headers)}))}},Object.defineProperties(w.prototype,{body:{enumerable:!0},bodyUsed:{enumerable:!0},arrayBuffer:{enumerable:!0},blob:{enumerable:!0},json:{enumerable:!0},text:{enumerable:!0}}),w.mixIn=function(e){for(const a of Object.getOwnPropertyNames(w.prototype))if(!(a in e)){const p=Object.getOwnPropertyDescriptor(w.prototype,a);Object.defineProperty(e,a,p)}},w.Promise=global.Promise;const S=/[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/,T=/[^\t\x20-\x7e\x80-\xff]/;function D(e){if(e=`${e}`,S.test(e)||""===e)throw new TypeError(`${e} is not a legal HTTP header name`)}function A(e){if(e=`${e}`,T.test(e))throw new TypeError(`${e} is not a legal HTTP header value`)}function C(e,a){a=a.toLowerCase();for(const p in e)if(p.toLowerCase()===a)return p}const O=Symbol("map");class I{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:void 0;if(this[O]=Object.create(null),e instanceof I){const a=e.raw(),p=Object.keys(a);for(const e of p)for(const p of a[e])this.append(e,p)}else if(null==e);else{if("object"!=typeof e)throw new TypeError("Provided initializer must be an object");{const a=e[Symbol.iterator];if(null!=a){if("function"!=typeof a)throw new TypeError("Header pairs must be iterable");const p=[];for(const a of e){if("object"!=typeof a||"function"!=typeof a[Symbol.iterator])throw new TypeError("Each header pair must be iterable");p.push(Array.from(a))}for(const e of p){if(2!==e.length)throw new TypeError("Each header pair must be a name/value tuple");this.append(e[0],e[1])}}else for(const a of Object.keys(e)){const p=e[a];this.append(a,p)}}}}get(e){D(e=`${e}`);const a=C(this[O],e);return void 0===a?null:this[O][a].join(", ")}forEach(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:void 0,p=R(this),t=0;for(;t<p.length;){var d=p[t];const i=d[0],r=d[1];e.call(a,r,i,this),p=R(this),t++}}set(e,a){a=`${a}`,D(e=`${e}`),A(a);const p=C(this[O],e);this[O][void 0!==p?p:e]=[a]}append(e,a){a=`${a}`,D(e=`${e}`),A(a);const p=C(this[O],e);void 0!==p?this[O][p].push(a):this[O][e]=[a]}has(e){return D(e=`${e}`),void 0!==C(this[O],e)}delete(e){D(e=`${e}`);const a=C(this[O],e);void 0!==a&&delete this[O][a]}raw(){return this[O]}keys(){return x(this,"key")}values(){return x(this,"value")}[Symbol.iterator](){return x(this,"key+value")}}function R(e){let a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"key+value";const p=Object.keys(e[O]).sort();return p.map("key"===a?function(e){return e.toLowerCase()}:"value"===a?function(a){return e[O][a].join(", ")}:function(a){return[a.toLowerCase(),e[O][a].join(", ")]})}I.prototype.entries=I.prototype[Symbol.iterator],Object.defineProperty(I.prototype,Symbol.toStringTag,{value:"Headers",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(I.prototype,{get:{enumerable:!0},forEach:{enumerable:!0},set:{enumerable:!0},append:{enumerable:!0},has:{enumerable:!0},delete:{enumerable:!0},keys:{enumerable:!0},values:{enumerable:!0},entries:{enumerable:!0}});const P=Symbol("internal");function x(e,a){const p=Object.create(F);return p[P]={target:e,kind:a,index:0},p}const F=Object.setPrototypeOf({next(){if(!this||Object.getPrototypeOf(this)!==F)throw new TypeError("Value of `this` is not a HeadersIterator");var e=this[P];const a=e.target,p=e.kind,t=e.index,d=R(a,p);return t>=d.length?{value:void 0,done:!0}:(this[P].index=t+1,{value:d[t],done:!1})}},Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));function V(e){const a=Object.assign({__proto__:null},e[O]),p=C(e[O],"Host");return void 0!==p&&(a[p]=a[p][0]),a}Object.defineProperty(F,Symbol.toStringTag,{value:"HeadersIterator",writable:!1,enumerable:!1,configurable:!0});const k=Symbol("Response internals"),U=d.STATUS_CODES;class L{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};w.call(this,e,a);const p=a.status||200,t=new I(a.headers);if(null!=e&&!t.has("Content-Type")){const a=E(e);a&&t.append("Content-Type",a)}this[k]={url:a.url,status:p,statusText:a.statusText||U[p],headers:t,counter:a.counter}}get url(){return this[k].url||""}get status(){return this[k].status}get ok(){return this[k].status>=200&&this[k].status<300}get redirected(){return this[k].counter>0}get statusText(){return this[k].statusText}get headers(){return this[k].headers}clone(){return new L(_(this),{url:this.url,status:this.status,statusText:this.statusText,headers:this.headers,ok:this.ok,redirected:this.redirected})}}w.mixIn(L.prototype),Object.defineProperties(L.prototype,{url:{enumerable:!0},status:{enumerable:!0},ok:{enumerable:!0},redirected:{enumerable:!0},statusText:{enumerable:!0},headers:{enumerable:!0},clone:{enumerable:!0}}),Object.defineProperty(L.prototype,Symbol.toStringTag,{value:"Response",writable:!1,enumerable:!1,configurable:!0});const $=Symbol("Request internals"),j=i.URL||r.URL,B=i.parse,M=i.format;function q(e){return/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(e)&&(e=new j(e).toString()),B(e)}const H="destroy"in t.Readable.prototype;function G(e){return"object"==typeof e&&"object"==typeof e[$]}class z{constructor(e){let a,p=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};G(e)?a=q(e.url):(a=e&&e.href?q(e.href):q(`${e}`),e={});let t=p.method||e.method||"GET";if(t=t.toUpperCase(),(null!=p.body||G(e)&&null!==e.body)&&("GET"===t||"HEAD"===t))throw new TypeError("Request with GET/HEAD method cannot have body");let d=null!=p.body?p.body:G(e)&&null!==e.body?_(e):null;w.call(this,d,{timeout:p.timeout||e.timeout||0,size:p.size||e.size||0});const i=new I(p.headers||e.headers||{});if(null!=d&&!i.has("Content-Type")){const e=E(d);e&&i.append("Content-Type",e)}let r=G(e)?e.signal:null;if("signal"in p&&(r=p.signal),null!=r&&!function(e){const a=e&&"object"==typeof e&&Object.getPrototypeOf(e);return!(!a||"AbortSignal"!==a.constructor.name)}(r))throw new TypeError("Expected signal to be an instanceof AbortSignal");this[$]={method:t,redirect:p.redirect||e.redirect||"follow",headers:i,parsedURL:a,signal:r},this.follow=void 0!==p.follow?p.follow:void 0!==e.follow?e.follow:20,this.compress=void 0!==p.compress?p.compress:void 0===e.compress||e.compress,this.counter=p.counter||e.counter||0,this.agent=p.agent||e.agent}get method(){return this[$].method}get url(){return M(this[$].parsedURL)}get headers(){return this[$].headers}get redirect(){return this[$].redirect}get signal(){return this[$].signal}clone(){return new z(this)}}function W(e){Error.call(this,e),this.type="aborted",this.message=e,Error.captureStackTrace(this,this.constructor)}w.mixIn(z.prototype),Object.defineProperty(z.prototype,Symbol.toStringTag,{value:"Request",writable:!1,enumerable:!1,configurable:!0}),Object.defineProperties(z.prototype,{method:{enumerable:!0},url:{enumerable:!0},headers:{enumerable:!0},redirect:{enumerable:!0},clone:{enumerable:!0},signal:{enumerable:!0}}),W.prototype=Object.create(Error.prototype),W.prototype.constructor=W,W.prototype.name="AbortError";const Y=i.URL||r.URL,X=t.PassThrough;function J(e,a){if(!J.Promise)throw new Error("native promise missing, set fetch.Promise to your favorite alternative");return w.Promise=J.Promise,new J.Promise((function(p,i){const r=new z(e,a),s=function(e){const a=e[$].parsedURL,p=new I(e[$].headers);if(p.has("Accept")||p.set("Accept","*/*"),!a.protocol||!a.hostname)throw new TypeError("Only absolute URLs are supported");if(!/^https?:$/.test(a.protocol))throw new TypeError("Only HTTP(S) protocols are supported");if(e.signal&&e.body instanceof t.Readable&&!H)throw new Error("Cancellation of streamed requests with AbortSignal is not supported in node < 8");let d=null;if(null==e.body&&/^(POST|PUT)$/i.test(e.method)&&(d="0"),null!=e.body){const a=N(e);"number"==typeof a&&(d=String(a))}d&&p.set("Content-Length",d),p.has("User-Agent")||p.set("User-Agent","node-fetch/1.0 (+https://github.com/bitinn/node-fetch)"),e.compress&&!p.has("Accept-Encoding")&&p.set("Accept-Encoding","gzip,deflate");let i=e.agent;return"function"==typeof i&&(i=i(a)),p.has("Connection")||i||p.set("Connection","close"),Object.assign({},a,{method:e.method,headers:V(p),agent:i})}(r),l=("https:"===s.protocol?n:d).request,m=r.signal;let u=null;const h=function(){let e=new W("The user aborted a request.");i(e),r.body&&r.body instanceof t.Readable&&r.body.destroy(e),u&&u.body&&u.body.emit("error",e)};if(m&&m.aborted)return void h();const f=function(){h(),g()},v=l(s);let w;function g(){v.abort(),m&&m.removeEventListener("abort",f),clearTimeout(w)}m&&m.addEventListener("abort",f),r.timeout&&v.once("socket",(function(e){w=setTimeout((function(){i(new c(`network timeout at: ${r.url}`,"request-timeout")),g()}),r.timeout)})),v.on("error",(function(e){i(new c(`request to ${r.url} failed, reason: ${e.message}`,"system",e)),g()})),v.on("response",(function(e){clearTimeout(w);const a=function(e){const a=new I;for(const p of Object.keys(e))if(!S.test(p))if(Array.isArray(e[p]))for(const t of e[p])T.test(t)||(void 0===a[O][p]?a[O][p]=[t]:a[O][p].push(t));else T.test(e[p])||(a[O][p]=[e[p]]);return a}(e.headers);if(J.isRedirect(e.statusCode)){const t=a.get("Location");let d=null;try{d=null===t?null:new Y(t,r.url).toString()}catch(e){if("manual"!==r.redirect)return i(new c(`uri requested responds with an invalid redirect URL: ${t}`,"invalid-redirect")),void g()}switch(r.redirect){case"error":return i(new c(`uri requested responds with a redirect, redirect mode is set to error: ${r.url}`,"no-redirect")),void g();case"manual":if(null!==d)try{a.set("Location",d)}catch(e){i(e)}break;case"follow":if(null===d)break;if(r.counter>=r.follow)return i(new c(`maximum redirect reached at: ${r.url}`,"max-redirect")),void g();const t={headers:new I(r.headers),follow:r.follow,counter:r.counter+1,agent:r.agent,compress:r.compress,method:r.method,body:r.body,signal:r.signal,timeout:r.timeout,size:r.size};if(!function(e,a){const p=new Y(a).hostname,t=new Y(e).hostname;return p===t||"."===p[p.length-t.length-1]&&p.endsWith(t)}(r.url,d))for(const e of["authorization","www-authenticate","cookie","cookie2"])t.headers.delete(e);return 303!==e.statusCode&&r.body&&null===N(r)?(i(new c("Cannot follow redirect with body being a readable stream","unsupported-redirect")),void g()):(303!==e.statusCode&&(301!==e.statusCode&&302!==e.statusCode||"POST"!==r.method)||(t.method="GET",t.body=void 0,t.headers.delete("content-length")),p(J(new z(d,t))),void g())}}e.once("end",(function(){m&&m.removeEventListener("abort",f)}));let t=e.pipe(new X);const d={url:r.url,status:e.statusCode,statusText:e.statusMessage,headers:a,size:r.size,timeout:r.timeout,counter:r.counter},n=a.get("Content-Encoding");if(!r.compress||"HEAD"===r.method||null===n||204===e.statusCode||304===e.statusCode)return u=new L(t,d),void p(u);const s={flush:o.Z_SYNC_FLUSH,finishFlush:o.Z_SYNC_FLUSH};if("gzip"==n||"x-gzip"==n)return t=t.pipe(o.createGunzip(s)),u=new L(t,d),void p(u);if("deflate"!=n&&"x-deflate"!=n){if("br"==n&&"function"==typeof o.createBrotliDecompress)return t=t.pipe(o.createBrotliDecompress()),u=new L(t,d),void p(u);u=new L(t,d),p(u)}else e.pipe(new X).once("data",(function(e){t=8==(15&e[0])?t.pipe(o.createInflate()):t.pipe(o.createInflateRaw()),u=new L(t,d),p(u)}))})),function(e,a){const p=a.body;null===p?e.end():b(p)?p.stream().pipe(e):Buffer.isBuffer(p)?(e.write(p),e.end()):p.pipe(e)}(v,r)}))}J.isRedirect=function(e){return 301===e||302===e||303===e||307===e||308===e},J.Promise=global.Promise;const K=J;e.ipcMain.handle("httpRequest",(async(e,...a)=>{const{url:p}=a[0],t={};let d;try{d=await K(p);const e=d.headers.raw();t.statusCode=d.status,t.status=d.statusText,t.headers={server:Array.isArray(e.server)&&e.server.length>0?e.server[0]:"","content-type":Array.isArray(e["content-type"])&&e["content-type"].length>0?e["content-type"][0]:""},t.originalHeaders=e,t.data=await d.text()}catch(e){t.status=e.code,t.statusCode="",t.data="",t.headers={server:"","content-type":""},console.log(e)}return t}));var Q=p(7147),Z=p.n(Q);e.ipcMain.handle("writeCsv",(async(e,...a)=>{const[p,t]=a;try{Z().writeFileSync(p,t.join("\r\n"))}catch(e){console.log(e)}}));const ee=!e.app.isPackaged&&-1===process.argv.indexOf("--noDevServer");process.env.NODE_TLS_REJECT_UNAUTHORIZED=0,"win32"===process.platform&&(e.app.commandLine.appendSwitch("high-dpi-support","true"),e.app.commandLine.appendSwitch("force-device-scale-factor","1"));const ae=()=>{let p=new e.BrowserWindow({width:1280,height:1024,webPreferences:{nodeIntegration:!0,contextIsolation:!1}});return p.maximize(),ee?p.loadURL("http://localhost:8080/index.html"):p.loadFile("./index.html"),p.once("ready-to-show",(()=>{p.show(),ee&&p.webContents.openDevTools()})),p.on("closed",(()=>{p=null})),p.once("ready-to-show",(()=>{a.autoUpdater.checkForUpdatesAndNotify()})),p};let pe;e.app.on("window-all-closed",(()=>{"darwin"!==process.platform&&e.app.quit()})),e.app.whenReady().then((()=>{pe=ae(),e.app.on("activate",(()=>{0===e.BrowserWindow.getAllWindows().length&&(pe=ae())}))})),((p,t)=>{e.ipcMain.on("app_version",(e=>{e.sender.send("app_version",{version:p.getVersion()})})),e.ipcMain.on("restart_app",(()=>{a.autoUpdater.quitAndInstall()})),a.autoUpdater.on("update-available",(()=>{t.webContents.send("update_available")})),a.autoUpdater.on("update-downloaded",(()=>{t.webContents.send("update_downloaded")}))})(e.app,pe),e.ipcMain.handle("dialog",(async(a,p,t)=>e.dialog[p]({ventana:pe,...t}))),process.on("uncaughtException",(e=>{console.log({result:"process",error:e})}))})()})();